(dp0
Vhas_more
p1
I01
sVitems
p2
(lp3
(dp4
Vbody
p5
V<p>Notice <a href="https://github.com/python/cpython/blob/cc3fa204d357be5fafc10eb8c2a80fe0bca998f1/Lib/multiprocessing/dummy/__init__.py#L91-L92" rel="noreferrer">these lines</a> in <code>multiprocessing</code> package of standard libraries:</p>\u000a\u000a<pre><code>dict = dict\u000alist = list\u000a</code></pre>\u000a\u000a<p>What's the point of rebinding some names already available on <code>__builtins__</code> into the module scope?  What is it trying to achieve?  I searched for an explanation in the git blame, but this commit was large and there was no relevant comment.  </p>\u000a
p6
sVis_answered
p7
I01
sVview_count
p8
I1759
sVtags
p9
(lp10
Vpython
p11
asVlast_activity_date
p12
I1494264449
sVanswer_count
p13
I1
sVcreation_date
p14
I1494263146
sVscore
p15
I44
sVlink
p16
Vhttp://stackoverflow.com/questions/43853407/re-assigning-a-name-to-itself
p17
sVaccepted_answer_id
p18
I43853581
sVowner
p19
(dp20
Vuser_id
p21
I674039
sVprofile_image
p22
Vhttps://i.stack.imgur.com/leoFi.gif?s=128&g=1
p23
sVuser_type
p24
Vregistered
p25
sVreputation
p26
I97491
sVlink
p27
Vhttp://stackoverflow.com/users/674039/wim
p28
sVaccept_rate
p29
I95
sVdisplay_name
p30
Vwim
p31
ssVtitle
p32
VRe-assigning a name to itself
p33
sVquestion_id
p34
I43853407
sa(dp35
Vbody
p36
V<p>I have several files across several folders like this:</p>\u000a\u000a<pre><code>dir\u000a\u251c\u2500\u2500 0\u000a\u2502   \u251c\u2500\u2500 103425.xml\u000a\u2502   \u251c\u2500\u2500 105340.xml\u000a\u2502   \u251c\u2500\u2500 109454.xml\u000a\u2502\u000a\u2502\u2500\u2500 1247\u000a\u2502   \u2514\u2500\u2500 doc.xml\u000a\u251c\u2500\u2500 14568\u000a\u2502   \u2514\u2500\u2500 doc.xml\u000a\u251c\u2500\u2500 1659\u000a\u2502   \u2514\u2500\u2500 doc.xml\u000a\u251c\u2500\u2500 10450\u000a\u2502   \u2514\u2500\u2500 doc.xml\u000a\u251c\u2500\u2500 10351\u000a\u2502   \u2514\u2500\u2500 doc.xml\u000a</code></pre>\u000a\u000a<p>How can I extract all the documents into a single folder appending the folder name for each moved document:</p>\u000a\u000a<pre><code>new_dir\u000a\u251c\u2500\u2500 0_103425.xml\u000a\u251c\u2500\u2500 0_105340.xml\u000a\u251c\u2500\u2500 0_109454.xml\u000a\u251c\u2500\u2500 1247_doc.xml\u000a\u251c\u2500\u2500 14568_doc.xml\u000a\u251c\u2500\u2500 1659_doc.xml\u000a\u251c\u2500\u2500 10450_doc.xml\u000a\u251c\u2500\u2500 10351_doc.xml\u000a</code></pre>\u000a\u000a<p>I tried to extract them with:</p>\u000a\u000a<pre><code>import os\u000a\u000afor path, subdirs, files in os.walk('../dir/'):\u000a    for name in files:\u000a        print(os.path.join(path, name))\u000a</code></pre>\u000a\u000a<p><strong>UPDATE</strong></p>\u000a\u000a<p>Also, I tried to:</p>\u000a\u000a<pre><code>import os, shutil\u000afrom glob import glob\u000a\u000afiles = []\u000astart_dir = os.getcwd()\u000apattern   = "*.xml"\u000a\u000afor dir,_,_ in os.walk('../dir/'):\u000a    files.extend(glob(os.path.join(dir,pattern))) \u000afor f in files:\u000a    print(f)\u000a    shutil.move(f, '../dir/')\u000a</code></pre>\u000a\u000a<p>The above gave me the path of each file. However, I do not understand how to rename and move them:</p>\u000a\u000a<pre><code>---------------------------------------------------------------------------\u000aError                                     Traceback (most recent call last)\u000a&lt;ipython-input-50-229e4256f1f3&gt; in &lt;module&gt;()\u000a     10 for f in files:\u000a     11     print(f)\u000a---&gt; 12     shutil.move(f, '../dir/')\u000a\u000a/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/shutil.py in move(src, dst, copy_function)\u000a    540         real_dst = os.path.join(dst, _basename(src))\u000a    541         if os.path.exists(real_dst):\u000a--&gt; 542             raise Error("Destination path '%s' already exists" % real_dst)\u000a    543     try:\u000a    544         os.rename(src, real_dst)\u000a\u000aError: Destination path '../data/230948.xml' already exists\u000a</code></pre>\u000a\u000a<p>The above error shows why I would like to rename it with its folder.</p>\u000a
p37
sVis_answered
p38
I01
sVview_count
p39
I260
sVtags
p40
(lp41
Vpython
p42
aVpython-3.x
p43
aVdirectory
p44
aVglob
p45
asVlast_activity_date
p46
I1494450570
sVanswer_count
p47
I2
sVcreation_date
p48
I1494265435
sVscore
p49
I18
sVlink
p50
Vhttp://stackoverflow.com/questions/43854049/how-to-move-and-rename-documents-placed-in-several-nested-folders-into-a-new-sin
p51
sVaccepted_answer_id
p52
I43902649
sVowner
p53
(dp54
Vuser_id
p55
I4140027
sVprofile_image
p56
Vhttps://i.stack.imgur.com/N9jwH.jpg?s=128&g=1
p57
sVuser_type
p58
Vregistered
p59
sVreputation
p60
I309
sVlink
p61
Vhttp://stackoverflow.com/users/4140027/tumbleweed
p62
sVaccept_rate
p63
I72
sVdisplay_name
p64
Vtumbleweed
p65
ssVtitle
p66
VHow to move and rename documents placed in several nested folders into a new single folder with python?
p67
sVlast_edit_date
p68
I1494269832
sVquestion_id
p69
I43854049
sa(dp70
Vbody
p71
V\u000a\u000a<p>I have a dictionary with the following structure:</p>\u000a\u000a<pre class="lang-python prettyprint-override"><code>D = {\u000a   'rows': 11,\u000a   'cols': 13,\u000a   (i, j): {\u000a              'meta': 'random string',\u000a              'walls': {\u000a                  'E': True,\u000a                  'O': False,\u000a                  'N': True,\u000a                  'S': True\u000a              }\u000a           }\u000a}\u000a# i ranging in {0 .. D['rows']-1}\u000a# j ranging in {0 .. D['cols']-1}\u000a</code></pre>\u000a\u000a<p><em>I am asked to</em> write a function that takes an arbitrary object as argument and checks if it has that structure. This is what I wrote:</p>\u000a\u000a<pre class="lang-python prettyprint-override"><code>def well_formed(L):\u000a    if type(L) != dict:\u000a        return False\u000a    if 'rows' not in L:\u000a        return False\u000a    if 'cols' not in L:\u000a        return False\u000a\u000a    nr, nc = L['rows'], L['cols']\u000a\u000a    # I should also check the int-ness of nr and nc ...\u000a\u000a    if len(L) != nr*nc + 2:\u000a        return False\u000a\u000a    for i in range(nr):\u000a        for j in range(nc):\u000a            if not ((i, j) in L\u000a                and 'meta' in L[i, j]\u000a                and  'walls' in L[i, j]\u000a                and type(L[i, j]['meta']) == str\u000a                and type(L[i, j]['walls'])  == dict\u000a                and     'E' in L[i, j]['walls']\u000a                and     'N' in L[i, j]['walls']\u000a                and     'O' in L[i, j]['walls']\u000a                and     'S' in L[i, j]['walls']\u000a                and type(L[i, j]['walls']['E']) == bool\u000a                and type(L[i, j]['walls']['N']) == bool\u000a                and type(L[i, j]['walls']['O']) == bool\u000a                and type(L[i, j]['walls']['S']) == bool):\u000a                return False\u000a\u000a    return True\u000a</code></pre>\u000a\u000a<p>Although it works, I don't like it at all. Is there a Pythonic way to do it?</p>\u000a\u000a<p>I'm allowed to use just the standard library.</p>\u000a
p72
sVis_answered
p73
I01
sVview_count
p74
I1123
sVtags
p75
(lp76
Vpython
p77
aVdictionary
p78
asVlast_activity_date
p79
I1494138381
sVanswer_count
p80
I5
sVcreation_date
p81
I1494078378
sVscore
p82
I17
sVlink
p83
Vhttp://stackoverflow.com/questions/43821195/how-to-elegantly-check-if-a-dictionary-has-a-given-structure
p84
sVowner
p85
(dp86
Vuser_id
p87
I4657585
sVprofile_image
p88
Vhttps://www.gravatar.com/avatar/aaf3c4a65b2018e4bded637555635576?s=128&d=identicon&r=PG&f=1
p89
sVuser_type
p90
Vregistered
p91
sVreputation
p92
I86
sVlink
p93
Vhttp://stackoverflow.com/users/4657585/georgian
p94
sVdisplay_name
p95
Vgeorgian
p96
ssVtitle
p97
VHow to elegantly check if a dictionary has a given structure?
p98
sVlast_edit_date
p99
I1494138190
sVquestion_id
p100
I43821195
sa(dp101
Vbody
p102
V<p>Is there any obstacle that prevents <a href="https://docs.python.org/3/library/weakref.html" rel="nofollow noreferrer"><code>weakref</code></a> from doing everything that <code>__del__</code> does but with much stronger guarantees (e.g., <code>finalize</code> guarantees that the call will be made before the interpreter exits, and the order of calls is well-defined, etc.)?</p>\u000a\u000a<p>It seems that in the distant past <a href="https://mail.python.org/pipermail/python-list/2005-January/332310.html" rel="nofollow noreferrer">it was thought</a> that <code>weakref</code> would eventually lead to the removal of <code>__del__</code> from the language.</p>\u000a\u000a<p>What prevented this from happening?</p>\u000a\u000a<p>There seems to be <a href="http://stackoverflow.com/questions/43666794/use-cases-for-del">few use cases for <code>__del__</code></a>, and all the ones I'm aware of seem to work at least as well (and usually much better) with <code>weakref</code> callbacks or <code>weakref.finalize</code>.</p>\u000a\u000a<p>Update:</p>\u000a\u000a<p>With <a href="https://www.python.org/dev/peps/pep-0442/" rel="nofollow noreferrer">PEP 442</a> dramatically improving the behavior of <code>__del__</code>, and the concerns with <code>weakref</code> mentioned by @gz and @user2357112, I'm wondering if the language is generally moving towards making <code>__del__</code> more reliable, or towards using <code>weakref</code> instead of <code>__del__</code>, or both.</p>\u000a
p103
sVis_answered
p104
I01
sVview_count
p105
I180
sVtags
p106
(lp107
Vpython
p108
aVpython-3.x
p109
aVgarbage-collection
p110
aVdestructor
p111
aVweak-references
p112
asVlast_activity_date
p113
I1494949042
sVanswer_count
p114
I2
sVcreation_date
p115
I1493811214
sVscore
p116
I14
sVlink
p117
Vhttp://stackoverflow.com/questions/43758886/can-weakref-callbacks-replace-del
p118
sVaccepted_answer_id
p119
I43881370
sVowner
p120
(dp121
Vuser_id
p122
I336527
sVprofile_image
p123
Vhttps://www.gravatar.com/avatar/4a57f523157ebdf6e5a9662d2e8754b9?s=128&d=identicon&r=PG
p124
sVuser_type
p125
Vregistered
p126
sVreputation
p127
I12334
sVlink
p128
Vhttp://stackoverflow.com/users/336527/max
p129
sVaccept_rate
p130
I88
sVdisplay_name
p131
Vmax
p132
ssVtitle
p133
VCan `weakref` callbacks replace `__del__`?
p134
sVlast_edit_date
p135
I1494949042
sVquestion_id
p136
I43758886
sa(dp137
Vbody
p138
V<p>I have recently been working on creating a prime-number finding program. However, <strong>I came to notice that one function was much slower when it used arguments than when it used pre-set values</strong>.</p>\u000a\u000a<p>Across 3 different versions, it becomes clear that the variables are significantly slowing down the program, and I would like to know why.</p>\u000a\u000a<h1><em>Version 1</em>: 7.5 seconds</h1>\u000a\u000a<p>Here was the original (somewhat simplified for this question) function:</p>\u000a\u000a<pre><code>def version1(n, p):\u000a  return ((n*n - 2) &amp; ((1 &lt;&lt; p) - 1)) + ((n*n - 2) &gt;&gt; p)\u000a</code></pre>\u000a\u000a<p>When ran with the <code>timeit</code> module 100 times:</p>\u000a\u000a<pre><code>timeit.timeit("version1(200, 500000000)", "from __main__ import version1", number=100)\u000a</code></pre>\u000a\u000a<p>it takes <code>7.5</code> seconds.</p>\u000a\u000a<h1><em>Version 2</em>: 0.0001 seconds</h1>\u000a\u000a<p>However, here is the second version, in which there are no parameters, and the numbers are directly placed in the return value. The equasion is exactly the same as <em>Version 1</em>:</p>\u000a\u000a<pre><code>def version2():\u000a  return ((200*200 - 2) &amp; ((1 &lt;&lt; 500000000) - 1)) + ((200*200 - 2) &gt;&gt; 500000000)\u000a</code></pre>\u000a\u000a<p>When ran with the <code>timeit</code> module 100 times:</p>\u000a\u000a<pre><code>timeit.timeit("version2()", "from __main__ import version2", number=100\u000a</code></pre>\u000a\u000a<p>in this only takes <code>0.00001</code> seconds!</p>\u000a\u000a<h1><em>Version 3</em>: 6.3 seconds</h1>\u000a\u000a<p>Lastly, for completeness, I tried a version that had no parameters, but still kept its values as variables:</p>\u000a\u000a<pre><code>def version3():\u000a  n = 200\u000a  p = 500000000\u000a  return ((n*n - 2) &amp; ((1 &lt;&lt; p) - 1)) + ((n*n - 2) &gt;&gt; p)\u000a</code></pre>\u000a\u000a<p>When ran with <code>timeit</code>:</p>\u000a\u000a<pre><code>timeit.timeit("version3()", "from __main__ import version3", number = 100)\u000a</code></pre>\u000a\u000a<p>it took <code>6.3</code> seconds, which is relatively close to <em>Version 1</em>.</p>\u000a\u000a<p><strong>Why is it that the same function can take so much longer when there are variables involved, and how can I make <em>Version 1</em> more effient?</strong></p>\u000a
p139
sVis_answered
p140
I01
sVview_count
p141
I610
sVtags
p142
(lp143
Vpython
p144
aValgorithm
p145
aVperformance
p146
aVmath
p147
asVlast_activity_date
p148
I1494311676
sVanswer_count
p149
I2
sVcreation_date
p150
I1494094131
sVscore
p151
I12
sVlink
p152
Vhttp://stackoverflow.com/questions/43823807/why-does-using-arguments-make-this-function-so-much-slower
p153
sVaccepted_answer_id
p154
I43823830
sVowner
p155
(dp156
Vuser_id
p157
I5310423
sVprofile_image
p158
Vhttps://www.gravatar.com/avatar/e866e3af36b8fc058023d33f3631c533?s=128&d=identicon&r=PG
p159
sVuser_type
p160
Vregistered
p161
sVreputation
p162
I372
sVlink
p163
Vhttp://stackoverflow.com/users/5310423/skunkmb
p164
sVaccept_rate
p165
I100
sVdisplay_name
p166
Vskunkmb
p167
ssVtitle
p168
VWhy does using arguments make this function so much slower?
p169
sVlast_edit_date
p170
I1494311676
sVquestion_id
p171
I43823807
sa(dp172
Vbody
p173
V<p>I would like to replace or modify the gradient of an op or portion of the graph in tensorflow.  It would be ideal if I can use the existing gradient in the calculation.</p>\u000a\u000a<p>In some ways this is the opposite to what <code>tf.stop_gradient()</code> does: instead of adding a calculation which is ignored when calculating gradients, I want a calculation which is only used when calculating gradients.</p>\u000a\u000a<p>A simple example would be something which simply scales gradients by multiplying them with a constant (but does not multiply the forward calculation by a constant).  Another example would be something which clips the gradients to a given range.</p>\u000a
p174
sVis_answered
p175
I01
sVview_count
p176
I272
sVbounty_closes_date
p177
I1495173117
sVtags
p178
(lp179
Vpython
p180
aVtensorflow
p181
aVneural-network
p182
asVlast_activity_date
p183
I1494867588
sVanswer_count
p184
I4
sVcreation_date
p185
I1494215018
sVscore
p186
I12
sVlink
p187
Vhttp://stackoverflow.com/questions/43839431/tensorflow-how-to-replace-or-modify-gradient
p188
sVbounty_amount
p189
I50
sVowner
p190
(dp191
Vuser_id
p192
I1828289
sVprofile_image
p193
Vhttps://i.stack.imgur.com/S6fiE.png?s=128&g=1
p194
sVuser_type
p195
Vregistered
p196
sVreputation
p197
I10874
sVlink
p198
Vhttp://stackoverflow.com/users/1828289/alex-i
p199
sVaccept_rate
p200
I67
sVdisplay_name
p201
VAlex I
p202
ssVtitle
p203
VTensorflow: How to replace or modify gradient?
p204
sVlast_edit_date
p205
I1494257390
sVquestion_id
p206
I43839431
sa(dp207
Vbody
p208
V<p>Edited:</p>\u000a\u000a<p>I have a financial portfolio in a pandas dataframe df, where the index is the date and I have multiple financial stocks per date.</p>\u000a\u000a<p>Eg dataframe:</p>\u000a\u000a<pre><code>Date    Stock   Weight  Percentile  Final weight\u000a1/1/2000    Apple   0.010   0.75    0.010\u000a1/1/2000    IBM    0.011    0.4     0\u000a1/1/2000    Google  0.012   0.45    0\u000a1/1/2000    Nokia   0.022   0.81    0.022\u000a2/1/2000    Apple   0.014   0.56    0\u000a2/1/2000    Google  0.015   0.45    0\u000a2/1/2000    Nokia   0.016   0.55    0\u000a3/1/2000    Apple   0.020   0.52    0\u000a3/1/2000    Google  0.030   0.51    0\u000a3/1/2000    Nokia   0.040   0.47    0\u000a</code></pre>\u000a\u000a<p>I created <code>Final_weight</code> by doing assigning values of <code>Weight</code> whenever <code>Percentile</code> is greater than <code>0.7</code></p>\u000a\u000a<p>Now I want this to be a bit more sophisticated, I still want <code>Weight</code> to be assigned to <code>Final_weight</code> when <code>Percentile is &gt; 0.7</code>, however after this date (at any point in the future), rather than become 0 when a stocks <code>Percentile</code> is not <code>&gt;0.7</code>, we would still get a weight as long as the Stocks <code>Percentile</code> is above <code>0.5</code> (ie holding the position for longer than just one day).</p>\u000a\u000a<p>Then if the stock goes below <code>0.5</code> (in the near future) then <code>Final_weight would become 0</code>.</p>\u000a\u000a<p>Eg modified dataframe from above:</p>\u000a\u000a<pre><code>Date    Stock   Weight  Percentile  Final weight\u000a1/1/2000    Apple   0.010   0.75    0.010\u000a1/1/2000    IBM     0.011   0.4     0\u000a1/1/2000    Google  0.012   0.45    0\u000a1/1/2000    Nokia   0.022   0.81    0.022\u000a2/1/2000    Apple   0.014   0.56    0.014\u000a2/1/2000    Google  0.015   0.45    0\u000a2/1/2000    Nokia   0.016   0.55    0.016\u000a3/1/2000    Apple   0.020   0.52    0.020\u000a3/1/2000    Google  0.030   0.51    0\u000a3/1/2000    Nokia   0.040   0.47    0\u000a</code></pre>\u000a\u000a<p>Everyday the portfolios are different not always have the same stock from the day before.</p>\u000a
p209
sVis_answered
p210
I01
sVview_count
p211
I368
sVtags
p212
(lp213
Vpython
p214
aVpandas
p215
aVdataframe
p216
aVfinance
p217
aVportfolio
p218
asVlast_activity_date
p219
I1494606765
sVanswer_count
p220
I5
sVcreation_date
p221
I1493928532
sVscore
p222
I11
sVlink
p223
Vhttp://stackoverflow.com/questions/43791970/pandas-assigning-columns-with-multiple-conditions-and-date-thresholds
p224
sVaccepted_answer_id
p225
I43932573
sVowner
p226
(dp227
Vuser_id
p228
I7390912
sVprofile_image
p229
Vhttps://www.gravatar.com/avatar/3eb330777ef0544fd6b328f6550eb66c?s=128&d=identicon&r=PG&f=1
p230
sVuser_type
p231
Vregistered
p232
sVreputation
p233
I184
sVlink
p234
Vhttp://stackoverflow.com/users/7390912/mysterioprogrammer91
p235
sVaccept_rate
p236
I100
sVdisplay_name
p237
VMysterioProgrammer91
p238
ssVtitle
p239
VPandas: assigning columns with multiple conditions and date thresholds
p240
sVlast_edit_date
p241
I1494503665
sVquestion_id
p242
I43791970
sa(dp243
Vbody
p244
V<p>I am currently working with a file with more than 2 million lines. I've separated the lines into lists of elements (ex: <code>[a,b,c,d]</code> = 1 line, words separated).</p>\u000a\u000a<p>I'm trying to use the following code to go through all the lines:</p>\u000a\u000a<pre><code>for a in aud:\u000a    for esps in final:\u000a        if a[0] in final[esps]:\u000a            a[0] = esps\u000a</code></pre>\u000a\u000a<p>In the first for loop I'm referring to the 2 million+ lines. In the second for loop it goes through a dictionary with 2010 keys, each key with probably at least 50 corresponding values. I want to find the <code>a[0]</code> element in the lines that are equal to the values in the dictionary. If they match, I change the <code>a[0]</code> element in the selected line to the value of the key of the dictionary.</p>\u000a\u000a<p>The problem is that this code takes ages to run and I don't understand much (nothing) about optimization and how to run this much faster.\u000aI would thank a lot if anyone could tell me how to do something like this faster.</p>\u000a
p245
sVis_answered
p246
I01
sVview_count
p247
I1268
sVtags
p248
(lp249
Vpython
p250
aVdictionary
p251
asVlast_activity_date
p252
I1494217299
sVanswer_count
p253
I1
sVcreation_date
p254
I1494124563
sVscore
p255
I10
sVlink
p256
Vhttp://stackoverflow.com/questions/43827281/python-loop-optimization
p257
sVaccepted_answer_id
p258
I43827372
sVowner
p259
(dp260
Vuser_id
p261
I7349540
sVprofile_image
p262
Vhttps://www.gravatar.com/avatar/13b21fe366c75a48db8258233ca53445?s=128&d=identicon&r=PG&f=1
p263
sVuser_type
p264
Vregistered
p265
sVreputation
p266
I60
sVlink
p267
Vhttp://stackoverflow.com/users/7349540/targaryel
p268
sVdisplay_name
p269
VTargaryel
p270
ssVtitle
p271
VPython loop optimization
p272
sVlast_edit_date
p273
I1494124718
sVquestion_id
p274
I43827281
sa(dp275
Vbody
p276
V<p>Is there an easy way to do something at the beginning and end of each function in a class? I've looked into <code>__getattribute__</code>, but I don't think that I can use it in this situation?</p>\u000a\u000a<p>Here's a simplified version of what I'm trying to do:</p>\u000a\u000a<pre><code>class Thing():\u000a    def __init__(self):\u000a        self.busy = False\u000a\u000a    def func_1(self):\u000a        if self.busy: \u000a            return None\u000a        self.busy = True\u000a          ...\u000a        self.busy = False\u000a\u000a    def func_2(self):\u000a        if self.busy: \u000a            return None\u000a        self.busy = True\u000a          ...\u000a        self.busy = False\u000a    ...\u000a</code></pre>\u000a
p277
sVis_answered
p278
I01
sVview_count
p279
I302
sVtags
p280
(lp281
Vpython
p282
aVpython-3.x
p283
aVclass
p284
asVlast_activity_date
p285
I1494733978
sVanswer_count
p286
I2
sVcreation_date
p287
I1494638780
sVscore
p288
I10
sVlink
p289
Vhttp://stackoverflow.com/questions/43948359/do-something-at-the-beginning-end-of-methods
p290
sVaccepted_answer_id
p291
I43948381
sVowner
p292
(dp293
Vuser_id
p294
I3571147
sVprofile_image
p295
Vhttps://www.gravatar.com/avatar/ac29a2f09318254259a59983e54d6471?s=128&d=identicon&r=PG&f=1
p296
sVuser_type
p297
Vregistered
p298
sVreputation
p299
I92
sVlink
p300
Vhttp://stackoverflow.com/users/3571147/diligar
p301
sVaccept_rate
p302
I60
sVdisplay_name
p303
Vdiligar
p304
ssVtitle
p305
VDo something at the beginning &amp; end of methods
p306
sVlast_edit_date
p307
I1494639471
sVquestion_id
p308
I43948359
sa(dp309
Vbody
p310
V<p>I am learning python, but I'm a bit confused by the following result.</p>\u000a\u000a<pre><code>In [41]: 1 == True\u000aOut[41]: True\u000a\u000aIn [42]: if(1):\u000a    ...:     print('111')\u000a    ...:     \u000a111\u000a\u000aIn [43]: ... == True\u000aOut[43]: False &lt;===== why this is False while '1 == True' is True in previous sample\u000a\u000aIn [44]: if (...): &lt;==== here ... just behaves like True\u000a    ...:     print('...')\u000a    ...:     \u000a...\u000a</code></pre>\u000a\u000a<p>According to <a href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow noreferrer">the documentation</a>, <code>...</code> has a truth value of True.</p>\u000a\u000a<p>But I still feel the above code a bit inconsistent.</p>\u000a\u000a<p>...And something more interesting:</p>\u000a\u000a<pre><code>In [48]: 2==True\u000aOut[48]: False &lt;===== why 1==True returns True while 2==True returns False?\u000a\u000aIn [49]: if(2):\u000a    ...:     print('222')\u000a    ...:     \u000a222\u000a</code></pre>\u000a
p311
sVis_answered
p312
I01
sVview_count
p313
I375
sVtags
p314
(lp315
Vpython
p316
aVpython-3.x
p317
aVif-statement
p318
aVtruthiness
p319
asVlast_activity_date
p320
I1494604202
sVanswer_count
p321
I4
sVcreation_date
p322
I1494514061
sVscore
p323
I10
sVlink
p324
Vhttp://stackoverflow.com/questions/43918816/why-does-true-return-false-in-python-3
p325
sVowner
p326
(dp327
Vuser_id
p328
I264052
sVprofile_image
p329
Vhttps://www.gravatar.com/avatar/8ccbe08a132ba61eae9ff8984ca44e81?s=128&d=identicon&r=PG
p330
sVuser_type
p331
Vregistered
p332
sVreputation
p333
I14564
sVlink
p334
Vhttp://stackoverflow.com/users/264052/smwikipedia
p335
sVaccept_rate
p336
I66
sVdisplay_name
p337
Vsmwikipedia
p338
ssVtitle
p339
VWhy does ... == True return False in Python 3?
p340
sVlast_edit_date
p341
I1494556849
sVquestion_id
p342
I43918816
sa(dp343
Vbody
p344
V<p>(This question can be read alone, but is a sequel to: <a href="http://stackoverflow.com/questions/43735396/timeseries-from-csv-data-timestamp-and-events">Timeseries from CSV data (Timestamp and events)</a>)</p>\u000a\u000a<p>I would like to visualize CSV data (from 2 files) as shown below, by a timeseries representation, using python's pandas module (see links below).</p>\u000a\u000a<p>Sample data of df1:</p>\u000a\u000a<pre><code>             TIMESTAMP  eventid\u000a0  2017-03-20 02:38:24        1\u000a1  2017-03-21 05:59:41        1\u000a2  2017-03-23 12:59:58        1\u000a3  2017-03-24 01:00:07        1\u000a4  2017-03-27 03:00:13        1\u000a</code></pre>\u000a\u000a<p>The 'eventid' column always contains the value of 1, and I am trying to show the sum of events for each day in the dataset. \u000aThe 2nd dataset, df0, has similar structure but contains only zeros:</p>\u000a\u000a<p>Sample data of df0:</p>\u000a\u000a<pre><code>             TIMESTAMP  eventid\u000a0  2017-03-21 01:38:24        0\u000a1  2017-03-21 03:59:41        0\u000a2  2017-03-22 11:59:58        0\u000a3  2017-03-24 01:03:07        0\u000a4  2017-03-26 03:50:13        0\u000a</code></pre>\u000a\u000a<p>The x-axis label only shows the same date, and my question is: How can the different dates be shown? (What causes the same date to be shown multiple times on x labels?)</p>\u000a\u000a<p>script so far:</p>\u000a\u000a<pre><code>import pandas as pd\u000aimport matplotlib.pyplot as plt\u000aimport matplotlib.ticker as ticker\u000a\u000adf1 = pd.read_csv('timestamp01.csv',  parse_dates=True, index_col='TIMESTAMP')\u000adf0 = pd.read_csv('timestamp00.csv',  parse_dates=True, index_col='TIMESTAMP')\u000a\u000af, (ax1, ax2) = plt.subplots(1, 2)\u000aax1.plot(df0.resample('D').size())\u000a\u000aax1.set_xlim([pd.to_datetime('2017-01-27'), pd.to_datetime('2017-04-30')])  \u000a\u000aax1.xaxis.set_major_formatter(ticker.FixedFormatter\u000a(df0.index.strftime('%Y-%m-%d')))\u000a\u000aplt.setp(ax1.xaxis.get_majorticklabels(), rotation=15)\u000a\u000aax2.plot(df1.resample('D').size())\u000aax2.set_xlim([pd.to_datetime('2017-03-22'), pd.to_datetime('2017-04-29')])\u000aax2.xaxis.set_major_formatter(ticker.FixedFormatter(df1.index.strftime\u000a('%Y-%m-%d')))\u000aplt.setp(ax2.xaxis.get_majorticklabels(), rotation=15)\u000aplt.show()\u000a</code></pre>\u000a\u000a<p>Output: (<a href="https://www.dropbox.com/s/z21koflkzglm6c3/figure_1.png?dl=0" rel="noreferrer">https://www.dropbox.com/s/z21koflkzglm6c3/figure_1.png?dl=0</a>)\u000a<a href="https://i.stack.imgur.com/PqfFT.png" rel="noreferrer"><img src="https://i.stack.imgur.com/PqfFT.png" alt="enter image description here"></a></p>\u000a\u000a<p>Links I have tried to follow:</p>\u000a\u000a<ul>\u000a<li><p><a href="http://pandas.pydata.org/pandas-docs/stable/visualization.html" rel="noreferrer">http://pandas.pydata.org/pandas-docs/stable/visualization.html</a></p></li>\u000a<li><p><a href="http://stackoverflow.com/questions/36145232/multiple-timeseries-plots-from-pandas-dataframe">Multiple timeseries plots from Pandas Dataframe</a></p></li>\u000a<li><p><a href="http://stackoverflow.com/questions/12945971/pandas-timeseries-plot-setting-x-axis-major-and-minor-ticks-and-labels">Pandas timeseries plot setting x-axis major and minor ticks and labels</a></p></li>\u000a</ul>\u000a\u000a<p>Any help is much appreciated.</p>\u000a
p345
sVis_answered
p346
I01
sVview_count
p347
I206
sVtags
p348
(lp349
Vpython
p350
aVpandas
p351
aVmatplotlib
p352
aVdataframe
p353
aVtime-series
p354
asVlast_activity_date
p355
I1493936861
sVanswer_count
p356
I1
sVcreation_date
p357
I1493750045
sVscore
p358
I10
sVlink
p359
Vhttp://stackoverflow.com/questions/43744910/timeseries-plot-from-csv-data-timestamp-and-events-x-label-constant
p360
sVaccepted_answer_id
p361
I43793737
sVowner
p362
(dp363
Vuser_id
p364
I7445528
sVprofile_image
p365
Vhttps://i.stack.imgur.com/s34mx.jpg?s=128&g=1
p366
sVuser_type
p367
Vregistered
p368
sVreputation
p369
I92
sVlink
p370
Vhttp://stackoverflow.com/users/7445528/gustav-rasmussen
p371
sVaccept_rate
p372
I100
sVdisplay_name
p373
VGustav Rasmussen
p374
ssVtitle
p375
VTimeseries plot from CSV data (Timestamp and events): x-label constant
p376
sVlast_edit_date
p377
I1493932216
sVquestion_id
p378
I43744910
sa(dp379
Vbody
p380
V<p>How can I concatenate two items when yielding from a function in python?</p>\u000a\u000a<p>The base case:</p>\u000a\u000a<pre><code>import itertools\u000a\u000adef test():\u000a    for number in range(0,10):\u000a        yield number\u000a\u000alist(test()) # [0...9]\u000a</code></pre>\u000a\u000a<p>What if I want to yield both the <code>number</code> and its square <code>number**2</code></p>\u000a\u000a<pre><code>import itertools\u000a\u000adef test():\u000a    for number in range(0,10):\u000a        yield itertools.chain.from_iterable([\u000a            number,number*2\u000a        ])\u000a\u000alist(test()) \u000a\u000a# [0,0,1,1,2,4,3,9,...] pretended\u000a# &lt;itertools.chain at 0x135decfd0&gt; ... what I got\u000a</code></pre>\u000a\u000a<p>However doing <code>itertools.chain.from_iterable([generator1, generator2])</code> from the outside gives the expected result.</p>\u000a\u000a<pre><code>def first_list():\u000a    for number in range(0,5):\u000a        yield number\u000a\u000adef second_list():\u000a    for number in range(5,10):\u000a        yield number\u000a\u000alist(itertools.chain.from_iterable([first_list(), second_list()]))\u000a</code></pre>\u000a
p381
sVis_answered
p382
I01
sVview_count
p383
I406
sVtags
p384
(lp385
Vpython
p386
aVgenerator
p387
aVyield
p388
asVlast_activity_date
p389
I1494598224
sVanswer_count
p390
I3
sVcreation_date
p391
I1494453838
sVscore
p392
I9
sVlink
p393
Vhttp://stackoverflow.com/questions/43903437/concatenate-while-yielding
p394
sVaccepted_answer_id
p395
I43903580
sVowner
p396
(dp397
Vuser_id
p398
I5154393
sVprofile_image
p399
Vhttps://www.gravatar.com/avatar/24cc3d1cc3cfc87790a7ec67acc86e94?s=128&d=identicon&r=PG&f=1
p400
sVuser_type
p401
Vregistered
p402
sVreputation
p403
I140
sVlink
p404
Vhttp://stackoverflow.com/users/5154393/raul-ferreira
p405
sVaccept_rate
p406
I85
sVdisplay_name
p407
Vraul ferreira
p408
ssVtitle
p409
VConcatenate while yielding
p410
sVlast_edit_date
p411
I1494455148
sVquestion_id
p412
I43903437
sa(dp413
Vbody
p414
V<p>I have a character string <code>'aabaacaba'</code>. Starting from left, I am trying to get substrings of all sizes >=2, which appear later in the string. For instance, <code>aa</code> appears again in the string and so is the case with <code>ab</code>. </p>\u000a\u000a<p>I wrote following regex code:</p>\u000a\u000a<pre><code>re.findall(r'([a-z]{2,})(?:[a-z]*)(?:\u005c1)', 'aabaacaba')\u000a</code></pre>\u000a\u000a<p>and I get ['aa'] as answer. Regular expression misses ab pattern. I think this is because of overlapping characters. Please suggest a solution, so that the expression could be fixed. Thank you. </p>\u000a
p415
sVis_answered
p416
I01
sVview_count
p417
I129
sVtags
p418
(lp419
Vpython
p420
aVregex
p421
aVsubstr
p422
asVlast_activity_date
p423
I1494746749
sVanswer_count
p424
I1
sVcreation_date
p425
I1494727465
sVscore
p426
I9
sVlink
p427
Vhttp://stackoverflow.com/questions/43959719/regex-string-and-substring
p428
sVaccepted_answer_id
p429
I43959935
sVowner
p430
(dp431
Vuser_id
p432
I243796
sVprofile_image
p433
Vhttps://www.gravatar.com/avatar/3196b6813214a27b8fa49dd0dbfca9cb?s=128&d=identicon&r=PG
p434
sVuser_type
p435
Vregistered
p436
sVreputation
p437
I723
sVlink
p438
Vhttp://stackoverflow.com/users/243796/sumit
p439
sVaccept_rate
p440
I89
sVdisplay_name
p441
VSumit
p442
ssVtitle
p443
Vregex string and substring
p444
sVlast_edit_date
p445
I1494731467
sVquestion_id
p446
I43959719
sa(dp447
Vbody
p448
V<p>I continue to investigate about pipeline. My aim is to execute each step of machine learning only with pipeline. It will be more flexible and easier to adapt my pipeline with an other use case. So what I do:</p>\u000a\u000a<ul>\u000a<li>Step 1: Fill NaN Values</li>\u000a<li>Step 2: Transforming Categorical Values into Numbers</li>\u000a<li>Step 3: Classifier</li>\u000a<li>Step 4: GridSearch</li>\u000a<li>Step 5: Add a metrics (failed)</li>\u000a</ul>\u000a\u000a<p>Here is my code: </p>\u000a\u000a<pre><code>import pandas as pd\u000afrom sklearn.base import BaseEstimator, TransformerMixin\u000afrom sklearn.feature_selection import SelectKBest\u000afrom sklearn.preprocessing import LabelEncoder\u000afrom sklearn.model_selection import GridSearchCV\u000afrom sklearn.model_selection import train_test_split\u000afrom sklearn.ensemble import RandomForestClassifier\u000afrom sklearn.pipeline import Pipeline\u000afrom sklearn.metrics import roc_curve, auc\u000aimport matplotlib.pyplot as plt\u000afrom sklearn.metrics import confusion_matrix\u000afrom sklearn.metrics import f1_score\u000a\u000a\u000aclass FillNa(BaseEstimator, TransformerMixin):\u000a\u000a    def transform(self, x, y=None):\u000a            non_numerics_columns = x.columns.difference(\u000a                x._get_numeric_data().columns)\u000a            for column in x.columns:\u000a                if column in non_numerics_columns:\u000a                    x.loc[:, column] = x.loc[:, column].fillna(\u000a                        df[column].value_counts().idxmax())\u000a                else:\u000a                    x.loc[:, column] = x.loc[:, column].fillna(\u000a                        x.loc[:, column].mean())\u000a            return x\u000a\u000a    def fit(self, x, y=None):\u000a        return self\u000a\u000a\u000aclass CategoricalToNumerical(BaseEstimator, TransformerMixin):\u000a\u000a    def transform(self, x, y=None):\u000a        non_numerics_columns = x.columns.difference(\u000a            x._get_numeric_data().columns)\u000a        le = LabelEncoder()\u000a        for column in non_numerics_columns:\u000a            x.loc[:, column] = x.loc[:, column].fillna(\u000a                x.loc[:, column].value_counts().idxmax())\u000a            le.fit(x.loc[:, column])\u000a            x.loc[:, column] = le.transform(x.loc[:, column]).astype(int)\u000a        return x\u000a\u000a    def fit(self, x, y=None):\u000a        return self\u000a\u000a\u000aclass Perf(BaseEstimator, TransformerMixin):\u000a\u000a    def fit(self, clf, x, y, perf="all"):\u000a        """Only for classifier model.\u000a\u000a        Return AUC, ROC, Confusion Matrix and F1 score from a classifier and df\u000a        You can put a list of eval instead a string for eval paramater.\u000a        Example: eval=['all', 'auc', 'roc', 'cm', 'f1'] will return these 4\u000a        evals.\u000a        """\u000a        evals = {}\u000a        y_pred_proba = clf.predict_proba(x)[:, 1]\u000a        y_pred = clf.predict(x)\u000a        perf_list = perf.split(',')\u000a        if ("all" or "roc") in perf.split(','):\u000a            fpr, tpr, _ = roc_curve(y, y_pred_proba)\u000a            roc_auc = round(auc(fpr, tpr), 3)\u000a            plt.style.use('bmh')\u000a            plt.figure(figsize=(12, 9))\u000a            plt.title('ROC Curve')\u000a            plt.plot(fpr, tpr, 'b',\u000a                     label='AUC = {}'.format(roc_auc))\u000a            plt.legend(loc='lower right', borderpad=1, labelspacing=1,\u000a                       prop={"size": 12}, facecolor='white')\u000a            plt.plot([0, 1], [0, 1], 'r--')\u000a            plt.xlim([-0.1, 1.])\u000a            plt.ylim([-0.1, 1.])\u000a            plt.ylabel('True Positive Rate')\u000a            plt.xlabel('False Positive Rate')\u000a            plt.show()\u000a\u000a        if "all" in perf_list or "auc" in perf_list:\u000a            fpr, tpr, _ = roc_curve(y, y_pred_proba)\u000a            evals['auc'] = auc(fpr, tpr)\u000a\u000a        if "all" in perf_list or "cm" in perf_list:\u000a            evals['cm'] = confusion_matrix(y, y_pred)\u000a\u000a        if "all" in perf_list or "f1" in perf_list:\u000a            evals['f1'] = f1_score(y, y_pred)\u000a\u000a        return evals\u000a\u000a\u000apath = '~/proj/akd-doc/notebooks/data/'\u000adf = pd.read_csv(path + 'titanic_tuto.csv', sep=';')\u000ay = df.pop('Survival-Status').replace(to_replace=['dead', 'alive'],\u000a                                      value=[0., 1.])\u000aX = df.copy()\u000aX_train, X_test, y_train, y_test = train_test_split(\u000a    X.copy(), y.copy(), test_size=0.2, random_state=42)\u000a\u000apercent = 0.50\u000anb_features = round(percent * df.shape[1]) + 1\u000aclf = RandomForestClassifier()\u000apipeline = Pipeline([('fillna', FillNa()),\u000a                     ('categorical_to_numerical', CategoricalToNumerical()),\u000a                     ('features_selection', SelectKBest(k=nb_features)),\u000a                     ('random_forest', clf),\u000a                     ('perf', Perf())])\u000a\u000aparams = dict(random_forest__max_depth=list(range(8, 12)),\u000a              random_forest__n_estimators=list(range(30, 110, 10)))\u000acv = GridSearchCV(pipeline, param_grid=params)\u000acv.fit(X_train, y_train)\u000a</code></pre>\u000a\u000a<p>I am aware that it is not ideal to print a roc curve but that's not the problem right now.</p>\u000a\u000a<p>So, when I execute this code I have:</p>\u000a\u000a<pre><code>TypeError: If no scoring is specified, the estimator passed should have a 'score' method. The estimator Pipeline(steps=[('fillna', FillNa()), ('categorical_to_numerical', CategoricalToNumerical()), ('features_selection', SelectKBest(k=10, score_func=&lt;function f_classif at 0x7f4ed4c3eae8&gt;)), ('random_forest', RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\u000a            max_depth=None,...=1, oob_score=False, random_state=None,\u000a            verbose=0, warm_start=False)), ('perf', Perf())]) does not.\u000a</code></pre>\u000a\u000a<p>I'm interested in all ideas... </p>\u000a
p449
sVis_answered
p450
I01
sVview_count
p451
I127
sVtags
p452
(lp453
Vpython
p454
aVpandas
p455
aVmachine-learning
p456
aVscikit-learn
p457
aVpipeline
p458
asVlast_activity_date
p459
I1493914619
sVanswer_count
p460
I1
sVcreation_date
p461
I1493911674
sVscore
p462
I9
sVlink
p463
Vhttp://stackoverflow.com/questions/43787107/use-a-metric-after-a-classifier-in-a-pipeline
p464
sVaccepted_answer_id
p465
I43787277
sVowner
p466
(dp467
Vuser_id
p468
I5611812
sVprofile_image
p469
Vhttps://www.gravatar.com/avatar/37f102bec7961c676c91fd65617ba61e?s=128&d=identicon&r=PG&f=1
p470
sVuser_type
p471
Vregistered
p472
sVreputation
p473
I103
sVlink
p474
Vhttp://stackoverflow.com/users/5611812/jeremie-guez
p475
sVdisplay_name
p476
VJeremie Guez
p477
ssVtitle
p478
VUse a metric after a classifier in a Pipeline
p479
sVquestion_id
p480
I43787107
sa(dp481
Vbody
p482
V<p>I implemented a simple network 'game' in Python - server draws a random number, and then the client tries to guess it. My application works great, when the client guesses the number, it disconnects from server (it is handled on client's side). </p>\u000a\u000a<p>However, after the proper guess, the number is still the same. I would like to modify the application, such that when the client guesses the number, the server should then rand a new number, so other clients should guess the new one. How can I do this?</p>\u000a\u000a<p>Some template, just to draw an attention to the problem: </p>\u000a\u000a<pre><code>#!/usr/bin/env python\u000a\u000afrom random import randint\u000aimport socket, select\u000afrom time import gmtime, strftime\u000aimport threading\u000aimport sys\u000a\u000aclass Handler(threading.Thread):\u000a    def __init__(self, connection, randomnumber):\u000a        threading.Thread.__init__(self)\u000a        self.connection = connection\u000a        self.randomnumber = randomnumber\u000a\u000a    def run(self):\u000a        while True:\u000a            try:\u000a                data = self.connection.recv(1024)\u000a\u000a                if data:\u000a\u000a                    print data\u000a\u000a                    try:\u000a                        num = int(data)\u000a\u000a                        if Server.guess(num) :\u000a                            msg = "You won! This is the right number!"\u000a                            self.connection.send(msg)\u000a                            break\u000a                        else :\u000a                            msg = "Try again!"\u000a                            self.connection.send(msg)\u000a\u000a\u000a                    except ValueError, e:\u000a                        msg = "%s" % e\u000a                        self.connection.send(msg)\u000a                else:\u000a                    msg = "error"\u000a                    self.connection.send(msg)\u000a\u000a            except socket.error:\u000a                self.connection.close()\u000a                break\u000a        self.connection.close()\u000a\u000a\u000aclass Server:\u000a    def __init__(self, ip, port):\u000a        self.ip = ip\u000a        self.port = port\u000a        self.address = (self.ip, self.port)\u000a        self.server_socket = None\u000a        self.randnum = randint(1, 100)\u000a\u000a\u000a    @classmethod\u000a    def guess(cls, no):\u000a        if cls.randnum == no:\u000a            cls.randnum = randint(1, 1000)\u000a            result = True\u000a        else:\u000a            result = False\u000a        return reslut\u000a\u000a    def run(self):\u000a        try:\u000a            self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\u000a            self.server_socket.bind((self.ip, self.port))\u000a            self.server_socket.listen(10)\u000a\u000a            print 'Num is %s' % self.randnum\u000a\u000a            while True:\u000a                connection, (ip, port) = self.server_socket.accept()\u000a\u000a                c = Handler(connection, self.randnum)\u000a                c.start()\u000a\u000a        except socket.error, e:\u000a            if self.server_socket:\u000a                self.server_socket.close()\u000a            sys.exit(1)\u000a\u000a\u000aif __name__ == '__main__':\u000a    s = Server('127.0.0.1', 1234)\u000a    s.run()\u000a</code></pre>\u000a
p483
sVis_answered
p484
I01
sVview_count
p485
I172
sVtags
p486
(lp487
Vpython
p488
aVmultithreading
p489
asVlast_activity_date
p490
I1494588762
sVanswer_count
p491
I2
sVcreation_date
p492
I1493808818
sVscore
p493
I9
sVlink
p494
Vhttp://stackoverflow.com/questions/43757999/modify-servers-variable-from-clients-thread-threading-python
p495
sVowner
p496
(dp497
Vuser_id
p498
I1582481
sVprofile_image
p499
Vhttps://i.stack.imgur.com/MAazu.jpg?s=128&g=1
p500
sVuser_type
p501
Vregistered
p502
sVreputation
p503
I880
sVlink
p504
Vhttp://stackoverflow.com/users/1582481/yak
p505
sVaccept_rate
p506
I63
sVdisplay_name
p507
Vyak
p508
ssVtitle
p509
VModify server&#39;s variable from client&#39;s thread (threading, python)
p510
sVlast_edit_date
p511
I1494435326
sVquestion_id
p512
I43757999
sa(dp513
Vbody
p514
V<p>I am attempting to pass a shared secret to child processes. In a Linux environment this works. In a Windows environment the child does not receive the shared secret. The three files below are a simple example of what I'm trying to do:</p>\u000a\u000a<h3>main.py</h3>\u000a\u000a<pre><code>import multiprocessing\u000aimport module1\u000aimport module2\u000a\u000aif __name__ == "__main__":\u000a    module1.init()\u000a    process = multiprocessing.Process(target=module2.start)\u000a    process.start()\u000a    process.join()\u000a</code></pre>\u000a\u000a<h3>module1.py</h3>\u000a\u000a<pre><code>import ctypes\u000aimport multiprocessing\u000a\u000ax = None\u000a\u000adef init():\u000a    global x\u000a    x = multiprocessing.Value(ctypes.c_wchar_p, "asdf")\u000a</code></pre>\u000a\u000a<h3>module2.py</h3>\u000a\u000a<pre><code>import module1\u000a\u000adef start():\u000a    print(module1.x.value)\u000a</code></pre>\u000a\u000a<hr>\u000a\u000a<p>In an Ubuntu 14.04 environment, on Python 3.5, I receive the following output:</p>\u000a\u000a<pre><code>$ python3 main.py\u000aasdf\u000a</code></pre>\u000a\u000a<p>In a CentOS 7 environment, I receiving the following output:</p>\u000a\u000a<pre><code>$ python3 main.py\u000aasdf\u000a</code></pre>\u000a\u000a<p>Using the Windows Subsystem for Linux on Windows 10 (both before and after the Creator Update, so Ubuntu 14.04 and 16.04) I get the following output:</p>\u000a\u000a<pre><code>$ python3 main.py\u000aasdf\u000a</code></pre>\u000a\u000a<p>However, in both Windows 7 and Windows 10 environments, using either 3.5 or 3.6, I am getting an <code>AttributeError</code> instead of the above output:</p>\u000a\u000a<pre><code>Process Process-1:\u000aTraceback (most recent call last):\u000a  File "C:\u005cPython\u005cPython35\u005clib\u005cmultiprocessing\u005cprocess.py", line 249, in _bootstrap\u000a    self.run()\u000a  File "C:\u005cPython\u005cPython35\u005clib\u005cmultiprocessing\u005cprocess.py", line 93, in run\u000a    self._target(*self._args, **self._kwargs)\u000a  File "H:\u005cDevelopment\u005creplicate-bug\u005cmodule2.py", line 5, in start\u000a    print(module1.x.value)\u000aAttributeError: 'NoneType' object has no attribute 'value'\u000a</code></pre>\u000a\u000a<hr>\u000a\u000a<p>I am using a <a href="https://docs.python.org/3/library/multiprocessing.html#shared-ctypes-objects" rel="noreferrer">shared ctype</a>. This value should be inherited by the child process. </p>\u000a\u000a<p>Why do I receive this <code>AttributeError</code> in a Windows environment, but not a Linux environment? </p>\u000a
p515
sVis_answered
p516
I01
sVview_count
p517
I251
sVtags
p518
(lp519
Vpython
p520
aVlinux
p521
aVwindows
p522
aVpython-multiprocessing
p523
aVattributeerror
p524
asVlast_activity_date
p525
I1493654558
sVanswer_count
p526
I1
sVcreation_date
p527
I1493608487
sVscore
p528
I9
sVlink
p529
Vhttp://stackoverflow.com/questions/43713806/multiprocessing-output-differs-between-linux-and-windows-why
p530
sVowner
p531
(dp532
Vuser_id
p533
I189134
sVprofile_image
p534
Vhttps://i.stack.imgur.com/jFsyb.png?s=128&g=1
p535
sVuser_type
p536
Vregistered
p537
sVreputation
p538
I23735
sVlink
p539
Vhttp://stackoverflow.com/users/189134/andy
p540
sVaccept_rate
p541
I97
sVdisplay_name
p542
VAndy
p543
ssVtitle
p544
VMultiprocessing output differs between Linux and Windows - Why?
p545
sVlast_edit_date
p546
I1493648730
sVquestion_id
p547
I43713806
sa(dp548
Vbody
p549
V<p>I wanted to test the performance of vectorizing code in python:</p>\u000a\u000a<pre><code>import timeit\u000aimport numpy as np\u000a\u000adef func1():\u000a  x = np.arange(1000)\u000a  sum = np.sum(x*2)\u000a  return sum\u000a\u000adef func2():\u000a  sum = 0\u000a  for i in xrange(1000):\u000a    sum += i*2\u000a  return sum\u000a\u000adef func3():\u000a  sum = 0\u000a  for i in xrange(0,1000,4):\u000a    x = np.arange(i,i+4,1)\u000a    sum += np.sum(x*2)\u000a  return sum\u000a\u000aprint timeit.timeit(func1, number = 1000)\u000aprint timeit.timeit(func2, number = 1000)\u000aprint timeit.timeit(func3, number = 1000)\u000a</code></pre>\u000a\u000a<p>The code gives the following output:</p>\u000a\u000a<pre><code>0.0105729103088\u000a0.069864988327\u000a0.983253955841\u000a</code></pre>\u000a\u000a<p>The performance difference in the first and second functions are not surprising. But I was surprised that the 3rd function is significantly slower than the other functions. </p>\u000a\u000a<p>I am much more familiar in vectorising code in C than in Python and the 3rd function is more C-like - running a for loop and processing 4 numbers in one instruction in each loop. To my understanding numpy calls a C function and then vectorize the code in C. So if this is the case my code is also passing 4 numbers to numpy each at a time. The code shouldn't perform better when I pass more numbers at once. So why is it much more slower? Is it because of the overhead in calling a numpy function?</p>\u000a\u000a<p>Besides, the reason that I even came up with the 3rd function in the first place is because I'm worried about the performance of the large amount of memory allocation to <code>x</code> in <code>func1</code>. </p>\u000a\u000a<p>Is my worry valid? Why and how can I improve it or why not? </p>\u000a\u000a<p>Thanks in advance. </p>\u000a\u000a<p>Edit: </p>\u000a\u000a<p>For curiosity sake, although it defeats my original purpose for creating the 3rd version, I have looked into roganjosh's suggestion and tried the following edit.</p>\u000a\u000a<pre><code>def func3():\u000a  sum = 0\u000a  x = np.arange(0,1000)\u000a  for i in xrange(0,1000,4):\u000a    sum += np.sum(x[i:i+4]*2)\u000a  return sum\u000a</code></pre>\u000a\u000a<p>The output:</p>\u000a\u000a<pre><code>0.0104308128357\u000a0.0630609989166\u000a0.748773813248\u000a</code></pre>\u000a\u000a<p>There is an improvement, but still a large gap compared with the other functions.</p>\u000a\u000a<p>Is it because <code>x[i:i+4]</code> still creates a new array?   </p>\u000a\u000a<p>Edit 2:</p>\u000a\u000a<p>I've modified the code again according to Daniel's suggestion.</p>\u000a\u000a<pre><code>def func1():\u000a  x = np.arange(1000)\u000a  x *= 2\u000a  return x.sum()\u000a\u000adef func3():\u000a  sum = 0\u000a  x = np.arange(0,1000)\u000a  for i in xrange(0,1000,4):\u000a    x[i:i+4] *= 2\u000a    sum += x[i:i+4].sum()\u000a  return sum\u000a</code></pre>\u000a\u000a<p>The output:</p>\u000a\u000a<pre><code>0.00824999809265\u000a0.0660569667816\u000a0.598328828812\u000a</code></pre>\u000a\u000a<p>There is another speedup. So the declaration of numpy arrays are definitely a problem.Now in func3 there should be one array declaration only, but yet the time is still way slower. Is it because of the overhead of calling numpy arrays?</p>\u000a
p550
sVis_answered
p551
I01
sVview_count
p552
I244
sVtags
p553
(lp554
Vpython
p555
aVperformance
p556
aVnumpy
p557
aVvectorization
p558
asVlast_activity_date
p559
I1494109700
sVanswer_count
p560
I3
sVcreation_date
p561
I1494092110
sVscore
p562
I8
sVlink
p563
Vhttp://stackoverflow.com/questions/43823473/performance-in-different-vectorization-method-in-numpy
p564
sVaccepted_answer_id
p565
I43824239
sVowner
p566
(dp567
Vuser_id
p568
I7973767
sVprofile_image
p569
Vhttps://www.gravatar.com/avatar/9f6c9bcae13b13dccf3387fb4024bae8?s=128&d=identicon&r=PG&f=1
p570
sVuser_type
p571
Vregistered
p572
sVreputation
p573
I43
sVlink
p574
Vhttp://stackoverflow.com/users/7973767/batrobin
p575
sVdisplay_name
p576
VBatrobin
p577
ssVtitle
p578
VPerformance in different vectorization method in numpy
p579
sVlast_edit_date
p580
I1494095838
sVquestion_id
p581
I43823473
sa(dp582
Vbody
p583
V<p>Say I make a list comprehension that looks something like this:</p>\u000a\u000a<pre><code>i = range(5)\u000aa = [f(i) for i in i]\u000a</code></pre>\u000a\u000a<p>for some function <code>f</code>. Will using a dummy name identical to the iterator ever yield unexpected results? Sometimes I have variable names that are individual letters, and to me it is more readable to stick with the same letter rather than assigning a new one, like <code>[f(x) for x in x]</code> instead of <code>[f(i) for i in x]</code> (for instance, if the letter of the iterator <code>x</code> is <strong>meaningful</strong>, I will wonder what the heck <code>i</code> is).</p>\u000a
p584
sVis_answered
p585
I01
sVview_count
p586
I404
sVtags
p587
(lp588
Vpython
p589
aVpython-3.x
p590
aVlist-comprehension
p591
aVdictionary-comprehension
p592
asVlast_activity_date
p593
I1493698325
sVanswer_count
p594
I2
sVcreation_date
p595
I1493670277
sVscore
p596
I8
sVlink
p597
Vhttp://stackoverflow.com/questions/43725990/python-list-comprehension-with-dummy-names-identical-to-iterator-name-ill-advis
p598
sVaccepted_answer_id
p599
I43726205
sVowner
p600
(dp601
Vuser_id
p602
I4970632
sVprofile_image
p603
Vhttps://www.gravatar.com/avatar/8884eb343ff63eea10d339439881670b?s=128&d=identicon&r=PG&f=1
p604
sVuser_type
p605
Vregistered
p606
sVreputation
p607
I428
sVlink
p608
Vhttp://stackoverflow.com/users/4970632/luke-davis
p609
sVaccept_rate
p610
I79
sVdisplay_name
p611
VLuke Davis
p612
ssVtitle
p613
VPython list comprehension with dummy names identical to iterator name: ill-advised?
p614
sVlast_edit_date
p615
I1493670702
sVquestion_id
p616
I43725990
sa(dp617
Vbody
p618
V<p>I have the following dict, with keys as tuples:</p>\u000a\u000a<pre><code>d = {('first', 'row'): 3, ('second', 'row'): 1}\u000a</code></pre>\u000a\u000a<p>I'd like to create a dataframe with 3 columns: Col1, Col2 and Col3 which should look like this:</p>\u000a\u000a<pre><code>Col1   Col2  Col3\u000afirst  row   3\u000asecond row   4\u000a</code></pre>\u000a\u000a<p>I can't figure out how to split the tuples other than parsing the dict pair by pair.</p>\u000a
p619
sVis_answered
p620
I01
sVview_count
p621
I54
sVtags
p622
(lp623
Vpython
p624
aVpandas
p625
asVlast_activity_date
p626
I1495040908
sVanswer_count
p627
I3
sVcreation_date
p628
I1494971050
sVscore
p629
I8
sVlink
p630
Vhttp://stackoverflow.com/questions/44012099/creating-a-dataframe-from-a-dict-where-keys-are-tuples
p631
sVaccepted_answer_id
p632
I44012152
sVowner
p633
(dp634
Vuser_id
p635
I3548679
sVprofile_image
p636
Vhttps://www.gravatar.com/avatar/8af0144653b2800791cafbf484fb13b5?s=128&d=identicon&r=PG&f=1
p637
sVuser_type
p638
Vregistered
p639
sVreputation
p640
I197
sVlink
p641
Vhttp://stackoverflow.com/users/3548679/bogdanc
p642
sVaccept_rate
p643
I93
sVdisplay_name
p644
VBogdanC
p645
ssVtitle
p646
VCreating a dataframe from a dict where keys are tuples
p647
sVlast_edit_date
p648
I1494971096
sVquestion_id
p649
I44012099
sa(dp650
Vbody
p651
V<p>Declarative usage of Python's <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer"><code>enum.Enum</code></a> requires values to be provided, when in the most basic use case for an enum we don't actually care about names and values.  We only care about the sentinels themselves.  After reading a <a href="http://stackoverflow.com/q/43821562/674039">related Q&amp;A</a> recently, I realised it is possible to use the <a href="https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace" rel="nofollow noreferrer"><code>__prepare__</code></a> method of the enum's metaclass to get this kind of declaration:</p>\u000a\u000a<pre><code>class Color(Enum):\u000a    red\u000a    blue\u000a    green\u000a</code></pre>\u000a\u000a<p>And the implementation to make things so dry is actually fairly easy:  </p>\u000a\u000a<pre><code>from collections import defaultdict\u000a\u000aclass EnumMeta(type):\u000a    @classmethod\u000a    def __prepare__(meta, name, bases):\u000a        return defaultdict(object)\u000a\u000a    def __new__(cls, name, bases, classdict):\u000a        classdict.default_factory = None\u000a        return type.__new__(cls, name, bases, classdict)\u000a\u000aclass Enum(metaclass=EnumMeta):\u000a    pass\u000a</code></pre>\u000a\u000a<p>In Python 3.6, there was provided <a href="https://docs.python.org/3/library/enum.html#using-auto" rel="nofollow noreferrer"><code>enum.auto</code></a> to help with that issue of <a href="https://docs.python.org/3/library/enum.html#omitting-values" rel="nofollow noreferrer">omitting values</a>, but the interface is still strange - you're required to specify the <code>auto()</code> value for each member, and inherit from a different base which fixes up the <code>__repr__</code>:  </p>\u000a\u000a<pre><code>class Color(NoValue):\u000a    red = auto()\u000a    blue = auto()\u000a    green = auto()\u000a</code></pre>\u000a\u000a<p>Knowing that many man-hours and great care has gone into the implementation chosen for the standard library, there must be some reason why the arguably more Pythonic version of a declarative enum demonstrated earlier doesn't work properly.  </p>\u000a\u000a<p>My question is, what are the problems and failure modes of the proposed approach, and why was this (or something similar) decided against - with the <code>auto</code> feature being included in Python 3.6 instead?</p>\u000a
p652
sVis_answered
p653
I01
sVview_count
p654
I219
sVtags
p655
(lp656
Vpython
p657
aVenums
p658
aVmetaclass
p659
aVpython-3.6
p660
asVlast_activity_date
p661
I1494509992
sVanswer_count
p662
I3
sVcreation_date
p663
I1494269167
sVscore
p664
I8
sVlink
p665
Vhttp://stackoverflow.com/questions/43855102/using-prepare-for-an-enum-whats-the-catch
p666
sVaccepted_answer_id
p667
I43855536
sVowner
p668
(dp669
Vuser_id
p670
I674039
sVprofile_image
p671
Vhttps://i.stack.imgur.com/leoFi.gif?s=128&g=1
p672
sVuser_type
p673
Vregistered
p674
sVreputation
p675
I97491
sVlink
p676
Vhttp://stackoverflow.com/users/674039/wim
p677
sVaccept_rate
p678
I95
sVdisplay_name
p679
Vwim
p680
ssVtitle
p681
VUsing __prepare__ for an Enum ... what&#39;s the catch?
p682
sVlast_edit_date
p683
I1494387179
sVquestion_id
p684
I43855102
sa(dp685
Vbody
p686
V<p>The problem is stated as: Given a string that contains only digits 0-9 and a target value, return all expressions that are created by adding some binary operators (+, -, or *) between the digits so they evaluate to the target value. In some cases there may not be any binary operators that will create valid expressions, in which case the function should return an empty array. The numbers in the new expressions should not contain leading zeros.</p>\u000a\u000a<p>The function should return all valid expressions that evaluate to target, sorted lexicographically.</p>\u000a\u000a<p>For example:</p>\u000a\u000a<p>digits = <code>"123"</code> and target = <code>6</code>, should return:  <code>["1*2*3", "1+2+3"]</code></p>\u000a\u000a<p>My current algorithm is below.  Its a bit slow so I am looking for a more efficient way to approach the problem.  My current algo produces all combinations of the operands and operators.  For the above example, it produces</p>\u000a\u000a<p>Operands:</p>\u000a\u000a<pre><code>[['1', '2', '3'], ['1', '23'], ['12', '3'], ['123']]\u000a</code></pre>\u000a\u000a<p>Operators:</p>\u000a\u000a<pre><code>{0: [()], 1: [('+',), ('-',), ('*',)], 2: [('+', '+'), ('+', '-'), ('+', '*'), ('-', '+'), ('-', '-'), ('-', '*'), ('*', '+'), ('*', '-'), ('*', '*')]}\u000a</code></pre>\u000a\u000a<p>It then combines all possible combinations of operands and operators and evaluate each.</p>\u000a\u000a<p>The digits has a constraint of <code>2 \u2264 digits.length \u2264 10.</code>  So its not that bad, but with this algo it takes around 4.3 seconds for a digit with length of 10, where it should just take 4 secs (maximum).</p>\u000a\u000a<p>I also tried speeding up the eval() function using with the following alternatives:</p>\u000a\u000a<pre><code>if eval(temp) == target:\u000a</code></pre>\u000a\u000a<p>or </p>\u000a\u000a<pre><code>exp_as_func = eval('lambda: ' + temp)\u000aif exp_as_func() == target:\u000a</code></pre>\u000a\u000a<p>or </p>\u000a\u000a<pre><code>compiled = compile(temp, '&lt;string&gt;', 'eval')\u000aif compiled == target:\u000a</code></pre>\u000a\u000a<p>All of them still takes about the same amount of time using Python 3.</p>\u000a\u000a<p>Code:</p>\u000a\u000a<pre><code>import itertools\u000aimport time\u000a\u000adef getValidExp(digits, target):    \u000a    def getSign_combination(length):\u000a        signCombo = {}\u000a        for i in range(0, length):\u000a            signCombo[i] = [c for c in itertools.product(('+', '-', '*'), repeat=i)]\u000a        return signCombo\u000a\u000a    def generate_combination(source, comb):\u000a        res = []\u000a        for x, action in zip(source, comb + (0,)):      \u000a            res.append(x)\u000a            if action == 0:\u000a                #####IF ITS A 0, YIELD STRING.  IF NOT COMBINE NEXT ONE\u000a                yield "".join(res)\u000a                res = []\u000a\u000a\u000a    #####PRODUCT GENERATES (0,0,1).  ALL COMBINATIONS.  0 MEANS BY ITSELF, 1 APPEND NEXT ITEM.\u000a\u000a    elementCombo = [list(generate_combination(digits, c)) for c in itertools.product((0, 1), repeat=len(digits) - 1)]\u000a\u000a    signCombo = getSign_combination(len(digits))\u000a\u000a    result = []\u000a    for e in elementCombo:\u000a        signs = signCombo[len(e)-1]\u000a\u000a        for i,sign in enumerate(signs):\u000a\u000a            temp = [ item for tple in zip(e, sign) for item in tple ]\u000a            temp.append(e[-1])\u000a            temp = "".join(temp)\u000a\u000a            try:\u000a                if eval(temp) == target:\u000a                    result.append(temp)\u000a            except:\u000a                pass\u000a\u000a    return sorted(result)\u000a\u000adigits = "3456237490"\u000atarget = 9180\u000aprint("Answer:", getValidExp(digits, target))\u000a</code></pre>\u000a\u000a<p>Code using a calculator function (no eval()), almost has the same speed:</p>\u000a\u000a<pre><code>from itertools import combinations, permutations\u000aimport itertools\u000aimport time\u000a\u000adef getValidExp(digits, target):\u000a\u000a    def calculate(s):\u000a        operands, operators = [], []\u000a        operand = ""\u000a        for i in reversed(range(len(s))):\u000a            if s[i].isdigit():\u000a                operand += s[i]\u000a                if i == 0 or not s[i - 1].isdigit():\u000a                    operands.append(int(operand[::-1]))\u000a                    operand = ""\u000a            elif s[i] == '*':\u000a                operators.append(s[i])\u000a            elif s[i] == '+' or s[i] == '-':\u000a                while operators and operators[-1] == '*':\u000a                    compute(operands, operators)\u000a                operators.append(s[i])\u000a\u000a        while operators:\u000a            compute(operands, operators)\u000a\u000a        return operands[-1]\u000a\u000a    def compute(operands, operators):\u000a        left, right = operands.pop(), operands.pop()\u000a        op = operators.pop()\u000a        if op == '+':\u000a            operands.append(left + right)\u000a        elif op == '-':\u000a            operands.append(left - right)\u000a        elif op == '*':\u000a            operands.append(left * right)\u000a\u000a    def getSign_combination(length):\u000a        signCombo = {}\u000a        for i in range(0, length):\u000a            signCombo[i] = [c for c in itertools.product(('+', '-', '*'), repeat=i)]\u000a        return signCombo\u000a\u000a    def generate_combination(source, comb):\u000a        res = []\u000a        for x, action in zip(source, comb + (0,)):\u000a            res.append(x)\u000a            if action == 0:\u000a                yield "".join(res)\u000a                res = []\u000a\u000a    start = time.clock()\u000a\u000a    #####PRODUCT GENERATES (0,0,1).  ALL COMBINATIONS.  0 MEANS BY ITSELF, 1 APPEND NEXT ITEM.\u000a    elementCombo = [list(generate_combination(digits, c)) for c in itertools.product((0, 1), repeat=len(digits) - 1)]\u000a\u000a    signCombo = getSign_combination(len(digits))\u000a\u000a    result = []\u000a    for e in elementCombo:\u000a        signs = signCombo[len(e)-1]\u000a        for i,sign in enumerate(signs):\u000a            temp = ""\u000a            valid = True\u000a\u000a            for num in e:\u000a                if num[0] == '0' and len(num) &gt; 1:\u000a                    valid = False\u000a                    break\u000a\u000a            if valid:\u000a                for num,operator in zip(e,sign):\u000a                    temp += num\u000a                    temp += operator\u000a\u000a                temp += e[-1]\u000a\u000a                ####USING CALCULATOR CODE\u000a                if calculate(temp) == target:\u000a                    result.append(temp)\u000a\u000a    print(time.clock() - start)\u000a    return sorted(result)\u000a\u000a\u000adigits = "3456237490"\u000atarget = 9180\u000aprint("Answer:", getValidExp(digits, target))\u000a</code></pre>\u000a
p687
sVis_answered
p688
I01
sVview_count
p689
I312
sVtags
p690
(lp691
Vpython
p692
aValgorithm
p693
aVcombinations
p694
asVlast_activity_date
p695
I1494284902
sVanswer_count
p696
I2
sVcreation_date
p697
I1494200272
sVscore
p698
I8
sVlink
p699
Vhttp://stackoverflow.com/questions/43837842/efficient-algorithm-to-compose-valid-expressions-with-specific-target
p700
sVaccepted_answer_id
p701
I43837911
sVowner
p702
(dp703
Vuser_id
p704
I1179317
sVprofile_image
p705
Vhttps://www.gravatar.com/avatar/c97e780a81e79fa27fda17b56895512b?s=128&d=identicon&r=PG
p706
sVuser_type
p707
Vregistered
p708
sVreputation
p709
I306
sVlink
p710
Vhttp://stackoverflow.com/users/1179317/user1179317
p711
sVaccept_rate
p712
I53
sVdisplay_name
p713
Vuser1179317
p714
ssVtitle
p715
VEfficient Algorithm to compose valid expressions with specific target
p716
sVlast_edit_date
p717
I1494275684
sVquestion_id
p718
I43837842
sa(dp719
Vbody
p720
V<p><strong>Note</strong> <em>This question is not about the Python 3 <code>Enum</code> data type, it's just the example I'm using.</em></p>\u000a\u000a<p>With <a href="https://www.python.org/dev/peps/pep-3115/" rel="nofollow noreferrer">PEP 3115</a> Python 3 added the <a href="https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace" rel="nofollow noreferrer"><code>__prepare__</code></a><sup>1</sup> method to <code>type</code> for the purpose of allowing a custom namespace to be used when creating classes.  For example, the new <code>Enum</code> data type uses <code>__prepare__</code> to return an instance of the private <code>_EnumDict</code> for use as the new <code>Enum</code> class' namespace.</p>\u000a\u000a<p>However, I have seen several examples on SO<sup>2</sup> of <code>EnumMeta</code> being subclassed, creating a new namespace for the class in the metaclass <code>__new__</code> method, but instead of calling the <code>__prepare__</code> method to acquire that new namespace, <code>type(clsdict)()</code> is used instead.  Are there any risks to doing it this way?</p>\u000a\u000a<hr>\u000a\u000a<p><sup>1</sup>  The signature for <code>__prepare__</code>:</p>\u000a\u000a<pre><code>@classmethod\u000adef __prepare__(metacls, cls, bases, **kwds):\u000a</code></pre>\u000a\u000a<p>and for <code>__new__</code>:</p>\u000a\u000a<pre><code>def __new__(metacls, cls, bases, clsdict, **kwds):\u000a</code></pre>\u000a\u000a<hr>\u000a\u000a<p><sup>2</sup>  Example using <code>type(clsdict)</code>:</p>\u000a\u000a<p>from <a href="http://stackoverflow.com/a/43100224/208880">this answer</a></p>\u000a\u000a<pre><code>class CountryCodeMeta(enum.EnumMeta):\u000a    def __new__(metacls, cls, bases, classdict):\u000a        data = classdict['data']\u000a        names = [(country['alpha-2'], int(country['country-code'])) for country in data]\u000a\u000a  --&gt;   temp = type(classdict)()\u000a        for name, value in names:\u000a            temp[name] = value\u000a\u000a        excluded = set(temp) | set(('data',))\u000a        temp.update(item for item in classdict.items() if item[0] not in excluded)\u000a\u000a        return super(CountryCodeMeta, metacls).__new__(metacls, cls, bases, temp)\u000a</code></pre>\u000a
p721
sVis_answered
p722
I01
sVview_count
p723
I180
sVtags
p724
(lp725
Vpython
p726
aVpython-3.x
p727
aVmetaclass
p728
asVlast_activity_date
p729
I1494095681
sVanswer_count
p730
I1
sVcreation_date
p731
I1494080474
sVscore
p732
I8
sVlink
p733
Vhttp://stackoverflow.com/questions/43821562/why-should-i-use-the-prepare-method-to-get-a-class-namespace
p734
sVowner
p735
(dp736
Vuser_id
p737
I208880
sVprofile_image
p738
Vhttps://www.gravatar.com/avatar/de311342220232e618cb27c9936ab9bf?s=128&d=identicon&r=PG
p739
sVuser_type
p740
Vregistered
p741
sVreputation
p742
I27024
sVlink
p743
Vhttp://stackoverflow.com/users/208880/ethan-furman
p744
sVaccept_rate
p745
I76
sVdisplay_name
p746
VEthan Furman
p747
ssVtitle
p748
VWhy should I use the __prepare__ method to get a class&#39; namespace?
p749
sVlast_edit_date
p750
I1494095681
sVquestion_id
p751
I43821562
sa(dp752
Vbody
p753
V<p><code>type.__setattr__</code> is used for classes, basically instances of metaclasses.  <code>object.__setattr__</code> on the other hand, is used for instances of classes. This is totally understood. </p>\u000a\u000a<p>I don't see a significant difference between the two method, at least at Python level, I notice the two use the same procedures for attribute assignment, correct me if I'm wrong:</p>\u000a\u000a<p>Suppose <code>a</code> is an instance of a user-defined class, just a normal class: </p>\u000a\u000a<pre><code>class A:\u000a    pass\u000a\u000aa = A()\u000aa.x = ...\u000a</code></pre>\u000a\u000a<p>then <code>a.x = ..</code> invokes <code>type(a).__setattr__(...)</code> which performs the following steps: </p>\u000a\u000a<p><em>Note: <code>type(a).__setattr__</code> will find <code>__setattr__</code> in <code>object</code> builtin class</em> </p>\u000a\u000a<p>1) Look for a data descriptor in <code>type(a).__mro__</code>. </p>\u000a\u000a<p>2) If a data descriptor was found, call its <code>__set__</code> method and exit. </p>\u000a\u000a<p>3) If no data descriptor was found in <code>type(a).__mro__</code>, then add attribute to <code>a.__dict__</code>, <code>a.__dict__['x'] = ...</code></p>\u000a\u000a<hr>\u000a\u000a<p>With classes--instances of metaclasses, the process is similar: </p>\u000a\u000a<pre><code>class A(metaclass=type):\u000a    pass\u000a</code></pre>\u000a\u000a<p>then: <code>A.x = ...</code> is translated to <code>type(A).__setattr__(...)</code> which performs the following steps: </p>\u000a\u000a<p><em>Note: <code>type(A).__setattr__</code> will find <code>__setattr__</code> in <code>type</code> builtin class</em> </p>\u000a\u000a<p>1) Look for a data descriptor in <code>type(A).__mro__</code></p>\u000a\u000a<p>2) If a data descriptor was found, call its <code>__set__</code> method and exit. </p>\u000a\u000a<p>3) If no data descriptor was found in <code>type(A).__mro__</code>, then add attribute to <code>A.__dict__</code>, <code>a.__dict__['x'] = ...</code></p>\u000a\u000a<p>But <code>object.__setattr__</code> doesn't work for classes: </p>\u000a\u000a<pre><code>&gt;&gt;&gt; object.__setattr__(A, 'x', ...)\u000aTypeError: can't apply this __setattr__ to type object\u000a</code></pre>\u000a\u000a<p>and vice versa, <code>type.__setattr__</code> doesn't work for instances of <code>A</code>: </p>\u000a\u000a<pre><code>&gt;&gt;&gt; type.__setattr__(A(), 'x', ...)\u000aTypeError: descriptor '__setattr__' requires a 'type' object but received a 'A'\u000a</code></pre>\u000a\u000a<p>Hmmm! There must be something different between the two methods. This is subtle, but true nonetheless! </p>\u000a\u000a<p>Presumably the two methods perform the same steps inside <code>__setattr__</code>, what is the difference between <code>type.__setattr__</code> and <code>object.__setattr__</code> so that <code>type.__setattr__</code> is limited to classes and <code>object.__setattr__</code> is limited to instances of classes?</p>\u000a
p754
sVis_answered
p755
I01
sVview_count
p756
I185
sVtags
p757
(lp758
Vpython
p759
aVmetaclass
p760
asVlast_activity_date
p761
I1493751168
sVanswer_count
p762
I1
sVcreation_date
p763
I1493732929
sVscore
p764
I8
sVlink
p765
Vhttp://stackoverflow.com/questions/43739608/how-different-is-type-setattr-from-object-setattr
p766
sVaccepted_answer_id
p767
I43745077
sVowner
p768
(dp769
Vuser_id
p770
I4450721
sVprofile_image
p771
Vhttps://i.stack.imgur.com/Mee9A.png?s=128&g=1
p772
sVuser_type
p773
Vregistered
p774
sVreputation
p775
I942
sVlink
p776
Vhttp://stackoverflow.com/users/4450721/direprobs
p777
sVaccept_rate
p778
I78
sVdisplay_name
p779
Vdireprobs
p780
ssVtitle
p781
VHow different is type.__setattr__ from object.__setattr__?
p782
sVlast_edit_date
p783
I1493749718
sVquestion_id
p784
I43739608
sa(dp785
Vbody
p786
V<p>I have a bunch of numbers, say the following:</p>\u000a\u000a<pre><code>1 2 3 4  6 7 8  20 24 28 32\u000a</code></pre>\u000a\u000a<p>The information presented there could be represented in Python as ranges:</p>\u000a\u000a<pre><code>[range(1, 5), range(6, 9), range(20, 33, 4)]\u000a</code></pre>\u000a\u000a<p>In my output I'd write <code>1..4, 6..8, 20..32..4</code>, but that is just a matter of presentation.</p>\u000a\u000a<p><a href="http://stackoverflow.com/a/4629241">Another answer</a> shows how one can do this for contiguous ranges. I don't see how I can easily do this for strided ranges like above. Is there a similar trick for this?</p>\u000a
p787
sVis_answered
p788
I01
sVview_count
p789
I313
sVtags
p790
(lp791
Vpython
p792
asVlast_activity_date
p793
I1493932598
sVanswer_count
p794
I4
sVcreation_date
p795
I1493914631
sVscore
p796
I8
sVlink
p797
Vhttp://stackoverflow.com/questions/43788106/convert-a-list-of-numbers-to-ranges
p798
sVowner
p799
(dp800
Vuser_id
p801
I653152
sVprofile_image
p802
Vhttps://i.stack.imgur.com/Bx71n.jpg?s=128&g=1
p803
sVuser_type
p804
Vregistered
p805
sVreputation
p806
I2259
sVlink
p807
Vhttp://stackoverflow.com/users/653152/martin-ueding
p808
sVaccept_rate
p809
I79
sVdisplay_name
p810
VMartin Ueding
p811
ssVtitle
p812
VConvert a list of numbers to ranges
p813
sVquestion_id
p814
I43788106
sa(dp815
Vbody
p816
V<p>Consider following Python 2.x code snippet.</p>\u000a\u000a<pre><code>from __future__ import print_function\u000a\u000a\u000aclass myfile(file):\u000a    def __exit__(self, *excinfo):\u000a        print("__exit__ called")\u000a        super(myfile, self).__exit__(*excinfo)\u000a\u000a\u000adef my_generator(file_name):\u000a    with myfile(file_name) as fh:\u000a        for line in fh:\u000a            yield line.strip()\u000a\u000a\u000agen = my_generator('file.txt')\u000aprint(next(gen))\u000aprint("Before del")\u000adel gen\u000aprint("After del")\u000a</code></pre>\u000a\u000a<p>Output of this script (given file.txt has more than one line) is:</p>\u000a\u000a<pre><code>Line 1 from file\u000aBefore del\u000a__exit__ called\u000aAfter del\u000a</code></pre>\u000a\u000a<p>I'm interested about <code>__exit__</code> call specifically. </p>\u000a\u000a<p>What triggers execution of his method? For what we know, code never left <code>with</code> statement (it "stopped" after <code>yield</code> statement and never continued). Is it guaranteed that <code>__exit__</code> will be called when reference count of generator drops to 0?</p>\u000a
p817
sVis_answered
p818
I01
sVview_count
p819
I56
sVtags
p820
(lp821
Vpython
p822
aVgenerator
p823
aVcontextmanager
p824
asVlast_activity_date
p825
I1494971902
sVanswer_count
p826
I2
sVcreation_date
p827
I1494949005
sVscore
p828
I8
sVlink
p829
Vhttp://stackoverflow.com/questions/44005817/yielding-from-within-with-statement-and-exit-method-of-context-manager
p830
sVaccepted_answer_id
p831
I44007670
sVowner
p832
(dp833
Vuser_id
p834
I2912340
sVprofile_image
p835
Vhttps://i.stack.imgur.com/ddQ02.jpg?s=128&g=1
p836
sVuser_type
p837
Vregistered
p838
sVreputation
p839
I11952
sVlink
p840
Vhttp://stackoverflow.com/users/2912340/%c5%81ukasz-rogalski
p841
sVaccept_rate
p842
I57
sVdisplay_name
p843
V\u0141ukasz Rogalski
p844
ssVtitle
p845
VYielding from within with statement and __exit__ method of context manager
p846
sVlast_edit_date
p847
I1494950870
sVquestion_id
p848
I44005817
sa(dp849
Vbody
p850
V<p>I have a <strong>Flask</strong> server under Apache which I'm using as a Rest API for an app and when the server is running for 2 - 3 days it suddenly stops working and raises <code>OperationalError: MySQL Connection not available.</code></p>\u000a\u000a<p>The error always happens at the <code>login</code> method because it's the first called when the app opens (but all methods follow the same pattern).</p>\u000a\u000a<p>This is the <code>login</code> method:</p>\u000a\u000a<pre><code>@app.route(LOGIN_API_URL, methods=['POST'])\u000adef login():\u000a    if (request.method == 'POST'):\u000a        cursor = connection.cursor(buffered=True, dictionary=True)\u000a        cursor.execute('select * from users where username = %s', (request.form['username'],))\u000a        user = cursor.fetchone()\u000a        if user is None or user['password'] != str(request.form['password']):\u000a            abort(403)\u000a        else:\u000a            cursor.execute('update users set last_login = (%s) where user_id = %s', str(int(round(time.time() * 1000))), user['user_id'],)\u000a            utils.safe_commit(connection, cursor)\u000a            return utils.sanitize_response({'status':200, 'message':'Logged in'})\u000a</code></pre>\u000a\u000a<p>Both <code>safe_commit</code> and <code>sanitize_response</code> follows:</p>\u000a\u000a<pre><code>def sanitize_response(response, is_array=False):\u000a    if response is None:\u000a        return '[]' if is_array else '{}'\u000a    else:\u000a        return jsonify(response)\u000a\u000adef safe_commit(connection, cursor):\u000a    try:\u000a        connection.commit()\u000a    except:\u000a        connection.rollback()\u000a    finally:\u000a        cursor.close()\u000a</code></pre>\u000a\u000a<p>At first I thought the problem was happening because I wasn't using <code>buffered=True</code> in a cursor that is calling <code>fetchone</code> method. But I added that parameter after reading <a href="https://dev.mysql.com/doc/connector-python/en/connector-python-api-mysqlcursorbuffered.html" rel="nofollow noreferrer">this</a>.</p>\u000a\u000a<p>This is my <code>wsgi</code> file:</p>\u000a\u000a<pre><code>#!/usr/bin/python\u000aimport sys\u000asys.path.append("/var/www/protestr/")\u000afrom protestr import app as application\u000a</code></pre>\u000a\u000a<p>This is my <code>sites-available</code> <code>conf</code> file (I wanted to say that I have tried a lot of combinations of both <code>threads</code> and <code>processes</code> parameters and this combination is the one that keeps the server running for the most time, usally 2 - 3 days):</p>\u000a\u000a<pre><code>&lt;VirtualHost *:80&gt;\u000a    ServerName protestr.tk\u000a    DocumentRoot /var/www/protestr/\u000a\u000a    WSGIDaemonProcess protestr user=www-data group=www-data processes=2 threads=25\u000a    WSGIScriptAlias / /var/www/protestr/protestr.wsgi\u000a\u000a    &lt;Directory /var/www/protestr&gt;\u000a        WSGIProcessGroup protestr\u000a        WSGIApplicationGroup %{GLOBAL}\u000a        Require all granted\u000a    &lt;/Directory&gt;\u000a&lt;/VirtualHost&gt;\u000a</code></pre>\u000a\u000a<p>These are the contents of the <code>error.log</code> file:</p>\u000a\u000a<pre><code>[Fri May 12 03:34:14.967624 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727] [2017-05-12 03:34:14,963] ERROR in app: Exception on /api/v1/users/login [POST]\u000a[Fri May 12 03:34:14.967812 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727] Traceback (most recent call last):\u000a[Fri May 12 03:34:14.967861 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1982, in wsgi_app\u000a[Fri May 12 03:34:14.967900 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     response = self.full_dispatch_request()\u000a[Fri May 12 03:34:14.967937 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1614, in full_dispatch_request\u000a[Fri May 12 03:34:14.967973 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     rv = self.handle_user_exception(e)\u000a[Fri May 12 03:34:14.968007 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1517, in handle_user_exception\u000a[Fri May 12 03:34:14.968043 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     reraise(exc_type, exc_value, tb)\u000a[Fri May 12 03:34:14.968076 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1612, in full_dispatch_request\u000a[Fri May 12 03:34:14.968111 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     rv = self.dispatch_request()\u000a[Fri May 12 03:34:14.968144 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/flask/app.py", line 1598, in dispatch_request\u000a[Fri May 12 03:34:14.968179 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     return self.view_functions[rule.endpoint](**req.view_args)\u000a[Fri May 12 03:34:14.968251 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/var/www/protestr/protestr.py", line 89, in login\u000a[Fri May 12 03:34:14.968290 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     cursor = connection.cursor(buffered=True, dictionary=True)\u000a[Fri May 12 03:34:14.968326 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]   File "/usr/local/lib/python2.7/dist-packages/mysql/connector/connection.py", line 809, in cursor\u000a[Fri May 12 03:34:14.968363 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727]     raise errors.OperationalError("MySQL Connection not available.")\u000a[Fri May 12 03:34:14.968399 2017] [wsgi:error] [pid 18673:tid 2849002544] [remote 192.168.1.139:25727] OperationalError: MySQL Connection not available.\u000a</code></pre>\u000a\u000a<hr>\u000a\u000a<p><strong>ADDITIONAL INFORMATION:</strong></p>\u000a\u000a<p>I'm running Apache/2.4.10 under <a href="https://www.armbian.com/" rel="nofollow noreferrer">armbian</a> (Debian) in a Banana Pi.</p>\u000a\u000a<p>I really don't know why the server stops after running for a while, I think I have tried almost everything.</p>\u000a\u000a<hr>\u000a\u000a<p><strong>EDIT:</strong> I've added also <code>cursor.close()</code> before throwing the <code>403</code> error in the <code>login</code> method. But this is not relevant as I'm the only one logging in the app and I'm always entering the correct credentials.</p>\u000a\u000a<p><strong>EDIT 2:</strong> As @stamaimer told me, if I add <code>connection.ping()</code> before getting any cursor, it works well, but this approach seems like a hacky way to me and <strong>I don't know if it's a good solution or even why the MySQL server is dropping the connection.</strong></p>\u000a
p851
sVis_answered
p852
I01
sVview_count
p853
I78
sVbounty_closes_date
p854
I1495635651
sVtags
p855
(lp856
Vpython
p857
aVmysql
p858
aVapache
p859
aVflask
p860
aVoperationalerror
p861
asVlast_activity_date
p862
I1495039714
sVanswer_count
p863
I1
sVcreation_date
p864
I1494554817
sVscore
p865
I8
sVlink
p866
Vhttp://stackoverflow.com/questions/43928216/mysql-operationalerror-when-running-a-flask-server-apache-for-some-days
p867
sVbounty_amount
p868
I50
sVowner
p869
(dp870
Vuser_id
p871
I4208583
sVprofile_image
p872
Vhttps://i.stack.imgur.com/pFHvG.png?s=128&g=1
p873
sVuser_type
p874
Vregistered
p875
sVreputation
p876
I595
sVlink
p877
Vhttp://stackoverflow.com/users/4208583/grender
p878
sVaccept_rate
p879
I52
sVdisplay_name
p880
VGrender
p881
ssVtitle
p882
VMySQL OperationalError when running a Flask server (Apache) for some days
p883
sVlast_edit_date
p884
I1495030688
sVquestion_id
p885
I43928216
sa(dp886
Vbody
p887
V<p>I have a data frame that looks like this:</p>\u000a\u000a<pre><code>df = pd.DataFrame([\u000a  {'id': 123, 'date': '2016-01-01', 'is_local': True },\u000a  {'id': 123, 'date': '2017-01-01', 'is_local': False },\u000a  {'id': 124, 'date': '2016-01-01', 'is_local': True },\u000a  {'id': 124, 'date': '2017-01-01', 'is_local': True }\u000a])\u000adf.date = df.date.astype('datetime64[ns]')\u000a</code></pre>\u000a\u000a<p>I want to get a list of all the IDs for which <code>is_local</code> was True at the start of 2016, but False at the start of 2017. I've started by grouping by ID:</p>\u000a\u000a<pre><code>gp = df.groupby('id')\u000a</code></pre>\u000a\u000a<p>Then I've tried this just to filter by the second of these conditions (as a way of getting started), but it's returning all the groups:</p>\u000a\u000a<pre><code>gp.apply(lambda x: ~x.is_local &amp; (x.date &gt; '2016-12-31'))\u000a</code></pre>\u000a\u000a<p>How can I filter in the way I need?</p>\u000a
p888
sVis_answered
p889
I01
sVview_count
p890
I153
sVtags
p891
(lp892
Vpython
p893
aVpandas
p894
aVfilter
p895
aVmultiple-conditions
p896
asVlast_activity_date
p897
I1493977558
sVanswer_count
p898
I3
sVcreation_date
p899
I1493974679
sVscore
p900
I7
sVlink
p901
Vhttp://stackoverflow.com/questions/43800643/pandas-filter-group-by-multiple-conditions
p902
sVaccepted_answer_id
p903
I43800778
sVowner
p904
(dp905
Vuser_id
p906
I194000
sVprofile_image
p907
Vhttps://www.gravatar.com/avatar/03e72a161e69eaafe1213344c8568a28?s=128&d=identicon&r=PG
p908
sVuser_type
p909
Vregistered
p910
sVreputation
p911
I13130
sVlink
p912
Vhttp://stackoverflow.com/users/194000/richard
p913
sVaccept_rate
p914
I74
sVdisplay_name
p915
VRichard
p916
ssVtitle
p917
Vpandas: filter group by multiple conditions?
p918
sVlast_edit_date
p919
I1493976997
sVquestion_id
p920
I43800643
sa(dp921
Vbody
p922
V<p>I have a quite large list (>1K elements) of objects of the same type in my Python program. The list is never modified - no elements are added, removed or changed. Are there any downside to putting the objects into a tuple instead of a list?</p>\u000a\u000a<p>On the one hand, tuples are immutable so that matches my requirements. On the other hand, using such a large tuple just <em>feels</em> wrong. In my mind, tuples has always been for small collections. It's a double, a tripple, a quadruple... Not a two-thousand-and-fiftyseven-duple.</p>\u000a\u000a<p>Is my fear of large tuples somehow justified? Is it bad for performance, unpythonic, or otherwise bad practice?</p>\u000a
p923
sVis_answered
p924
I01
sVview_count
p925
I78
sVtags
p926
(lp927
Vpython
p928
aVlist
p929
aVcollections
p930
aVtuples
p931
asVlast_activity_date
p932
I1494890238
sVanswer_count
p933
I2
sVcreation_date
p934
I1494881715
sVscore
p935
I7
sVlink
p936
Vhttp://stackoverflow.com/questions/43988667/is-it-ok-to-create-very-large-tuples-in-python
p937
sVaccepted_answer_id
p938
I43988809
sVowner
p939
(dp940
Vuser_id
p941
I2200659
sVprofile_image
p942
Vhttps://i.stack.imgur.com/ImYIK.jpg?s=128&g=1
p943
sVuser_type
p944
Vregistered
p945
sVreputation
p946
I4185
sVlink
p947
Vhttp://stackoverflow.com/users/2200659/anders
p948
sVaccept_rate
p949
I81
sVdisplay_name
p950
VAnders
p951
ssVtitle
p952
VIs it OK to create very large tuples in Python?
p953
sVlast_edit_date
p954
I1494890238
sVquestion_id
p955
I43988667
sa(dp956
Vbody
p957
V<p>By looking at the <code>CPython</code> implementation it seems the return value of a string <code>split()</code> is a list of newly allocated strings. However, since strings are immutable it seems one could have made substrings out of the original string by pointing at the offsets. </p>\u000a\u000a<p>Am I understanding the current behavior of CPython correctly ? Are there reasons for not opting for this space optimization ? One reason I can think of is that the parent string cannot be freed until all its substrings are.</p>\u000a
p958
sVis_answered
p959
I01
sVview_count
p960
I390
sVtags
p961
(lp962
Vpython
p963
aVstring
p964
aVsplit
p965
aVpython-internals
p966
asVlast_activity_date
p967
I1494760494
sVanswer_count
p968
I3
sVcreation_date
p969
I1494224615
sVscore
p970
I7
sVlink
p971
Vhttp://stackoverflow.com/questions/43841023/python-strings-are-immutable-so-why-does-s-split-return-a-list-of-new-strings
p972
sVaccepted_answer_id
p973
I43841625
sVowner
p974
(dp975
Vuser_id
p976
I617371
sVprofile_image
p977
Vhttps://www.gravatar.com/avatar/c6377e5a976fddbbf376949b5bf49f03?s=128&d=identicon&r=PG
p978
sVuser_type
p979
Vregistered
p980
sVreputation
p981
I1490
sVlink
p982
Vhttp://stackoverflow.com/users/617371/san
p983
sVaccept_rate
p984
I92
sVdisplay_name
p985
Vsan
p986
ssVtitle
p987
VPython Strings are immutable so why does s.split( ) return a list of new strings
p988
sVlast_edit_date
p989
I1494225220
sVquestion_id
p990
I43841023
sa(dp991
Vbody
p992
V<p>I'm on Python 2.7. I have a dataframe with 200 columns and need to drop a few.</p>\u000a\u000a<p>I can use the below to drop the last n columns. How do I write it so i can drop the first 10, then column 22, then 26, 10th from the last, and last 5. All in one line.</p>\u000a\u000a<pre><code>df2 = df.iloc[:, :-5]\u000a</code></pre>\u000a
p993
sVis_answered
p994
I01
sVview_count
p995
I102
sVtags
p996
(lp997
Vpython
p998
aVpython-2.7
p999
aVpandas
p1000
aVslice
p1001
asVlast_activity_date
p1002
I1493664630
sVanswer_count
p1003
I1
sVcreation_date
p1004
I1493659994
sVscore
p1005
I7
sVlink
p1006
Vhttp://stackoverflow.com/questions/43723550/dropping-columns-in-a-dataframe
p1007
sVaccepted_answer_id
p1008
I43723651
sVowner
p1009
(dp1010
Vuser_id
p1011
I3749901
sVprofile_image
p1012
Vhttps://www.gravatar.com/avatar/055feb97748edb48667519a4f8698fc2?s=128&d=identicon&r=PG&f=1
p1013
sVuser_type
p1014
Vregistered
p1015
sVreputation
p1016
I579
sVlink
p1017
Vhttp://stackoverflow.com/users/3749901/moosa
p1018
sVaccept_rate
p1019
I63
sVdisplay_name
p1020
VMoosa
p1021
ssVtitle
p1022
VDropping columns in a dataframe
p1023
sVlast_edit_date
p1024
I1493660044
sVquestion_id
p1025
I43723550
sasVquota_max
p1026
I300
sVquota_remaining
p1027
I279
s.