(dp0
Vhas_more
p1
I01
sVitems
p2
(lp3
(dp4
Vbody
p5
V<p>What is the use of the <code>yield</code> keyword in Python? What does it do?</p>\u000a\u000a<p>For example, I'm trying to understand this code<sup><strong>1</strong></sup>:</p>\u000a\u000a<pre><code>def _get_child_candidates(self, distance, min_dist, max_dist):\u000a    if self._leftchild and distance - max_dist &lt; self._median:\u000a        yield self._leftchild\u000a    if self._rightchild and distance + max_dist &gt;= self._median:\u000a        yield self._rightchild  \u000a</code></pre>\u000a\u000a<p>And this is the caller:</p>\u000a\u000a<pre><code>result, candidates = list(), [self]\u000awhile candidates:\u000a    node = candidates.pop()\u000a    distance = node._get_dist(obj)\u000a    if distance &lt;= max_dist and distance &gt;= min_dist:\u000a        result.extend(node._values)\u000a    candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))\u000areturn result\u000a</code></pre>\u000a\u000a<p>What happens when the method <code>_get_child_candidates</code> is called?\u000aIs a list returned? A single element? Is it called again? When will subsequent calls stop?</p>\u000a\u000a<hr>\u000a\u000a<p><sub>\u000a1. The code comes from Jochen Schulz (jrschulz), who made a great Python library for metric spaces. This is the link to the complete source: <a href="http://well-adjusted.de/~jrschulz/mspace/" rel="noreferrer">Module mspace</a>.</sub></p>\u000a
p6
sVis_answered
p7
I01
sVprotected_date
p8
I1360547307
sVview_count
p9
I1291933
sVtags
p10
(lp11
Vpython
p12
aViterator
p13
aVgenerator
p14
aVyield
p15
aVcoroutine
p16
asVlast_activity_date
p17
I1495022492
sVaccepted_answer_id
p18
I231855
sVcreation_date
p19
I1224800471
sVscore
p20
I6414
sVlink
p21
Vhttp://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python
p22
sVanswer_count
p23
I34
sVowner
p24
(dp25
Vuser_id
p26
I18300
sVprofile_image
p27
Vhttps://i.stack.imgur.com/jcyI4.jpg?s=128&g=1
p28
sVuser_type
p29
Vregistered
p30
sVreputation
p31
I37655
sVlink
p32
Vhttp://stackoverflow.com/users/18300/alex-s
p33
sVaccept_rate
p34
I92
sVdisplay_name
p35
VAlex. S.
p36
ssVtitle
p37
VWhat does the &quot;yield&quot; keyword do in Python?
p38
sVlast_edit_date
p39
I1490199881
sVquestion_id
p40
I231767
sa(dp41
Vbody
p42
V<p>What are metaclasses? What do you use them for?</p>\u000a
p43
sVis_answered
p44
I01
sVprotected_date
p45
I1350585760
sVview_count
p46
I480526
sVtags
p47
(lp48
Vpython
p49
aVoop
p50
aVmetaclass
p51
aVpython-datamodel
p52
asVlast_activity_date
p53
I1494340852
sVaccepted_answer_id
p54
I100146
sVcreation_date
p55
I1221804646
sVscore
p56
I3626
sVlink
p57
Vhttp://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python
p58
sVanswer_count
p59
I12
sVowner
p60
(dp61
Vuser_id
p62
I9951
sVprofile_image
p63
Vhttps://www.gravatar.com/avatar/1449ec95d8c114dbca53136cc8194b61?s=128&d=identicon&r=PG&f=1
p64
sVuser_type
p65
Vregistered
p66
sVreputation
p67
I277803
sVlink
p68
Vhttp://stackoverflow.com/users/9951/e-satis
p69
sVaccept_rate
p70
I79
sVdisplay_name
p71
Ve-satis
p72
ssVtitle
p73
VWhat is a metaclass in Python?
p74
sVlast_edit_date
p75
I1393391893
sVquestion_id
p76
I100003
sa(dp77
Vbody
p78
V<p>How do I check whether a file exists, without using the <a href="https://docs.python.org/3.6/reference/compound_stmts.html#try" rel="noreferrer"><code>try</code></a> statement?</p>\u000a
p79
sVis_answered
p80
I01
sVprotected_date
p81
I1370841219
sVview_count
p82
I1992850
sVtags
p83
(lp84
Vpython
p85
aVfile
p86
aVfilesystems
p87
asVlast_activity_date
p88
I1495035357
sVanswer_count
p89
I37
sVcreation_date
p90
I1221656100
sVscore
p91
I3234
sVlink
p92
Vhttp://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-using-python
p93
sVowner
p94
(dp95
Vuser_id
p96
I15616
sVprofile_image
p97
Vhttps://www.gravatar.com/avatar/1d502f7932af0a41d8ff6ab5d9cf3406?s=128&d=identicon&r=PG
p98
sVuser_type
p99
Vregistered
p100
sVreputation
p101
I17999
sVlink
p102
Vhttp://stackoverflow.com/users/15616/spence91
p103
sVaccept_rate
p104
I83
sVdisplay_name
p105
Vspence91
p106
ssVtitle
p107
VHow do I check whether a file exists using Python?
p108
sVlast_edit_date
p109
I1475364309
sVquestion_id
p110
I82831
sa(dp111
Vcommunity_owned_date
p112
I1358001430
sVis_answered
p113
I01
sVprotected_date
p114
I1370841342
sVview_count
p115
I908630
sVtags
p116
(lp117
Vpython
p118
aVoperators
p119
aVternary-operator
p120
aVconditional-operator
p121
aVpython-2.5
p122
asVbody
p123
V<p>If Python does not have a ternary conditional operator, is it possible to simulate one using other language constructs?</p>\u000a
p124
sVlast_activity_date
p125
I1484942474
sVaccepted_answer_id
p126
I394814
sVcreation_date
p127
I1230366738
sVscore
p128
I3160
sVlink
p129
Vhttp://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator
p130
sVanswer_count
p131
I17
sVowner
p132
(dp133
Vuser_id
p134
I51518
sVprofile_image
p135
Vhttps://www.gravatar.com/avatar/eb5a95cb1be342c4089183cd8232a7f2?s=128&d=identicon&r=PG
p136
sVuser_type
p137
Vregistered
p138
sVreputation
p139
I23053
sVlink
p140
Vhttp://stackoverflow.com/users/51518/devoted
p141
sVaccept_rate
p142
I86
sVdisplay_name
p143
VDevoted
p144
ssVtitle
p145
VDoes Python have a ternary conditional operator?
p146
sVlast_edit_date
p147
I1467076721
sVquestion_id
p148
I394809
sa(dp149
Vbody
p150
V<p>What does the <code>if __name__ == "__main__":</code> do?</p>\u000a\u000a<pre><code># Threading example\u000aimport time, thread\u000a\u000adef myfunction(string, sleeptime, lock, *args):\u000a    while 1:\u000a        lock.acquire()\u000a        time.sleep(sleeptime)\u000a        lock.release()\u000a        time.sleep(sleeptime)\u000aif __name__ == "__main__":\u000a    lock = thread.allocate_lock()\u000a    thread.start_new_thread(myfunction, ("Thread #: 1", 2, lock))\u000a    thread.start_new_thread(myfunction, ("Thread #: 2", 2, lock))\u000a</code></pre>\u000a
p151
sVis_answered
p152
I01
sVprotected_date
p153
I1365246276
sVview_count
p154
I1114058
sVtags
p155
(lp156
Vpython
p157
aVmodule
p158
aVnamespaces
p159
aVmain
p160
aVidioms
p161
asVlast_activity_date
p162
I1492007609
sVaccepted_answer_id
p163
I419185
sVcreation_date
p164
I1231301460
sVscore
p165
I2759
sVlink
p166
Vhttp://stackoverflow.com/questions/419163/what-does-if-name-main-do
p167
sVanswer_count
p168
I17
sVowner
p169
(dp170
Vuser_id
p171
I51518
sVprofile_image
p172
Vhttps://www.gravatar.com/avatar/eb5a95cb1be342c4089183cd8232a7f2?s=128&d=identicon&r=PG
p173
sVuser_type
p174
Vregistered
p175
sVreputation
p176
I23053
sVlink
p177
Vhttp://stackoverflow.com/users/51518/devoted
p178
sVaccept_rate
p179
I86
sVdisplay_name
p180
VDevoted
p181
ssVtitle
p182
VWhat does if __name__ == &quot;__main__&quot;: do?
p183
sVlast_edit_date
p184
I1483287094
sVquestion_id
p185
I419163
sa(dp186
Vbody
p187
V<p>How can I call an external command (as if I'd typed it at the Unix shell or Windows command prompt) from within a Python script?</p>\u000a
p188
sVis_answered
p189
I01
sVprotected_date
p190
I1366143800
sVview_count
p191
I1910615
sVtags
p192
(lp193
Vpython
p194
aVshell
p195
aVcommand
p196
aVsubprocess
p197
aVexternal
p198
asVlast_activity_date
p199
I1488816362
sVaccepted_answer_id
p200
I89243
sVcreation_date
p201
I1221701730
sVscore
p202
I2715
sVlink
p203
Vhttp://stackoverflow.com/questions/89228/calling-an-external-command-in-python
p204
sVanswer_count
p205
I44
sVowner
p206
(dp207
Vuser_id
p208
I17085
sVprofile_image
p209
Vhttps://www.gravatar.com/avatar/d386a6f2f3dda7bcf7f1e11c2171946b?s=128&d=identicon&r=PG
p210
sVuser_type
p211
Vregistered
p212
sVreputation
p213
I14268
sVlink
p214
Vhttp://stackoverflow.com/users/17085/freshwower
p215
sVaccept_rate
p216
I89
sVdisplay_name
p217
VfreshWoWer
p218
ssVtitle
p219
VCalling an external command in Python
p220
sVlast_edit_date
p221
I1411389611
sVquestion_id
p222
I89228
sa(dp223
Vbody
p224
V<p>I have two Python dictionaries, and I want to write a single expression that returns these two dictionaries, merged.  The <code>update()</code> method would be what I need, if it returned its result instead of modifying a dict in-place.</p>\u000a\u000a<pre><code>&gt;&gt;&gt; x = {'a':1, 'b': 2}\u000a&gt;&gt;&gt; y = {'b':10, 'c': 11}\u000a&gt;&gt;&gt; z = x.update(y)\u000a&gt;&gt;&gt; print(z)\u000aNone\u000a&gt;&gt;&gt; x\u000a{'a': 1, 'b': 10, 'c': 11}\u000a</code></pre>\u000a\u000a<p>How can I get that final merged dict in z, not x?</p>\u000a\u000a<p>(To be extra-clear, the last-one-wins conflict-handling of <code>dict.update()</code> is what I'm looking for as well.)</p>\u000a
p225
sVis_answered
p226
I01
sVprotected_date
p227
I1392127410
sVview_count
p228
I787921
sVtags
p229
(lp230
Vpython
p231
aVpython-3.x
p232
aVdictionary
p233
aVmapping
p234
aVidioms
p235
asVlast_activity_date
p236
I1492283587
sVaccepted_answer_id
p237
I26853961
sVcreation_date
p238
I1220341470
sVscore
p239
I2295
sVlink
p240
Vhttp://stackoverflow.com/questions/38987/how-to-merge-two-python-dictionaries-in-a-single-expression
p241
sVanswer_count
p242
I38
sVowner
p243
(dp244
Vuser_id
p245
I3207
sVprofile_image
p246
Vhttps://www.gravatar.com/avatar/b1f36e554be0e1ae19f9a74d6ece9107?s=128&d=identicon&r=PG
p247
sVuser_type
p248
Vregistered
p249
sVreputation
p250
I47567
sVlink
p251
Vhttp://stackoverflow.com/users/3207/carl-meyer
p252
sVaccept_rate
p253
I100
sVdisplay_name
p254
VCarl Meyer
p255
ssVtitle
p256
VHow to merge two Python dictionaries in a single expression?
p257
sVlast_edit_date
p258
I1490503852
sVquestion_id
p259
I38987
sa(dp260
Vbody
p261
V<p>I have a dictionary of values read from two fields in a database: a string field and a numeric field. The string field is unique, so that is the key of the dictionary.</p>\u000a\u000a<p>I can sort on the keys, but how can I sort based on the values?</p>\u000a\u000a<p>Note: I have read Stack Overflow question <a href="http://stackoverflow.com/questions/72899">How do I sort a list of dictionaries by values of the dictionary in Python?</a> and probably could change my code to have a list of dictionaries, but since I do not really need a list of dictionaries I wanted to know if there is a simpler solution.</p>\u000a
p262
sVis_answered
p263
I01
sVprotected_date
p264
I1340465478
sVview_count
p265
I1292591
sVtags
p266
(lp267
Vpython
p268
aVsorting
p269
aVdictionary
p270
asVlast_activity_date
p271
I1494205906
sVaccepted_answer_id
p272
I613218
sVcreation_date
p273
I1236214145
sVscore
p274
I2215
sVlink
p275
Vhttp://stackoverflow.com/questions/613183/sort-a-python-dictionary-by-value
p276
sVanswer_count
p277
I36
sVowner
p278
(dp279
Vuser_id
p280
I2786
sVprofile_image
p281
Vhttps://www.gravatar.com/avatar/a82355039ccbe7d12a8ffee222dc225d?s=128&d=identicon&r=PG
p282
sVuser_type
p283
Vregistered
p284
sVreputation
p285
I13936
sVlink
p286
Vhttp://stackoverflow.com/users/2786/gern-blanston
p287
sVaccept_rate
p288
I49
sVdisplay_name
p289
VGern Blanston
p290
ssVtitle
p291
VSort a Python dictionary by value
p292
sVlast_edit_date
p293
I1405998270
sVquestion_id
p294
I613183
sa(dp295
Vbody
p296
V<p>What is the most elegant way to check if the directory a file is going to be written to exists, and if not, create the directory using Python? Here is what I tried:</p>\u000a\u000a<pre><code>import os\u000a\u000afile_path = "/my/directory/filename.txt"\u000adirectory = os.path.dirname(file_path)\u000a\u000atry:\u000a    os.stat(directory)\u000aexcept:\u000a    os.mkdir(directory)       \u000a\u000af = file(filename)\u000a</code></pre>\u000a\u000a<p>Somehow, I missed <code>os.path.exists</code> (thanks kanja, Blair, and Douglas). This is what I have now:</p>\u000a\u000a<pre><code>def ensure_dir(file_path):\u000a    directory = os.path.dirname(file_path)\u000a    if not os.path.exists(directory):\u000a        os.makedirs(directory)\u000a</code></pre>\u000a\u000a<p>Is there a flag for "open", that makes this happen automatically?</p>\u000a
p297
sVis_answered
p298
I01
sVprotected_date
p299
I1392127892
sVview_count
p300
I1243561
sVtags
p301
(lp302
Vpython
p303
aVexception
p304
aVdirectory
p305
asVlast_activity_date
p306
I1492998954
sVaccepted_answer_id
p307
I273227
sVcreation_date
p308
I1226084205
sVscore
p309
I2096
sVlink
p310
Vhttp://stackoverflow.com/questions/273192/how-to-check-if-a-directory-exists-and-create-it-if-necessary
p311
sVanswer_count
p312
I21
sVowner
p313
(dp314
Vuser_id
p315
I13055
sVprofile_image
p316
Vhttps://www.gravatar.com/avatar/ab82fd8b5ffe4d09c2bb5f9c14d34b09?s=128&d=identicon&r=PG
p317
sVuser_type
p318
Vregistered
p319
sVreputation
p320
I30427
sVlink
p321
Vhttp://stackoverflow.com/users/13055/parand
p322
sVaccept_rate
p323
I68
sVdisplay_name
p324
VParand
p325
ssVtitle
p326
VHow to check if a directory exists and create it if necessary?
p327
sVlast_edit_date
p328
I1487255907
sVquestion_id
p329
I273192
sa(dp330
Vbody
p331
V<p>How can I make two decorators in Python that would do the following?</p>\u000a\u000a<pre><code>@makebold\u000a@makeitalic\u000adef say():\u000a   return "Hello"\u000a</code></pre>\u000a\u000a<p>...which should return:</p>\u000a\u000a<pre><code>"&lt;b&gt;&lt;i&gt;Hello&lt;/i&gt;&lt;/b&gt;"\u000a</code></pre>\u000a\u000a<p>I'm not trying to make <code>HTML</code> this way in a real application - just trying to understand how decorators and decorator chaining works.</p>\u000a
p332
sVis_answered
p333
I01
sVprotected_date
p334
I1365593629
sVview_count
p335
I383586
sVtags
p336
(lp337
Vpython
p338
aVdecorator
p339
aVpython-decorators
p340
asVlast_activity_date
p341
I1491900532
sVaccepted_answer_id
p342
I739665
sVcreation_date
p343
I1239433531
sVscore
p344
I2095
sVlink
p345
Vhttp://stackoverflow.com/questions/739654/how-to-make-a-chain-of-function-decorators
p346
sVanswer_count
p347
I16
sVowner
p348
(dp349
Vuser_id
p350
I1897
sVprofile_image
p351
Vhttps://www.gravatar.com/avatar/09d9b10ad83581c21328d44e48c77b9d?s=128&d=identicon&r=PG
p352
sVuser_type
p353
Vregistered
p354
sVreputation
p355
I34856
sVlink
p356
Vhttp://stackoverflow.com/users/1897/imran
p357
sVaccept_rate
p358
I97
sVdisplay_name
p359
VImran
p360
ssVtitle
p361
VHow to make a chain of function decorators?
p362
sVlast_edit_date
p363
I1486569526
sVquestion_id
p364
I739654
sa(dp365
Vbody
p366
V<p>If I create a global variable in one function, how can I use that variable in another function?<br>\u000aDo I need to store the global variable in a local variable of the function which needs its access?</p>\u000a
p367
sVis_answered
p368
I01
sVprotected_date
p369
I1458291640
sVview_count
p370
I1997098
sVtags
p371
(lp372
Vpython
p373
aVglobal-variables
p374
aVscope
p375
asVlast_activity_date
p376
I1491592555
sVaccepted_answer_id
p377
I423596
sVcreation_date
p378
I1231393502
sVscore
p379
I1965
sVlink
p380
Vhttp://stackoverflow.com/questions/423379/using-global-variables-in-a-function-other-than-the-one-that-created-them
p381
sVanswer_count
p382
I16
sVowner
p383
(dp384
Vuser_id
p385
I46646
sVprofile_image
p386
Vhttps://www.gravatar.com/avatar/a1e278de9bdbf3ecd96d0d786fa97392?s=128&d=identicon&r=PG
p387
sVuser_type
p388
Vregistered
p389
sVreputation
p390
I32428
sVlink
p391
Vhttp://stackoverflow.com/users/46646/user46646
p392
sVaccept_rate
p393
I33
sVdisplay_name
p394
Vuser46646
p395
ssVtitle
p396
VUsing global variables in a function other than the one that created them
p397
sVlast_edit_date
p398
I1411390732
sVquestion_id
p399
I423379
sa(dp400
Vbody
p401
V<p>For example, if passed the following:</p>\u000a\u000a<pre><code>a = []\u000a</code></pre>\u000a\u000a<p>How do I check to see if <code>a</code> is empty?</p>\u000a
p402
sVis_answered
p403
I01
sVprotected_date
p404
I1361520639
sVview_count
p405
I1137521
sVtags
p406
(lp407
Vpython
p408
aVlist
p409
asVlast_activity_date
p410
I1493261523
sVaccepted_answer_id
p411
I53522
sVcreation_date
p412
I1221027611
sVscore
p413
I1964
sVlink
p414
Vhttp://stackoverflow.com/questions/53513/best-way-to-check-if-a-list-is-empty
p415
sVanswer_count
p416
I29
sVowner
p417
(dp418
Vuser_id
p419
I4872
sVprofile_image
p420
Vhttps://www.gravatar.com/avatar/2da21199d56ce93c5092f1c386d5a577?s=128&d=identicon&r=PG
p421
sVuser_type
p422
Vregistered
p423
sVreputation
p424
I59218
sVlink
p425
Vhttp://stackoverflow.com/users/4872/ray-vega
p426
sVaccept_rate
p427
I90
sVdisplay_name
p428
VRay Vega
p429
ssVtitle
p430
VBest way to check if a list is empty
p431
sVlast_edit_date
p432
I1397814145
sVquestion_id
p433
I53513
sa(dp434
Vbody
p435
V<p>What's the difference between the list methods <code>append()</code> and <code>extend()</code>?</p>\u000a
p436
sVis_answered
p437
I01
sVprotected_date
p438
I1431102756
sVview_count
p439
I1473950
sVtags
p440
(lp441
Vpython
p442
aVlist
p443
aVappend
p444
aVextend
p445
asVlast_activity_date
p446
I1491720951
sVaccepted_answer_id
p447
I252711
sVcreation_date
p448
I1225432536
sVscore
p449
I1952
sVlink
p450
Vhttp://stackoverflow.com/questions/252703/append-vs-extend
p451
sVanswer_count
p452
I19
sVowner
p453
(dp454
Vuser_id
p455
I15055
sVprofile_image
p456
Vhttps://www.gravatar.com/avatar/7f71287b47b7189d11fe6d3fbc7ed2fe?s=128&d=identicon&r=PG
p457
sVuser_type
p458
Vregistered
p459
sVreputation
p460
I103470
sVlink
p461
Vhttp://stackoverflow.com/users/15055/claudiu
p462
sVaccept_rate
p463
I80
sVdisplay_name
p464
VClaudiu
p465
ssVtitle
p466
Vappend vs. extend
p467
sVlast_edit_date
p468
I1466469314
sVquestion_id
p469
I252703
sa(dp470
Vbody
p471
V<p>What is the difference between a function decorated with <a href="http://docs.python.org/library/functions.html#staticmethod" rel="noreferrer"><code>@staticmethod</code></a> and one decorated with <a href="http://docs.python.org/library/functions.html#classmethod" rel="noreferrer"><code>@classmethod</code></a>?</p>\u000a
p472
sVis_answered
p473
I01
sVprotected_date
p474
I1357551416
sVview_count
p475
I350696
sVtags
p476
(lp477
Vpython
p478
aVoop
p479
asVlast_activity_date
p480
I1494690926
sVaccepted_answer_id
p481
I1669524
sVcreation_date
p482
I1222376517
sVscore
p483
I1927
sVlink
p484
Vhttp://stackoverflow.com/questions/136097/what-is-the-difference-between-staticmethod-and-classmethod-in-python
p485
sVanswer_count
p486
I18
sVowner
p487
(dp488
Vuser_id
p489
I4766
sVprofile_image
p490
Vhttps://www.gravatar.com/avatar/56dbb3799dd6358c3bee3468d0328046?s=128&d=identicon&r=PG
p491
sVuser_type
p492
Vregistered
p493
sVreputation
p494
I37431
sVlink
p495
Vhttp://stackoverflow.com/users/4766/daryl-spitzer
p496
sVaccept_rate
p497
I96
sVdisplay_name
p498
VDaryl Spitzer
p499
ssVtitle
p500
VWhat is the difference between @staticmethod and @classmethod in Python?
p501
sVlast_edit_date
p502
I1494690926
sVquestion_id
p503
I136097
sa(dp504
Vbody
p505
V<p>I'm looking for a <code>string.contains</code> or <code>string.indexof</code> method in Python.</p>\u000a\u000a<p>I want to do:</p>\u000a\u000a<pre><code>if not somestring.contains("blah"):\u000a   continue\u000a</code></pre>\u000a
p506
sVis_answered
p507
I01
sVprotected_date
p508
I1444738815
sVview_count
p509
I1595096
sVtags
p510
(lp511
Vpython
p512
aVstring
p513
aVsubstring
p514
aVcontains
p515
asVlast_activity_date
p516
I1493405536
sVaccepted_answer_id
p517
I3437070
sVcreation_date
p518
I1281322370
sVscore
p519
I1874
sVlink
p520
Vhttp://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method
p521
sVanswer_count
p522
I11
sVowner
p523
(dp524
Vuser_id
p525
I39677
sVprofile_image
p526
Vhttps://www.gravatar.com/avatar/77aa7bc1ace6e4b0b49a2102e4fa4059?s=128&d=identicon&r=PG
p527
sVuser_type
p528
Vregistered
p529
sVreputation
p530
I72892
sVlink
p531
Vhttp://stackoverflow.com/users/39677/blankman
p532
sVaccept_rate
p533
I58
sVdisplay_name
p534
VBlankman
p535
ssVtitle
p536
VDoes Python have a string contains substring method?
p537
sVlast_edit_date
p538
I1441925262
sVquestion_id
p539
I3437059
sa(dp540
Vbody
p541
V<p>How can I list all files of a directory in python and add them to a list?</p>\u000a
p542
sVis_answered
p543
I01
sVprotected_date
p544
I1418871258
sVview_count
p545
I1505333
sVtags
p546
(lp547
Vpython
p548
aVdirectory
p549
asVlast_activity_date
p550
I1495122728
sVanswer_count
p551
I21
sVcreation_date
p552
I1278617482
sVscore
p553
I1873
sVlink
p554
Vhttp://stackoverflow.com/questions/3207219/how-to-list-all-files-of-a-directory
p555
sVowner
p556
(dp557
Vuser_id
p558
I385652
sVprofile_image
p559
Vhttps://www.gravatar.com/avatar/11e64aea4e206ff5498ad34adda044b4?s=128&d=identicon&r=PG
p560
sVuser_type
p561
Vunregistered
p562
sVreputation
p563
I11033
sVlink
p564
Vhttp://stackoverflow.com/users/385652/duhhunjonn
p565
sVaccept_rate
p566
I0
sVdisplay_name
p567
Vduhhunjonn
p568
ssVtitle
p569
VHow to list all files of a directory?
p570
sVlast_edit_date
p571
I1486410974
sVquestion_id
p572
I3207219
sa(dp573
Vcommunity_owned_date
p574
I1390050410
sVis_answered
p575
I01
sVprotected_date
p576
I1392127436
sVview_count
p577
I1648567
sVtags
p578
(lp579
Vpython
p580
aVwindows
p581
aVinstallation
p582
aVpip
p583
aVeasy-install
p584
asVbody
p585
V<p><a href="https://pip.pypa.io/en/stable/" rel="noreferrer"><code>pip</code></a> is a replacement for <a href="http://setuptools.readthedocs.io/en/latest/easy_install.html" rel="noreferrer"><code>easy_install</code></a>. But should I install <code>pip</code> using <code>easy_install</code> on Windows?  Is there a better way?</p>\u000a
p586
sVlast_activity_date
p587
I1491527825
sVaccepted_answer_id
p588
I12476379
sVcreation_date
p589
I1295546939
sVscore
p590
I1867
sVlink
p591
Vhttp://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows
p592
sVanswer_count
p593
I30
sVowner
p594
(dp595
Vuser_id
p596
I362951
sVprofile_image
p597
Vhttps://www.gravatar.com/avatar/c5a1457e089d8bfcf9190127689f3338?s=128&d=identicon&r=PG
p598
sVuser_type
p599
Vregistered
p600
sVreputation
p601
I5632
sVlink
p602
Vhttp://stackoverflow.com/users/362951/mit
p603
sVaccept_rate
p604
I94
sVdisplay_name
p605
Vmit
p606
ssVtitle
p607
VHow do I install pip on Windows?
p608
sVlast_edit_date
p609
I1488455895
sVquestion_id
p610
I4750806
sa(dp611
Vbody
p612
V<p>How do I access the index itself for a list like the following?</p>\u000a\u000a<pre><code>ints = [8, 23, 45, 12, 78]\u000a</code></pre>\u000a\u000a<p>When I loop through it using a <code>for</code> loop, how do I access the loop index, from 1 to 5 in this case?</p>\u000a
p613
sVis_answered
p614
I01
sVprotected_date
p615
I1458291839
sVview_count
p616
I847499
sVtags
p617
(lp618
Vpython
p619
aVloops
p620
aVlist
p621
asVlast_activity_date
p622
I1474109155
sVaccepted_answer_id
p623
I522578
sVcreation_date
p624
I1233960474
sVscore
p625
I1831
sVlink
p626
Vhttp://stackoverflow.com/questions/522563/accessing-the-index-in-python-for-loops
p627
sVanswer_count
p628
I11
sVowner
p629
(dp630
Vuser_id
p631
I51816
sVprofile_image
p632
Vhttps://www.gravatar.com/avatar/0e54bb28182bcd9df39704751306df27?s=128&d=identicon&r=PG
p633
sVuser_type
p634
Vregistered
p635
sVreputation
p636
I72530
sVlink
p637
Vhttp://stackoverflow.com/users/51816/joan-venge
p638
sVaccept_rate
p639
I82
sVdisplay_name
p640
VJoan Venge
p641
ssVtitle
p642
VAccessing the index in Python &#39;for&#39; loops
p643
sVlast_edit_date
p644
I1474107174
sVquestion_id
p645
I522563
sa(dp646
Vbody
p647
V<p>Anyone tinkering with Python long enough has been bitten (or torn to pieces) by the following issue:</p>\u000a\u000a<pre><code>def foo(a=[]):\u000a    a.append(5)\u000a    return a\u000a</code></pre>\u000a\u000a<p>Python novices would expect this function to always return a list with only one element: <code>[5]</code>. The result is instead very different, and very astonishing (for a novice):</p>\u000a\u000a<pre><code>&gt;&gt;&gt; foo()\u000a[5]\u000a&gt;&gt;&gt; foo()\u000a[5, 5]\u000a&gt;&gt;&gt; foo()\u000a[5, 5, 5]\u000a&gt;&gt;&gt; foo()\u000a[5, 5, 5, 5]\u000a&gt;&gt;&gt; foo()\u000a</code></pre>\u000a\u000a<p>A manager of mine once had his first encounter with this feature, and called it "a dramatic design flaw" of the language. I replied that the behavior had an underlying explanation, and it is indeed very puzzling and unexpected if you don't understand the internals. However, I was not able to answer (to myself) the following question: what is the reason for binding the default argument at function definition, and not at function execution? I doubt the experienced behavior has a practical use (who really used static variables in C, without breeding bugs?)</p>\u000a\u000a<p><strong>Edit</strong>: </p>\u000a\u000a<p>Baczek made an interesting example. Together with most of your comments and Utaal's in particular, I elaborated further:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; def a():\u000a...     print("a executed")\u000a...     return []\u000a... \u000a&gt;&gt;&gt;            \u000a&gt;&gt;&gt; def b(x=a()):\u000a...     x.append(5)\u000a...     print(x)\u000a... \u000aa executed\u000a&gt;&gt;&gt; b()\u000a[5]\u000a&gt;&gt;&gt; b()\u000a[5, 5]\u000a</code></pre>\u000a\u000a<p>To me, it seems that the design decision was relative to where to put the scope of parameters: inside the function or "together" with it?</p>\u000a\u000a<p>Doing the binding inside the function would mean that <code>x</code> is effectively bound to the specified default when the function is called, not defined, something that would present a deep flaw: the <code>def</code> line would be "hybrid" in the sense that part of the binding (of the function object) would happen at definition, and part (assignment of default parameters) at function invocation time.</p>\u000a\u000a<p>The actual behavior is more consistent: everything of that line gets evaluated when that line is executed, meaning at function definition.</p>\u000a
p648
sVis_answered
p649
I01
sVprotected_date
p650
I1326471202
sVview_count
p651
I90923
sVtags
p652
(lp653
Vpython
p654
aVlanguage-design
p655
aVleast-astonishment
p656
asVlast_activity_date
p657
I1491430635
sVaccepted_answer_id
p658
I1145781
sVcreation_date
p659
I1247680837
sVscore
p660
I1679
sVlink
p661
Vhttp://stackoverflow.com/questions/1132941/least-astonishment-and-the-mutable-default-argument
p662
sVanswer_count
p663
I29
sVowner
p664
(dp665
Vuser_id
p666
I78374
sVprofile_image
p667
Vhttps://www.gravatar.com/avatar/f13cb1b1bd8b16bf6dc6eda558e162a0?s=128&d=identicon&r=PG
p668
sVuser_type
p669
Vregistered
p670
sVreputation
p671
I60173
sVlink
p672
Vhttp://stackoverflow.com/users/78374/stefano-borini
p673
sVaccept_rate
p674
I67
sVdisplay_name
p675
VStefano Borini
p676
ssVtitle
p677
V&quot;Least Astonishment&quot; and the Mutable Default Argument
p678
sVlast_edit_date
p679
I1485649788
sVquestion_id
p680
I1132941
sa(dp681
Vbody
p682
V<p>The Python documentation seems unclear about whether parameters are passed by reference or value, and the following code produces the unchanged value 'Original'</p>\u000a\u000a<pre><code>class PassByReference:\u000a    def __init__(self):\u000a        self.variable = 'Original'\u000a        self.change(self.variable)\u000a        print(self.variable)\u000a\u000a    def change(self, var):\u000a        var = 'Changed'\u000a</code></pre>\u000a\u000a<p>Is there something I can do to pass the variable by actual reference?</p>\u000a
p683
sVis_answered
p684
I01
sVprotected_date
p685
I1334875788
sVview_count
p686
I714897
sVtags
p687
(lp688
Vpython
p689
aVreference
p690
aVparameter-passing
p691
aVpass-by-reference
p692
asVlast_activity_date
p693
I1491185618
sVaccepted_answer_id
p694
I986145
sVcreation_date
p695
I1244802231
sVscore
p696
I1666
sVlink
p697
Vhttp://stackoverflow.com/questions/986006/how-do-i-pass-a-variable-by-reference
p698
sVanswer_count
p699
I21
sVowner
p700
(dp701
Vuser_id
p702
I259
sVprofile_image
p703
Vhttps://www.gravatar.com/avatar/0c95a3798d9a008b6c29605b8f15b47a?s=128&d=identicon&r=PG
p704
sVuser_type
p705
Vregistered
p706
sVreputation
p707
I16182
sVlink
p708
Vhttp://stackoverflow.com/users/259/david-sykes
p709
sVaccept_rate
p710
I97
sVdisplay_name
p711
VDavid Sykes
p712
ssVtitle
p713
VHow do I pass a variable by reference?
p714
sVlast_edit_date
p715
I1490199401
sVquestion_id
p716
I986006
sa(dp717
Vbody
p718
V<p>I need a good explanation (references are a plus) on Python's slice notation. </p>\u000a\u000a<p>To me, this notation needs a bit of picking up. </p>\u000a\u000a<p>It looks extremely powerful, but I haven't quite got my head around it.</p>\u000a
p719
sVis_answered
p720
I01
sVprotected_date
p721
I1360315248
sVview_count
p722
I806914
sVtags
p723
(lp724
Vpython
p725
aVlist
p726
aVslice
p727
asVlast_activity_date
p728
I1493846683
sVaccepted_answer_id
p729
I509295
sVcreation_date
p730
I1233700262
sVscore
p731
I1649
sVlink
p732
Vhttp://stackoverflow.com/questions/509211/explain-pythons-slice-notation
p733
sVanswer_count
p734
I22
sVowner
p735
(dp736
Vuser_id
p737
I24039
sVprofile_image
p738
Vhttps://www.gravatar.com/avatar/56e7993be670c363354b696cff311172?s=128&d=identicon&r=PG
p739
sVuser_type
p740
Vregistered
p741
sVreputation
p742
I25097
sVlink
p743
Vhttp://stackoverflow.com/users/24039/simon
p744
sVaccept_rate
p745
I56
sVdisplay_name
p746
VSimon
p747
ssVtitle
p748
VExplain Python&#39;s slice notation
p749
sVlast_edit_date
p750
I1493846683
sVquestion_id
p751
I509211
sa(dp752
Vbody
p753
V<p>What is the difference between <code>__str__</code> and <code>__repr__</code> in <code>Python</code>?</p>\u000a
p754
sVis_answered
p755
I01
sVprotected_date
p756
I1392127952
sVview_count
p757
I339944
sVtags
p758
(lp759
Vpython
p760
asVlast_activity_date
p761
I1491309308
sVaccepted_answer_id
p762
I2626364
sVcreation_date
p763
I1253161665
sVscore
p764
I1603
sVlink
p765
Vhttp://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python
p766
sVanswer_count
p767
I15
sVowner
p768
(dp769
Vuser_id
p770
I165495
sVprofile_image
p771
Vhttps://graph.facebook.com/219001761/picture?type=large
p772
sVuser_type
p773
Vregistered
p774
sVreputation
p775
I39232
sVlink
p776
Vhttp://stackoverflow.com/users/165495/casebash
p777
sVaccept_rate
p778
I91
sVdisplay_name
p779
VCasebash
p780
ssVtitle
p781
VDifference between __str__ and __repr__ in Python
p782
sVlast_edit_date
p783
I1491305149
sVquestion_id
p784
I1436703
sa(dp785
Vbody
p786
V<p>For a list <code>["foo", "bar", "baz"]</code> and an item in the list <code>"bar"</code>, what's the cleanest way to get its index (1) in Python?</p>\u000a
p787
sVis_answered
p788
I01
sVprotected_date
p789
I1460736845
sVview_count
p790
I1617987
sVtags
p791
(lp792
Vpython
p793
aVlist
p794
asVlast_activity_date
p795
I1493028010
sVaccepted_answer_id
p796
I176921
sVcreation_date
p797
I1223343578
sVscore
p798
I1534
sVlink
p799
Vhttp://stackoverflow.com/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python
p800
sVanswer_count
p801
I17
sVowner
p802
(dp803
Vuser_id
p804
I25680
sVprofile_image
p805
Vhttps://www.gravatar.com/avatar/69d55a08bdc1f4440ff16d8d13427207?s=128&d=identicon&r=PG
p806
sVuser_type
p807
Vregistered
p808
sVreputation
p809
I9532
sVlink
p810
Vhttp://stackoverflow.com/users/25680/eugene-m
p811
sVaccept_rate
p812
I85
sVdisplay_name
p813
VEugene M
p814
ssVtitle
p815
VFinding the index of an item given a list containing it in Python
p816
sVlast_edit_date
p817
I1421315647
sVquestion_id
p818
I176918
sa(dp819
Vclosed_date
p820
I1446425726
sVis_answered
p821
I01
sVprotected_date
p822
I1390995987
sVclosed_reason
p823
Vduplicate
p824
sVview_count
p825
I979679
sVtags
p826
(lp827
Vpython
p828
aVoop
p829
aVinheritance
p830
aVsuper
p831
asVbody
p832
V<p>I'm trying to understand <code>super()</code>. From the looks of it, both child classes can be created just fine. I'm curious as to what difference there actually is between the following child classes:</p>\u000a\u000a<pre><code>class Base(object):\u000a    def __init__(self):\u000a        print "Base created"\u000a\u000aclass ChildA(Base):\u000a    def __init__(self):\u000a        Base.__init__(self)\u000a\u000aclass ChildB(Base):\u000a    def __init__(self):\u000a        super(ChildB, self).__init__()\u000a\u000aChildA() \u000aChildB()\u000a</code></pre>\u000a
p833
sVlast_activity_date
p834
I1492462239
sVaccepted_answer_id
p835
I576183
sVcreation_date
p836
I1235349008
sVscore
p837
I1526
sVlink
p838
Vhttp://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods
p839
sVanswer_count
p840
I7
sVowner
p841
(dp842
Vuser_id
p843
I56763
sVprofile_image
p844
Vhttps://www.gravatar.com/avatar/9e9bb40f93094055bd09193eb3bccbb8?s=128&d=identicon&r=PG
p845
sVuser_type
p846
Vregistered
p847
sVreputation
p848
I18431
sVlink
p849
Vhttp://stackoverflow.com/users/56763/mizipzor
p850
sVaccept_rate
p851
I86
sVdisplay_name
p852
VMizipzor
p853
ssVtitle
p854
VUnderstanding Python super() with __init__() methods
p855
sVlast_edit_date
p856
I1491426531
sVquestion_id
p857
I576169
sa(dp858
Vbody
p859
V<p>We are working on an <a href="http://en.wikipedia.org/wiki/S60_%28software_platform%29" rel="noreferrer">S60</a> version and this platform has a nice Python API. </p>\u000a\u000a<p>However, there is nothing official about Python on Android, but since <a href="http://en.wikipedia.org/wiki/Jython" rel="noreferrer">Jython</a> exists, is there a way to let the snake and the robot work together?</p>\u000a
p860
sVis_answered
p861
I01
sVprotected_date
p862
I1341892047
sVview_count
p863
I392426
sVtags
p864
(lp865
Vandroid
p866
aVpython
p867
aVjython
p868
aVase
p869
aVandroid-scripting
p870
asVlast_activity_date
p871
I1493380825
sVaccepted_answer_id
p872
I8189603
sVcreation_date
p873
I1221830472
sVscore
p874
I1512
sVlink
p875
Vhttp://stackoverflow.com/questions/101754/is-there-a-way-to-run-python-on-android
p876
sVanswer_count
p877
I22
sVowner
p878
(dp879
Vuser_id
p880
I9951
sVprofile_image
p881
Vhttps://www.gravatar.com/avatar/1449ec95d8c114dbca53136cc8194b61?s=128&d=identicon&r=PG&f=1
p882
sVuser_type
p883
Vregistered
p884
sVreputation
p885
I277803
sVlink
p886
Vhttp://stackoverflow.com/users/9951/e-satis
p887
sVaccept_rate
p888
I79
sVdisplay_name
p889
Ve-satis
p890
ssVtitle
p891
VIs there a way to run Python on Android?
p892
sVlast_edit_date
p893
I1493380825
sVquestion_id
p894
I101754
sa(dp895
Vbody
p896
V<p>I wanted to test if a key exists in a dictionary before updating the value for the key.\u000aI wrote the following code:</p>\u000a\u000a<pre><code>if 'key1' in dict.keys():\u000a  print "blah"\u000aelse:\u000a  print "boo"\u000a</code></pre>\u000a\u000a<p>I think this is not the best way to accomplish this task. Is there a better way to test for a key in the dictionary?</p>\u000a
p897
sVis_answered
p898
I01
sVprotected_date
p899
I1441774031
sVview_count
p900
I1406701
sVtags
p901
(lp902
Vpython
p903
aVdictionary
p904
asVlast_activity_date
p905
I1493204569
sVaccepted_answer_id
p906
I1602964
sVcreation_date
p907
I1256151909
sVscore
p908
I1500
sVlink
p909
Vhttp://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary
p910
sVanswer_count
p911
I15
sVowner
p912
(dp913
Vuser_id
p914
I112850
sVprofile_image
p915
Vhttps://www.gravatar.com/avatar/9e9b6aa699adda116c6132adcde9d73f?s=128&d=identicon&r=PG
p916
sVuser_type
p917
Vregistered
p918
sVreputation
p919
I8057
sVlink
p920
Vhttp://stackoverflow.com/users/112850/mohan-gulati
p921
sVaccept_rate
p922
I50
sVdisplay_name
p923
VMohan Gulati
p924
ssVtitle
p925
VCheck if a given key already exists in a dictionary
p926
sVlast_edit_date
p927
I1367477100
sVquestion_id
p928
I1602934
sa(dp929
Vbody
p930
V<p>I know that I can do:</p>\u000a\u000a<pre><code>try:\u000a    # do something that may fail\u000aexcept:\u000a    # do this if ANYTHING goes wrong\u000a</code></pre>\u000a\u000a<p>I can also do this:</p>\u000a\u000a<pre><code>try:\u000a    # do something that may fail\u000aexcept IDontLikeYourFaceException:\u000a    # put on makeup or smile\u000aexcept YouAreTooShortException:\u000a    # stand on a ladder\u000a</code></pre>\u000a\u000a<p>But if I want to do the same thing inside two different exceptions, the best I can think of right now is to do this:</p>\u000a\u000a<pre><code>try:\u000a    # do something that may fail\u000aexcept IDontLikeYouException:\u000a    # say please\u000aexcept YouAreBeingMeanException:\u000a    # say please\u000a</code></pre>\u000a\u000a<p>Is there any way that I can do something like this (since the action to take in both exceptions is to <code>say please</code>):</p>\u000a\u000a<pre><code>try:\u000a    # do something that may fail\u000aexcept IDontLikeYouException, YouAreBeingMeanException:\u000a    # say please\u000a</code></pre>\u000a\u000a<p>Now this really won't work, as it matches the syntax for:</p>\u000a\u000a<pre><code>try:\u000a    # do something that may fail\u000aexcept Exception, e:\u000a    # say please\u000a</code></pre>\u000a\u000a<p>So, my effort to catch the two distinct exceptions doesn't exactly come through.</p>\u000a\u000a<p>Is there a way to do this?</p>\u000a
p931
sVis_answered
p932
I01
sVprotected_date
p933
I1447952997
sVview_count
p934
I293815
sVtags
p935
(lp936
Vpython
p937
aVexception
p938
aVexception-handling
p939
asVlast_activity_date
p940
I1486330496
sVaccepted_answer_id
p941
I6470452
sVcreation_date
p942
I1308930908
sVscore
p943
I1451
sVlink
p944
Vhttp://stackoverflow.com/questions/6470428/catch-multiple-exceptions-in-one-line-except-block
p945
sVanswer_count
p946
I4
sVowner
p947
(dp948
Vuser_id
p949
I198633
sVprofile_image
p950
Vhttps://www.gravatar.com/avatar/5b9c04999233026354268c2ee4237e04?s=128&d=identicon&r=PG
p951
sVuser_type
p952
Vregistered
p953
sVreputation
p954
I49823
sVlink
p955
Vhttp://stackoverflow.com/users/198633/inspectorg4dget
p956
sVaccept_rate
p957
I89
sVdisplay_name
p958
VinspectorG4dget
p959
ssVtitle
p960
VCatch multiple exceptions in one line (except block)
p961
sVlast_edit_date
p962
I1486330496
sVquestion_id
p963
I6470428
sa(dp964
Vclosed_date
p965
I1329768589
sVis_answered
p966
I01
sVclosed_reason
p967
Vnot constructive
p968
sVview_count
p969
I582940
sVtitle
p970
VHidden features of Python
p971
sVtags
p972
(lp973
Vpython
p974
aVhidden-features
p975
asVbody
p976
V<p>What are the lesser-known but useful features of the Python programming language?</p>\u000a\u000a<ul>\u000a<li>Try to limit answers to Python core.</li>\u000a<li>One feature per answer.</li>\u000a<li>Give an example and short description of the feature, not just a link to documentation.</li>\u000a<li>Label the feature using a title as the first line.</li>\u000a</ul>\u000a\u000a<h2>Quick links to answers:</h2>\u000a\u000a<ul>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#111176">Argument Unpacking</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#112303">Braces</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101945">Chaining Comparison Operators</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101447">Decorators</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#113198">Default Argument Gotchas / Dangers of Mutable Default arguments</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#102062">Descriptors</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#111970">Dictionary default <code>.get</code> value</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#102065">Docstring Tests</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python/112316#112316">Ellipsis Slicing Syntax</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#117116">Enumeration</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#114420">For/else</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#102202">Function as iter() argument</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101310">Generator expressions</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101276"><code>import this</code></a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#102037">In Place Value Swapping</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101840">List stepping</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#112286"><code>__missing__</code> items</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101537">Multi-line Regex</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#113164">Named string formatting</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101549">Nested list/generator comprehensions</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#108297">New types at runtime</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#113833"><code>.pth</code> files</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#1024693">ROT13 Encoding</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#143636">Regex Debugging</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#101739">Sending to Generators</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#168270">Tab Completion in Interactive Interpreter</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#116480">Ternary Expression</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#114157"><code>try/except/else</code></a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#3267903">Unpacking+<code>print()</code> function</a></li>\u000a<li><a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#109182"><code>with</code> statement</a></li>\u000a</ul>\u000a
p977
sVlast_activity_date
p978
I1344045294
sVanswer_count
p979
I191
sVcreation_date
p980
I1221825036
sVscore
p981
I1421
sVcommunity_owned_date
p982
I1221825036
sVowner
p983
(dp984
Vuser_id
p985
I2679
sVprofile_image
p986
Vhttps://www.gravatar.com/avatar/703f10be721a80be8971a9d92257e7c3?s=128&d=identicon&r=PG
p987
sVuser_type
p988
Vregistered
p989
sVreputation
p990
I4283
sVlink
p991
Vhttp://stackoverflow.com/users/2679/jelovirt
p992
sVaccept_rate
p993
I80
sVdisplay_name
p994
Vjelovirt
p995
ssVlink
p996
Vhttp://stackoverflow.com/questions/101268/hidden-features-of-python
p997
sVlast_edit_date
p998
I1323434087
sVlocked_date
p999
I1331337287
sVquestion_id
p1000
I101268
sa(dp1001
Vbody
p1002
V<p>Is it possible to add a key to a Python dictionary after it has been created? It doesn't seem to have an <code>.add()</code> method.</p>\u000a
p1003
sVis_answered
p1004
I01
sVprotected_date
p1005
I1379703998
sVview_count
p1006
I1435083
sVtags
p1007
(lp1008
Vpython
p1009
aVdictionary
p1010
asVlast_activity_date
p1011
I1494910641
sVaccepted_answer_id
p1012
I1024851
sVcreation_date
p1013
I1245622059
sVscore
p1014
I1412
sVlink
p1015
Vhttp://stackoverflow.com/questions/1024847/add-new-keys-to-a-dictionary
p1016
sVanswer_count
p1017
I14
sVowner
p1018
(dp1019
Vuser_id
p1020
I90777
sVprofile_image
p1021
Vhttps://www.gravatar.com/avatar/43918f842a892d0deb9ef1d8dcc9fe49?s=128&d=identicon&r=PG
p1022
sVuser_type
p1023
Vregistered
p1024
sVreputation
p1025
I12406
sVlink
p1026
Vhttp://stackoverflow.com/users/90777/lfaraone
p1027
sVaccept_rate
p1028
I86
sVdisplay_name
p1029
Vlfaraone
p1030
ssVtitle
p1031
VAdd new keys to a dictionary?
p1032
sVlast_edit_date
p1033
I1491443276
sVquestion_id
p1034
I1024847
sa(dp1035
Vbody
p1036
V<p>What is the module/method used to get current time?</p>\u000a
p1037
sVis_answered
p1038
I01
sVprotected_date
p1039
I1335441820
sVview_count
p1040
I1361347
sVtags
p1041
(lp1042
Vpython
p1043
aVdatetime
p1044
aVtime
p1045
asVlast_activity_date
p1046
I1492749565
sVaccepted_answer_id
p1047
I415519
sVcreation_date
p1048
I1231217663
sVscore
p1049
I1408
sVlink
p1050
Vhttp://stackoverflow.com/questions/415511/how-to-get-current-time-in-python
p1051
sVanswer_count
p1052
I22
sVowner
p1053
(dp1054
Vuser_id
p1055
I46646
sVprofile_image
p1056
Vhttps://www.gravatar.com/avatar/a1e278de9bdbf3ecd96d0d786fa97392?s=128&d=identicon&r=PG
p1057
sVuser_type
p1058
Vregistered
p1059
sVreputation
p1060
I32428
sVlink
p1061
Vhttp://stackoverflow.com/users/46646/user46646
p1062
sVaccept_rate
p1063
I33
sVdisplay_name
p1064
Vuser46646
p1065
ssVtitle
p1066
VHow to get current time in Python
p1067
sVlast_edit_date
p1068
I1431786614
sVquestion_id
p1069
I415511
sa(dp1070
Vbody
p1071
V<p>I am a bit puzzled by the following code:</p>\u000a\u000a<pre><code>d = {'x': 1, 'y': 2, 'z': 3} \u000afor key in d:\u000a    print key, 'corresponds to', d[key]\u000a</code></pre>\u000a\u000a<p>What I don't understand is the <code>key</code> portion. How does Python recognize that it needs only to read the key from the dictionary? Is <code>key</code> a special word in Python? Or is it simply a variable?</p>\u000a
p1072
sVis_answered
p1073
I01
sVprotected_date
p1074
I1476361893
sVview_count
p1075
I1808449
sVtags
p1076
(lp1077
Vpython
p1078
aVpython-2.7
p1079
aVdictionary
p1080
asVlast_activity_date
p1081
I1493257349
sVaccepted_answer_id
p1082
I3294899
sVcreation_date
p1083
I1279664862
sVscore
p1084
I1380
sVlink
p1085
Vhttp://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops
p1086
sVanswer_count
p1087
I8
sVowner
p1088
(dp1089
Vuser_id
p1090
I1212392
sVprofile_image
p1091
Vhttps://www.gravatar.com/avatar/2d2462f1533adf1f46730674902713df?s=128&d=identicon&r=PG
p1092
sVuser_type
p1093
Vregistered
p1094
sVreputation
p1095
I7574
sVlink
p1096
Vhttp://stackoverflow.com/users/1212392/topchef
p1097
sVaccept_rate
p1098
I84
sVdisplay_name
p1099
VTopChef
p1100
ssVtitle
p1101
VIterating over dictionaries using &#39;for&#39; loops
p1102
sVlast_edit_date
p1103
I1493067707
sVquestion_id
p1104
I3294889
sa(dp1105
Vbody
p1106
V<p>I would like to know how to put a time delay in a Python script.</p>\u000a
p1107
sVis_answered
p1108
I01
sVprotected_date
p1109
I1426019545
sVview_count
p1110
I1360832
sVtags
p1111
(lp1112
Vpython
p1113
aVsleep
p1114
aVtimedelay
p1115
asVlast_activity_date
p1116
I1490254585
sVanswer_count
p1117
I5
sVcreation_date
p1118
I1233731049
sVscore
p1119
I1352
sVlink
p1120
Vhttp://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python
p1121
sVowner
p1122
(dp1123
Vuser_id
p1124
I46646
sVprofile_image
p1125
Vhttps://www.gravatar.com/avatar/a1e278de9bdbf3ecd96d0d786fa97392?s=128&d=identicon&r=PG
p1126
sVuser_type
p1127
Vregistered
p1128
sVreputation
p1129
I32428
sVlink
p1130
Vhttp://stackoverflow.com/users/46646/user46646
p1131
sVaccept_rate
p1132
I33
sVdisplay_name
p1133
Vuser46646
p1134
ssVtitle
p1135
VHow can I make a time delay in Python?
p1136
sVlast_edit_date
p1137
I1399242753
sVquestion_id
p1138
I510348
sa(dp1139
Vbody
p1140
V<p>In Python, how can I parse a numeric string like <code>"545.2222"</code> to its corresponding float value, <code>542.2222</code>? Or parse the string <code>"31"</code> to an integer, <code>31</code>?</p>\u000a\u000a<p>I just want to know how to parse a float string to a float, and (separately) an int string to an int.</p>\u000a
p1141
sVis_answered
p1142
I01
sVprotected_date
p1143
I1365593283
sVview_count
p1144
I2212606
sVtags
p1145
(lp1146
Vpython
p1147
aVstring
p1148
aVparsing
p1149
aVfloating-point
p1150
aVinteger
p1151
asVlast_activity_date
p1152
I1495092507
sVaccepted_answer_id
p1153
I379910
sVcreation_date
p1154
I1229651546
sVscore
p1155
I1340
sVlink
p1156
Vhttp://stackoverflow.com/questions/379906/parse-string-to-float-or-int
p1157
sVanswer_count
p1158
I19
sVowner
p1159
(dp1160
Vuser_id
p1161
I30529
sVprofile_image
p1162
Vhttps://www.gravatar.com/avatar/f3a3491c1c83e8c62151752162184627?s=128&d=identicon&r=PG
p1163
sVuser_type
p1164
Vregistered
p1165
sVreputation
p1166
I18272
sVlink
p1167
Vhttp://stackoverflow.com/users/30529/tristan-havelick
p1168
sVaccept_rate
p1169
I94
sVdisplay_name
p1170
VTristan Havelick
p1171
ssVtitle
p1172
VParse String to Float or Int
p1173
sVlast_edit_date
p1174
I1393239709
sVquestion_id
p1175
I379906
sa(dp1176
Vbody
p1177
V<p>I wonder whether there is a shortcut to make a simple list out of list of lists in Python.</p>\u000a\u000a<p>I can do that in a for loop, but maybe there is some cool "one-liner"? I tried it with <em>reduce</em>, but I get an error.</p>\u000a\u000a<p><strong>Code</strong></p>\u000a\u000a<pre><code>l = [[1, 2, 3], [4, 5, 6], [7], [8, 9]]\u000areduce(lambda x, y: x.extend(y), l)\u000a</code></pre>\u000a\u000a<p><strong>Error message</strong></p>\u000a\u000a<pre><code>Traceback (most recent call last):\u000a  File "&lt;stdin&gt;", line 1, in &lt;module&gt;\u000a  File "&lt;stdin&gt;", line 1, in &lt;lambda&gt;\u000aAttributeError: 'NoneType' object has no attribute 'extend'\u000a</code></pre>\u000a
p1178
sVis_answered
p1179
I01
sVprotected_date
p1180
I1357910574
sVview_count
p1181
I724611
sVtags
p1182
(lp1183
Vpython
p1184
aVlist
p1185
asVlast_activity_date
p1186
I1494721698
sVaccepted_answer_id
p1187
I952952
sVcreation_date
p1188
I1244147405
sVscore
p1189
I1337
sVlink
p1190
Vhttp://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python
p1191
sVanswer_count
p1192
I19
sVowner
p1193
(dp1194
Vuser_id
p1195
I110527
sVprofile_image
p1196
Vhttps://www.gravatar.com/avatar/1a3fec384503a3e0b33361f146006598?s=128&d=identicon&r=PG
p1197
sVuser_type
p1198
Vregistered
p1199
sVreputation
p1200
I6870
sVlink
p1201
Vhttp://stackoverflow.com/users/110527/emma
p1202
sVdisplay_name
p1203
VEmma
p1204
ssVtitle
p1205
VMaking a flat list out of list of lists in Python
p1206
sVlast_edit_date
p1207
I1490199781
sVquestion_id
p1208
I952914
sa(dp1209
Vbody
p1210
V<p>How can I output colored text to the terminal, in Python?\u000aWhat is the best Unicode symbol to represent a solid block?</p>\u000a
p1211
sVis_answered
p1212
I01
sVprotected_date
p1213
I1433150728
sVview_count
p1214
I537447
sVtags
p1215
(lp1216
Vpython
p1217
aVunicode
p1218
aVterminal
p1219
aVansi-colors
p1220
asVlast_activity_date
p1221
I1494542035
sVanswer_count
p1222
I36
sVcreation_date
p1223
I1226602690
sVscore
p1224
I1187
sVlink
p1225
Vhttp://stackoverflow.com/questions/287871/print-in-terminal-with-colors-using-python
p1226
sVowner
p1227
(dp1228
Vuser_id
p1229
I35062
sVprofile_image
p1230
Vhttps://www.gravatar.com/avatar/a4a5a96e9c857f44d43456579cddc51a?s=128&d=identicon&r=PG
p1231
sVuser_type
p1232
Vregistered
p1233
sVreputation
p1234
I6050
sVlink
p1235
Vhttp://stackoverflow.com/users/35062/abosamoor
p1236
sVdisplay_name
p1237
VaboSamoor
p1238
ssVtitle
p1239
VPrint in terminal with colors using Python?
p1240
sVlast_edit_date
p1241
I1424616983
sVquestion_id
p1242
I287871
sa(dp1243
Vbody
p1244
V<p>How do I read every line of a file in Python and store each line as an element in a list? </p>\u000a\u000a<p>I want to read the file line by line and each line is appended to the end of the list.</p>\u000a
p1245
sVis_answered
p1246
I01
sVprotected_date
p1247
I1462171962
sVview_count
p1248
I1796950
sVtags
p1249
(lp1250
Vpython
p1251
aVstring
p1252
aVfile
p1253
aVreadlines
p1254
asVlast_activity_date
p1255
I1495191056
sVanswer_count
p1256
I28
sVcreation_date
p1257
I1279491901
sVscore
p1258
I1185
sVlink
p1259
Vhttp://stackoverflow.com/questions/3277503/how-do-i-read-a-file-line-by-line-into-a-list
p1260
sVowner
p1261
(dp1262
Vuser_id
p1263
I395371
sVprofile_image
p1264
Vhttps://www.gravatar.com/avatar/d7c5bad79bdae5642e6c04c9c8c0b83a?s=128&d=identicon&r=PG
p1265
sVuser_type
p1266
Vunregistered
p1267
sVreputation
p1268
I5950
sVlink
p1269
Vhttp://stackoverflow.com/users/395371/julie-raswick
p1270
sVdisplay_name
p1271
VJulie Raswick
p1272
ssVtitle
p1273
VHow do I read a file line-by-line into a list?
p1274
sVlast_edit_date
p1275
I1488664320
sVquestion_id
p1276
I3277503
sa(dp1277
Vbody
p1278
V<p>Is it possible to have static class variables or methods in python? What syntax is required to do this?</p>\u000a
p1279
sVis_answered
p1280
I01
sVprotected_date
p1281
I1475325837
sVview_count
p1282
I687581
sVtags
p1283
(lp1284
Vpython
p1285
aVclass
p1286
aVmethods
p1287
aVstatic
p1288
aVclass-variables
p1289
asVlast_activity_date
p1290
I1487768473
sVaccepted_answer_id
p1291
I68672
sVcreation_date
p1292
I1221529596
sVscore
p1293
I1185
sVlink
p1294
Vhttp://stackoverflow.com/questions/68645/static-class-variables-in-python
p1295
sVanswer_count
p1296
I15
sVowner
p1297
(dp1298
Vuser_id
p1299
I2246
sVprofile_image
p1300
Vhttps://i.stack.imgur.com/4bZ01.jpg?s=128&g=1
p1301
sVuser_type
p1302
Vregistered
p1303
sVreputation
p1304
I16322
sVlink
p1305
Vhttp://stackoverflow.com/users/2246/andrew-walker
p1306
sVaccept_rate
p1307
I83
sVdisplay_name
p1308
VAndrew Walker
p1309
ssVtitle
p1310
VStatic class variables in Python
p1311
sVlast_edit_date
p1312
I1410351049
sVquestion_id
p1313
I68645
sa(dp1314
Vbody
p1315
V<pre><code>items = []\u000aitems.append("apple")\u000aitems.append("orange")\u000aitems.append("banana")\u000a\u000a# FAKE METHOD::\u000aitems.amount()  # Should return 3\u000a</code></pre>\u000a\u000a<p>How do I get the number of elements in the list?</p>\u000a
p1316
sVis_answered
p1317
I01
sVprotected_date
p1318
I1379708701
sVview_count
p1319
I1667269
sVtags
p1320
(lp1321
Vpython
p1322
aVlist
p1323
asVlast_activity_date
p1324
I1491591813
sVaccepted_answer_id
p1325
I1712236
sVcreation_date
p1326
I1257899454
sVscore
p1327
I1173
sVlink
p1328
Vhttp://stackoverflow.com/questions/1712227/how-to-get-the-size-of-a-list
p1329
sVanswer_count
p1330
I7
sVowner
p1331
(dp1332
Vuser_id
p1333
I206504
sVprofile_image
p1334
Vhttps://www.gravatar.com/avatar/b6a63b3808f15037e9044a43f0620ffd?s=128&d=identicon&r=PG
p1335
sVuser_type
p1336
Vregistered
p1337
sVreputation
p1338
I14073
sVlink
p1339
Vhttp://stackoverflow.com/users/206504/y2k
p1340
sVaccept_rate
p1341
I81
sVdisplay_name
p1342
Vy2k
p1343
ssVtitle
p1344
VHow to get the size of a list
p1345
sVlast_edit_date
p1346
I1477924468
sVquestion_id
p1347
I1712227
sa(dp1348
Vbody
p1349
V<p>What are the options to clone or copy a list in Python?</p>\u000a\u000a<p>Using <code>new_list = my_list</code> then modifies <code>new_list</code> every time <code>my_list</code> changes.<br>\u000aWhy is this?</p>\u000a
p1350
sVis_answered
p1351
I01
sVprotected_date
p1352
I1417799428
sVview_count
p1353
I660507
sVtags
p1354
(lp1355
Vpython
p1356
aVlist
p1357
aVcopy
p1358
aVclone
p1359
asVlast_activity_date
p1360
I1492484881
sVaccepted_answer_id
p1361
I2612815
sVcreation_date
p1362
I1270889386
sVscore
p1363
I1172
sVlink
p1364
Vhttp://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list
p1365
sVanswer_count
p1366
I12
sVowner
p1367
(dp1368
Vuser_id
p1369
I187730
sVprofile_image
p1370
Vhttps://www.gravatar.com/avatar/779f1fe080fea457f5ab867d34572363?s=128&d=identicon&r=PG
p1371
sVuser_type
p1372
Vregistered
p1373
sVreputation
p1374
I24953
sVlink
p1375
Vhttp://stackoverflow.com/users/187730/af
p1376
sVaccept_rate
p1377
I100
sVdisplay_name
p1378
VaF.
p1379
ssVtitle
p1380
VHow to clone or copy a list?
p1381
sVlast_edit_date
p1382
I1490199302
sVquestion_id
p1383
I2612802
sa(dp1384
Vbody
p1385
V<p>Is there a way to substring a string in Python, to get a new string from the 3rd character to the end of the string?</p>\u000a\u000a<p>Maybe like <code>myString[2:end]</code>?</p>\u000a\u000a<p>If leaving the second part means 'till the end', if you leave the first part, does it start from the start?</p>\u000a
p1386
sVis_answered
p1387
I01
sVprotected_date
p1388
I1437151740
sVview_count
p1389
I1414107
sVtags
p1390
(lp1391
Vpython
p1392
aVstring
p1393
asVlast_activity_date
p1394
I1483137392
sVaccepted_answer_id
p1395
I663175
sVcreation_date
p1396
I1237483781
sVscore
p1397
I1169
sVlink
p1398
Vhttp://stackoverflow.com/questions/663171/is-there-a-way-to-substring-a-string-in-python
p1399
sVanswer_count
p1400
I13
sVowner
p1401
(dp1402
Vuser_id
p1403
I51816
sVprofile_image
p1404
Vhttps://www.gravatar.com/avatar/0e54bb28182bcd9df39704751306df27?s=128&d=identicon&r=PG
p1405
sVuser_type
p1406
Vregistered
p1407
sVreputation
p1408
I72530
sVlink
p1409
Vhttp://stackoverflow.com/users/51816/joan-venge
p1410
sVaccept_rate
p1411
I82
sVdisplay_name
p1412
VJoan Venge
p1413
ssVtitle
p1414
VIs there a way to substring a string in Python?
p1415
sVlast_edit_date
p1416
I1428683103
sVquestion_id
p1417
I663171
sa(dp1418
Vbody
p1419
V<p>How do I concatenate two lists in Python?</p>\u000a\u000a<p>Example:</p>\u000a\u000a<pre><code>listone = [1, 2, 3]\u000alisttwo = [4, 5, 6]\u000a</code></pre>\u000a\u000a<p>Expected outcome:</p>\u000a\u000a<pre><code>joinedlist == [1, 2, 3, 4, 5, 6]\u000a</code></pre>\u000a
p1420
sVis_answered
p1421
I01
sVprotected_date
p1422
I1365935738
sVview_count
p1423
I880085
sVtags
p1424
(lp1425
Vpython
p1426
aVlist
p1427
asVlast_activity_date
p1428
I1491656309
sVaccepted_answer_id
p1429
I1720432
sVcreation_date
p1430
I1258009449
sVscore
p1431
I1155
sVlink
p1432
Vhttp://stackoverflow.com/questions/1720421/how-to-append-list-to-second-list-concatenate-lists
p1433
sVanswer_count
p1434
I21
sVowner
p1435
(dp1436
Vuser_id
p1437
I206504
sVprofile_image
p1438
Vhttps://www.gravatar.com/avatar/b6a63b3808f15037e9044a43f0620ffd?s=128&d=identicon&r=PG
p1439
sVuser_type
p1440
Vregistered
p1441
sVreputation
p1442
I14073
sVlink
p1443
Vhttp://stackoverflow.com/users/206504/y2k
p1444
sVaccept_rate
p1445
I81
sVdisplay_name
p1446
Vy2k
p1447
ssVtitle
p1448
VHow to append list to second list (concatenate lists)
p1449
sVlast_edit_date
p1450
I1457512593
sVquestion_id
p1451
I1720421
sa(dp1452
Vbody
p1453
V<p>I spent most of the day yesterday searching for a clear answer for installing <code>pip</code> (package manager for Python). I can't find a good solution.</p>\u000a\u000a<p>How do I install it?</p>\u000a
p1454
sVis_answered
p1455
I01
sVprotected_date
p1456
I1429812198
sVview_count
p1457
I881121
sVtags
p1458
(lp1459
Vpython
p1460
aVosx
p1461
aVpip
p1462
aVinstall
p1463
asVlast_activity_date
p1464
I1493235605
sVanswer_count
p1465
I16
sVcreation_date
p1466
I1372063470
sVscore
p1467
I1150
sVlink
p1468
Vhttp://stackoverflow.com/questions/17271319/how-do-i-install-pip-on-macos-or-os-x
p1469
sVowner
p1470
(dp1471
Vuser_id
p1472
I2513263
sVprofile_image
p1473
Vhttps://www.gravatar.com/avatar/3ce3bddca4b9cbdae44ade5945c4f959?s=128&d=identicon&r=PG
p1474
sVuser_type
p1475
Vregistered
p1476
sVreputation
p1477
I5760
sVlink
p1478
Vhttp://stackoverflow.com/users/2513263/the-system
p1479
sVdisplay_name
p1480
VThe System
p1481
ssVtitle
p1482
VHow do I install pip on macOS or OS X?
p1483
sVlast_edit_date
p1484
I1491668487
sVquestion_id
p1485
I17271319
sa(dp1486
Vcommunity_owned_date
p1487
I1316309214
sVis_answered
p1488
I01
sVprotected_date
p1489
I1335819076
sVview_count
p1490
I517540
sVtags
p1491
(lp1492
Vpython
p1493
aVpython-3.x
p1494
aVenums
p1495
asVbody
p1496
V<p>I'm mainly a C# developer, but I'm currently working on a project in Python.</p>\u000a\u000a<p>How can I represent the equivalent of an Enum in Python?  </p>\u000a
p1497
sVlast_activity_date
p1498
I1493974129
sVaccepted_answer_id
p1499
I1695250
sVcreation_date
p1500
I1220198147
sVscore
p1501
I1146
sVlink
p1502
Vhttp://stackoverflow.com/questions/36932/how-can-i-represent-an-enum-in-python
p1503
sVanswer_count
p1504
I43
sVowner
p1505
(dp1506
Vuser_id
p1507
I3880
sVprofile_image
p1508
Vhttps://www.gravatar.com/avatar/dc6ffd3fe45232b2c6bc180e13e83da6?s=128&d=identicon&r=PG
p1509
sVuser_type
p1510
Vregistered
p1511
sVreputation
p1512
I8682
sVlink
p1513
Vhttp://stackoverflow.com/users/3880/sectrean
p1514
sVaccept_rate
p1515
I80
sVdisplay_name
p1516
Vsectrean
p1517
ssVtitle
p1518
VHow can I represent an &#39;Enum&#39; in Python?
p1519
sVlast_edit_date
p1520
I1411401796
sVlocked_date
p1521
I1422150241
sVquestion_id
p1522
I36932
sa(dp1523
Vcommunity_owned_date
p1524
I1392332837
sVis_answered
p1525
I01
sVprotected_date
p1526
I1377874772
sVview_count
p1527
I434562
sVtags
p1528
(lp1529
Vpython
p1530
aVlist
p1531
aVsplit
p1532
aVchunks
p1533
asVbody
p1534
V<p>I have a list of arbitrary length, and I need to split it up into equal size chunks and operate on it. There are some obvious ways to do this, like keeping a counter and two lists, and when the second list fills up, add it to the first list and empty the second list for the next round of data, but this is potentially extremely expensive.</p>\u000a\u000a<p>I was wondering if anyone had a good solution to this for lists of any length, e.g. using generators.</p>\u000a\u000a<p>I was looking for something useful in <code>itertools</code> but I couldn't find anything obviously useful. Might've missed it, though.</p>\u000a\u000a<p>Related question: <a href="http://stackoverflow.com/questions/434287/what-is-the-most-pythonic-way-to-iterate-over-a-list-in-chunks">What is the most \u201cpythonic\u201d way to iterate over a list in chunks?</a></p>\u000a
p1535
sVlast_activity_date
p1536
I1492443536
sVaccepted_answer_id
p1537
I312464
sVcreation_date
p1538
I1227442552
sVscore
p1539
I1141
sVlink
p1540
Vhttp://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks
p1541
sVanswer_count
p1542
I51
sVowner
p1543
(dp1544
Vuser_id
p1545
I112415
sVprofile_image
p1546
Vhttps://www.gravatar.com/avatar/b658715b9635ef057daf2a22d4a8f36e?s=128&d=identicon&r=PG
p1547
sVuser_type
p1548
Vregistered
p1549
sVreputation
p1550
I3625
sVlink
p1551
Vhttp://stackoverflow.com/users/112415/jespern
p1552
sVdisplay_name
p1553
Vjespern
p1554
ssVtitle
p1555
VHow do you split a list into evenly sized chunks?
p1556
sVlast_edit_date
p1557
I1490199394
sVquestion_id
p1558
I312443
sa(dp1559
Vbody
p1560
V<p>Is it possible to have static methods in Python so I can call them without initializing a class, like:</p>\u000a\u000a<pre><code>ClassName.StaticMethod ( )\u000a</code></pre>\u000a
p1561
sVis_answered
p1562
I01
sVview_count
p1563
I556657
sVtags
p1564
(lp1565
Vpython
p1566
aVstatic-methods
p1567
asVlast_activity_date
p1568
I1452526317
sVanswer_count
p1569
I7
sVcreation_date
p1570
I1239312199
sVscore
p1571
I1123
sVlink
p1572
Vhttp://stackoverflow.com/questions/735975/static-methods-in-python
p1573
sVaccepted_answer_id
p1574
I735978
sVowner
p1575
(dp1576
Vuser_id
p1577
I51816
sVprofile_image
p1578
Vhttps://www.gravatar.com/avatar/0e54bb28182bcd9df39704751306df27?s=128&d=identicon&r=PG
p1579
sVuser_type
p1580
Vregistered
p1581
sVreputation
p1582
I72530
sVlink
p1583
Vhttp://stackoverflow.com/users/51816/joan-venge
p1584
sVaccept_rate
p1585
I82
sVdisplay_name
p1586
VJoan Venge
p1587
ssVtitle
p1588
VStatic methods in Python?
p1589
sVlast_edit_date
p1590
I1401999143
sVquestion_id
p1591
I735975
sa(dp1592
Vbody
p1593
V<p>What is the Python equivalent of Perl's <code>chomp</code> function, which removes the last character of a value?</p>\u000a
p1594
sVis_answered
p1595
I01
sVprotected_date
p1596
I1475325928
sVview_count
p1597
I965364
sVtags
p1598
(lp1599
Vpython
p1600
aVnewline
p1601
asVlast_activity_date
p1602
I1494532499
sVanswer_count
p1603
I25
sVcreation_date
p1604
I1226168724
sVscore
p1605
I1079
sVlink
p1606
Vhttp://stackoverflow.com/questions/275018/how-can-i-remove-chomp-a-newline-in-python
p1607
sVowner
p1608
(dp1609
Vdisplay_name
p1610
VRidingThisToTheTop
p1611
sVuser_type
p1612
Vdoes_not_exist
p1613
ssVtitle
p1614
VHow can I remove (chomp) a newline in Python?
p1615
sVlast_edit_date
p1616
I1433850143
sVquestion_id
p1617
I275018
sa(dp1618
Vbody
p1619
V<p>This has always confused me. It seems like this would be nicer:</p>\u000a\u000a<pre><code>my_list = ["Hello", "world"]\u000aprint my_list.join("-")\u000a# Produce: "Hello-world"\u000a</code></pre>\u000a\u000a<p>Than this:</p>\u000a\u000a<pre><code>my_list = ["Hello", "world"]\u000aprint "-".join(my_list)\u000a# Produce: "Hello-world"\u000a</code></pre>\u000a\u000a<p>Is there a specific reason it is like this?</p>\u000a
p1620
sVis_answered
p1621
I01
sVview_count
p1622
I764544
sVtags
p1623
(lp1624
Vpython
p1625
aVstring
p1626
aVlist
p1627
aVjoin
p1628
asVlast_activity_date
p1629
I1494095839
sVanswer_count
p1630
I7
sVcreation_date
p1631
I1233269113
sVscore
p1632
I1072
sVlink
p1633
Vhttp://stackoverflow.com/questions/493819/python-join-why-is-it-string-joinlist-instead-of-list-joinstring
p1634
sVaccepted_answer_id
p1635
I493842
sVowner
p1636
(dp1637
Vuser_id
p1638
I49701
sVprofile_image
p1639
Vhttps://www.gravatar.com/avatar/88c44d4902ae5685dae7d672da983e08?s=128&d=identicon&r=PG
p1640
sVuser_type
p1641
Vregistered
p1642
sVreputation
p1643
I38189
sVlink
p1644
Vhttp://stackoverflow.com/users/49701/evan-fosmark
p1645
sVaccept_rate
p1646
I94
sVdisplay_name
p1647
VEvan Fosmark
p1648
ssVtitle
p1649
VPython join: why is it string.join(list) instead of list.join(string)?
p1650
sVlast_edit_date
p1651
I1482319758
sVquestion_id
p1652
I493819
sa(dp1653
Vbody
p1654
V<p>Is it possible to upgrade all Python packages at one time with <strong><a href="https://pypi.python.org/pypi/pip" rel="noreferrer"><code>pip</code></a></strong>?</p>\u000a\u000a<p>Note that there is <a href="https://github.com/pypa/pip/issues/59" rel="noreferrer">a feature request</a> for this on the official issue tracker.</p>\u000a
p1655
sVis_answered
p1656
I01
sVview_count
p1657
I546857
sVtags
p1658
(lp1659
Vpython
p1660
aVpip
p1661
asVlast_activity_date
p1662
I1493232227
sVanswer_count
p1663
I33
sVcreation_date
p1664
I1272360205
sVscore
p1665
I1060
sVlink
p1666
Vhttp://stackoverflow.com/questions/2720014/upgrading-all-packages-with-pip
p1667
sVaccepted_answer_id
p1668
I3452888
sVowner
p1669
(dp1670
Vuser_id
p1671
I324085
sVprofile_image
p1672
Vhttps://www.gravatar.com/avatar/411d83357f38f264b78d987f690ab272?s=128&d=identicon&r=PG
p1673
sVuser_type
p1674
Vregistered
p1675
sVreputation
p1676
I5743
sVlink
p1677
Vhttp://stackoverflow.com/users/324085/thedjpetersen
p1678
sVaccept_rate
p1679
I86
sVdisplay_name
p1680
Vthedjpetersen
p1681
ssVtitle
p1682
VUpgrading all packages with pip
p1683
sVlast_edit_date
p1684
I1487628622
sVquestion_id
p1685
I2720014
sa(dp1686
Vbody
p1687
V<p>In the following method definitions, what does the <code>*</code> and <code>**</code> do for <code>param2</code>?</p>\u000a\u000a<pre><code>def foo(param1, *param2):\u000adef bar(param1, **param2):\u000a</code></pre>\u000a
p1688
sVis_answered
p1689
I01
sVprotected_date
p1690
I1485095604
sVview_count
p1691
I245827
sVtags
p1692
(lp1693
Vpython
p1694
aVsyntax
p1695
aVparameter-passing
p1696
aVidentifier
p1697
aVkwargs
p1698
asVlast_activity_date
p1699
I1493145566
sVaccepted_answer_id
p1700
I36908
sVcreation_date
p1701
I1220195075
sVscore
p1702
I1047
sVlink
p1703
Vhttp://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-parameters
p1704
sVanswer_count
p1705
I12
sVowner
p1706
(dp1707
Vuser_id
p1708
I2572
sVprofile_image
p1709
Vhttps://www.gravatar.com/avatar/133b9402dcc48504a13732d459b7eaa8?s=128&d=identicon&r=PG
p1710
sVuser_type
p1711
Vregistered
p1712
sVreputation
p1713
I6267
sVlink
p1714
Vhttp://stackoverflow.com/users/2572/todd
p1715
sVdisplay_name
p1716
VTodd
p1717
ssVtitle
p1718
VWhat does ** (double star) and * (star) do for parameters?
p1719
sVlast_edit_date
p1720
I1477090527
sVquestion_id
p1721
I36901
sa(dp1722
Vbody
p1723
V<p>Is there a simple way to determine if a variable is a list, dictionary, or something else? I am getting an object back that may be either type and I need to be able to tell the difference.</p>\u000a
p1724
sVis_answered
p1725
I01
sVprotected_date
p1726
I1382890916
sVview_count
p1727
I890867
sVtags
p1728
(lp1729
Vpython
p1730
asVlast_activity_date
p1731
I1491409174
sVaccepted_answer_id
p1732
I2225066
sVcreation_date
p1733
I1265665040
sVscore
p1734
I1031
sVlink
p1735
Vhttp://stackoverflow.com/questions/2225038/determine-the-type-of-an-object
p1736
sVanswer_count
p1737
I8
sVowner
p1738
(dp1739
Vuser_id
p1740
I101258
sVprofile_image
p1741
Vhttps://www.gravatar.com/avatar/a81805e545b4996b36c7d011a5249b2c?s=128&d=identicon&r=PG
p1742
sVuser_type
p1743
Vregistered
p1744
sVreputation
p1745
I81207
sVlink
p1746
Vhttp://stackoverflow.com/users/101258/justin-ethier
p1747
sVaccept_rate
p1748
I100
sVdisplay_name
p1749
VJustin Ethier
p1750
ssVtitle
p1751
VDetermine the type of an object?
p1752
sVlast_edit_date
p1753
I1490391818
sVquestion_id
p1754
I2225038
sa(dp1755
Vclosed_date
p1756
I1473795913
sVis_answered
p1757
I01
sVprotected_date
p1758
I1415671207
sVclosed_reason
p1759
Voff-topic
p1760
sVview_count
p1761
I1412374
sVtitle
p1762
VWhat IDE to use for Python?
p1763
sVtags
p1764
(lp1765
Vpython
p1766
aVide
p1767
aVeditor
p1768
asVbody
p1769
V<p>What IDEs ("GUIs/editors") do others use for Python coding?</p>\u000a
p1770
sVlast_activity_date
p1771
I1461605276
sVanswer_count
p1772
I1
sVcreation_date
p1773
I1221645195
sVscore
p1774
I1031
sVcommunity_owned_date
p1775
I1300810356
sVowner
p1776
(dp1777
Vuser_id
p1778
I15461
sVprofile_image
p1779
Vhttps://www.gravatar.com/avatar/19ad6afeec66f9154a766605af2dec81?s=128&d=identicon&r=PG
p1780
sVuser_type
p1781
Vregistered
p1782
sVreputation
p1783
I5607
sVlink
p1784
Vhttp://stackoverflow.com/users/15461/husayt
p1785
sVaccept_rate
p1786
I73
sVdisplay_name
p1787
Vhusayt
p1788
ssVlink
p1789
Vhttp://stackoverflow.com/questions/81584/what-ide-to-use-for-python
p1790
sVlast_edit_date
p1791
I1415671075
sVlocked_date
p1792
I1415671140
sVquestion_id
p1793
I81584
sa(dp1794
Vbody
p1795
V<p>Is there any way to convert an entire user inputted string from uppercase, or even part uppercase to lowercase? </p>\u000a\u000a<p>E.g. Kilometers --> kilometers.</p>\u000a
p1796
sVis_answered
p1797
I01
sVprotected_date
p1798
I1457488587
sVview_count
p1799
I1118811
sVtags
p1800
(lp1801
Vpython
p1802
aVstring
p1803
aVunicode
p1804
aVuppercase
p1805
aVlowercase
p1806
asVlast_activity_date
p1807
I1488322170
sVaccepted_answer_id
p1808
I6797990
sVcreation_date
p1809
I1311390533
sVscore
p1810
I1012
sVlink
p1811
Vhttp://stackoverflow.com/questions/6797984/how-to-convert-string-to-lowercase-in-python
p1812
sVanswer_count
p1813
I6
sVowner
p1814
(dp1815
Vuser_id
p1816
I858922
sVprofile_image
p1817
Vhttps://www.gravatar.com/avatar/fce5eda74eadfbc8db50acafb3b2bea0?s=128&d=identicon&r=PG
p1818
sVuser_type
p1819
Vunregistered
p1820
sVreputation
p1821
I5107
sVlink
p1822
Vhttp://stackoverflow.com/users/858922/benjamin-didur
p1823
sVdisplay_name
p1824
VBenjamin Didur
p1825
ssVtitle
p1826
VHow to convert string to lowercase in Python?
p1827
sVlast_edit_date
p1828
I1440379046
sVquestion_id
p1829
I6797984
sa(dp1830
Vcommunity_owned_date
p1831
I1339614199
sVis_answered
p1832
I01
sVview_count
p1833
I125169
sVtags
p1834
(lp1835
Vc++
p1836
aVpython
p1837
aVbenchmarking
p1838
aVreadline
p1839
aVgetline
p1840
asVbody
p1841
V<p>I wanted to compare reading lines of string input from stdin using Python and C++ and was shocked to see my C++ code run an order of magnitude slower than the equivalent Python code.  Since my C++ is rusty and I'm not yet an expert Pythonista, please tell me if I'm doing something wrong or if I'm misunderstanding something.  </p>\u000a\u000a<hr>\u000a\u000a<p>(tl;dr answer: include the statement: cin.sync_with_stdio(false) or just use fgets instead.</p>\u000a\u000a<p>tl;dr results: scroll all the way down to the bottom of my question and look at the table.)</p>\u000a\u000a<hr>\u000a\u000a<p><strong>C++ code:</strong></p>\u000a\u000a<pre><code>#include &lt;iostream&gt;\u000a#include &lt;time.h&gt;\u000a\u000ausing namespace std;\u000a\u000aint main() {\u000a    string input_line;\u000a    long line_count = 0;\u000a    time_t start = time(NULL);\u000a    int sec;\u000a    int lps;                                                                   \u000a\u000a    while (cin) {\u000a        getline(cin, input_line);\u000a        if (!cin.eof())\u000a            line_count++;\u000a    };\u000a\u000a    sec = (int) time(NULL) - start;\u000a    cerr &lt;&lt; "Read " &lt;&lt; line_count &lt;&lt; " lines in " &lt;&lt; sec &lt;&lt; " seconds." ;\u000a    if (sec &gt; 0) {\u000a        lps = line_count / sec;\u000a        cerr &lt;&lt; " LPS: " &lt;&lt; lps &lt;&lt; endl;\u000a    } else\u000a        cerr &lt;&lt; endl;\u000a    return 0;\u000a}\u000a\u000a//Compiled with:\u000a//g++ -O3 -o readline_test_cpp foo.cpp\u000a</code></pre>\u000a\u000a<p><strong>Python Equivalent:</strong></p>\u000a\u000a<pre><code>#!/usr/bin/env python\u000aimport time\u000aimport sys\u000a\u000acount = 0\u000astart = time.time()\u000a\u000afor line in  sys.stdin:\u000a    count += 1\u000a\u000adelta_sec = int(time.time() - start_time)\u000aif delta_sec &gt;= 0:\u000a    lines_per_sec = int(round(count/delta_sec))\u000a    print("Read {0} lines in {1} seconds. LPS: {2}".format(count, delta_sec,\u000a       lines_per_sec))\u000a</code></pre>\u000a\u000a<p><strong>Here are my results:</strong></p>\u000a\u000a<pre><code>$ cat test_lines | ./readline_test_cpp \u000aRead 5570000 lines in 9 seconds. LPS: 618889\u000a\u000a$cat test_lines | ./readline_test.py \u000aRead 5570000 lines in 1 seconds. LPS: 5570000\u000a</code></pre>\u000a\u000a<p><strong>Edit:</strong> <em>I should note that I tried this both under OS-X (10.6.8) and Linux 2.6.32 (RHEL 6.2).  The former is a macbook pro, the latter is a very beefy server, not that this is too pertinent.</em></p>\u000a\u000a<p><strong>Edit 2:</strong> <em>(Removed this edit, as no longer applicable)</em></p>\u000a\u000a<pre><code>$ for i in {1..5}; do echo "Test run $i at `date`"; echo -n "CPP:"; cat test_lines | ./readline_test_cpp ; echo -n "Python:"; cat test_lines | ./readline_test.py ; done\u000aTest run 1 at Mon Feb 20 21:29:28 EST 2012\u000aCPP:   Read 5570001 lines in 9 seconds. LPS: 618889\u000aPython:Read 5570000 lines in 1 seconds. LPS: 5570000\u000aTest run 2 at Mon Feb 20 21:29:39 EST 2012\u000aCPP:   Read 5570001 lines in 9 seconds. LPS: 618889\u000aPython:Read 5570000 lines in 1 seconds. LPS: 5570000\u000aTest run 3 at Mon Feb 20 21:29:50 EST 2012\u000aCPP:   Read 5570001 lines in 9 seconds. LPS: 618889\u000aPython:Read 5570000 lines in 1 seconds. LPS: 5570000\u000aTest run 4 at Mon Feb 20 21:30:01 EST 2012\u000aCPP:   Read 5570001 lines in 9 seconds. LPS: 618889\u000aPython:Read 5570000 lines in 1 seconds. LPS: 5570000\u000aTest run 5 at Mon Feb 20 21:30:11 EST 2012\u000aCPP:   Read 5570001 lines in 10 seconds. LPS: 557000\u000aPython:Read 5570000 lines in  1 seconds. LPS: 5570000\u000a</code></pre>\u000a\u000a<p><strong>Edit 3:</strong> </p>\u000a\u000a<p>Okay, I tried J.N.'s suggestion of trying having python store the line read: but it made no difference to python's speed.  </p>\u000a\u000a<p>I also tried J.N.'s suggestion of using scanf into a char array instead of getline into a std::string.  Bingo!  This resulted in equivalent performance for both python and c++. (3,333,333 LPS with my input data, which by the way are just short lines of three fields each, usually about 20 chars wide, though sometimes more).</p>\u000a\u000a<p>Code:</p>\u000a\u000a<pre><code>char input_a[512];\u000achar input_b[32];\u000achar input_c[512];\u000awhile(scanf("%s %s %s\u005cn", input_a, input_b, input_c) != EOF) {             \u000a    line_count++;\u000a};\u000a</code></pre>\u000a\u000a<p>Speed:</p>\u000a\u000a<pre><code>$ cat test_lines | ./readline_test_cpp2 \u000aRead 10000000 lines in 3 seconds. LPS: 3333333\u000a$ cat test_lines | ./readline_test2.py \u000aRead 10000000 lines in 3 seconds. LPS: 3333333\u000a</code></pre>\u000a\u000a<p>(Yes, I ran it several times.) So, I guess I will now use scanf instead of getline.  But, I'm still curious if people think this performance hit from std::string/getline is typical and reasonable. </p>\u000a\u000a<p><strong>Edit 4 (was: Final Edit / Solution):</strong></p>\u000a\u000a<p>Adding:\u000a    cin.sync_with_stdio(false);</p>\u000a\u000a<p>Immediately above my original while loop above results in code that runs faster than Python.  </p>\u000a\u000a<p><strong>New performance comparison</strong> (this is on my 2011 Macbook Pro), using the original code, the original with the sync disabled, and the original python, respectively, on a file with 20M lines of text.  Yes, I ran it several times to eliminate disk caching confound.</p>\u000a\u000a<pre><code>$ /usr/bin/time cat test_lines_double | ./readline_test_cpp\u000a       33.30 real         0.04 user         0.74 sys\u000aRead 20000001 lines in 33 seconds. LPS: 606060\u000a$ /usr/bin/time cat test_lines_double | ./readline_test_cpp1b\u000a        3.79 real         0.01 user         0.50 sys\u000aRead 20000000 lines in 4 seconds. LPS: 5000000\u000a$ /usr/bin/time cat test_lines_double | ./readline_test.py \u000a        6.88 real         0.01 user         0.38 sys\u000aRead 20000000 lines in 6 seconds. LPS: 3333333\u000a</code></pre>\u000a\u000a<p>Thanks to @Vaughn Cato for his answer!  <strong><em>Any elaboration people can make or good references people can point to as to why this sync happens, what it means, when it's useful, and when it's okay to disable would be greatly appreciated by posterity.</em></strong> :-)</p>\u000a\u000a<p><strong>Edit 5 / Better Solution:</strong></p>\u000a\u000a<p>As suggested by Gandalf The Gray below, gets is even faster than scanf or the unsynchronized cin approach.  I also learned that <a href="http://c-faq.com/stdio/scanfprobs.html" rel="noreferrer">scanf</a> and <a href="http://c-faq.com/stdio/getsvsfgets.html" rel="noreferrer">gets</a> are both UNSAFE and should NOT BE USED due to potential of buffer overflow.  So, I wrote this iteration using fgets, the safer alternative to gets.  Here are the pertinent lines for my fellow noobs:</p>\u000a\u000a<pre><code>char input_line[MAX_LINE];\u000achar *result;\u000a\u000a//&lt;snip&gt;\u000a\u000awhile((result = fgets(input_line, MAX_LINE, stdin )) != NULL)    \u000a    line_count++;\u000aif (ferror(stdin))\u000a    perror("Error reading stdin.");\u000a</code></pre>\u000a\u000a<p>Now, here are the results using an even larger file (100M lines; ~3.4GB) on a fast server with very fast disk, comparing the python, the unsynced cin, and the fgets approaches, as well as comparing with the wc utility.  [The scanf version segfaulted and I don't feel like troubleshooting it.]:</p>\u000a\u000a<pre><code>$ /usr/bin/time cat temp_big_file | readline_test.py \u000a0.03user 2.04system 0:28.06elapsed 7%CPU (0avgtext+0avgdata 2464maxresident)k\u000a0inputs+0outputs (0major+182minor)pagefaults 0swaps\u000aRead 100000000 lines in 28 seconds. LPS: 3571428\u000a\u000a$ /usr/bin/time cat temp_big_file | readline_test_unsync_cin \u000a0.03user 1.64system 0:08.10elapsed 20%CPU (0avgtext+0avgdata 2464maxresident)k\u000a0inputs+0outputs (0major+182minor)pagefaults 0swaps\u000aRead 100000000 lines in 8 seconds. LPS: 12500000\u000a\u000a$ /usr/bin/time cat temp_big_file | readline_test_fgets \u000a0.00user 0.93system 0:07.01elapsed 13%CPU (0avgtext+0avgdata 2448maxresident)k\u000a0inputs+0outputs (0major+181minor)pagefaults 0swaps\u000aRead 100000000 lines in 7 seconds. LPS: 14285714\u000a\u000a$ /usr/bin/time cat temp_big_file | wc -l\u000a0.01user 1.34system 0:01.83elapsed 74%CPU (0avgtext+0avgdata 2464maxresident)k\u000a0inputs+0outputs (0major+182minor)pagefaults 0swaps\u000a100000000\u000a\u000a\u000aRecap (lines per second):\u000apython:         3,571,428 \u000acin (no sync): 12,500,000\u000afgets:         14,285,714\u000awc:            54,644,808\u000a</code></pre>\u000a\u000a<p>As you can see, fgets is better but still pretty far from wc performance; I'm pretty sure this is due to the fact that wc examines each character without any memory copying.  I suspect that, at this point, other parts of the code will become the bottleneck, so I don't think optimizing to that level would even be worthwhile, even if possible (since, after all, I actually need to store the read lines in memory).  </p>\u000a\u000a<p>Also note that a small tradeoff with using a char * buffer and fgets vs unsynced cin to string is that the latter can read lines of any length, while the former requires limiting input to some finite number.  In practice, this is probably a non-issue for reading most line-based input files, as the buffer can be set to a very large value that would not be exceeded by valid input. </p>\u000a\u000a<p>This has been educational.  Thanks to all for your comments and suggestions.</p>\u000a\u000a<p><strong>Edit 6:</strong></p>\u000a\u000a<p>As suggested by J.F. Sebastian in the comments below, the GNU wc utility uses plain C read() (within the safe-read.c wrapper) to read chunks (of 16k bytes) at a time and count new lines.  Here's a python equivalent based on J.F.'s code (just showing the relevant snippet that replaces the python for loop:</p>\u000a\u000a<pre><code>BUFFER_SIZE = 16384 \u000acount = sum(chunk.count('\u005cn') for chunk in iter(partial(sys.stdin.read, BUFFER_SIZE), ''))\u000a</code></pre>\u000a\u000a<p>The performance of this version is quite fast (though still a bit slower than the raw c wc utility, of course):</p>\u000a\u000a<pre><code>$ /usr/bin/time cat temp_big_file | readline_test3.py \u000a0.01user 1.16system 0:04.74elapsed 24%CPU (0avgtext+0avgdata 2448maxresident)k\u000a0inputs+0outputs (0major+181minor)pagefaults 0swaps\u000aRead 100000000 lines in 4.7275 seconds. LPS: 21152829\u000a</code></pre>\u000a\u000a<p>Again, it's a bit silly for me to compare C++ fgets/cin and the first python code on the one hand to wc -l and this last python snippet on the other, as the latter two don't actually store the read lines but merely count newlines.  Still, it's interesting to explore all the different implementations and think about the performance implications.  Thanks again!</p>\u000a\u000a<p><strong>Edit 7: Tiny benchmark addendum and recap</strong></p>\u000a\u000a<p>For completeness, I thought I'd update the read speed for the same file on the same box with the original (synced) C++ code.  Again, this is for a 100M line file on a fast disk. Here's the complete table now:</p>\u000a\u000a<pre><code>Implementation      Lines per second\u000apython (default)           3,571,428\u000acin (default/naive)          819,672\u000acin (no sync)             12,500,000\u000afgets                     14,285,714\u000awc (not fair comparison)  54,644,808\u000a</code></pre>\u000a
p1842
sVlast_activity_date
p1843
I1494109320
sVanswer_count
p1844
I12
sVcreation_date
p1845
I1329790670
sVscore
p1846
I1005
sVlink
p1847
Vhttp://stackoverflow.com/questions/9371238/why-is-reading-lines-from-stdin-much-slower-in-c-than-python
p1848
sVaccepted_answer_id
p1849
I9371717
sVowner
p1850
(dp1851
Vuser_id
p1852
I379037
sVprofile_image
p1853
Vhttps://i.stack.imgur.com/jtIIn.jpg?s=128&g=1
p1854
sVuser_type
p1855
Vregistered
p1856
sVreputation
p1857
I2038
sVlink
p1858
Vhttp://stackoverflow.com/users/379037/jjc
p1859
sVaccept_rate
p1860
I69
sVdisplay_name
p1861
VJJC
p1862
ssVtitle
p1863
VWhy is reading lines from stdin much slower in C++ than Python?
p1864
sVlast_edit_date
p1865
I1480053648
sVquestion_id
p1866
I9371238
sa(dp1867
Vbody
p1868
V<p>What is the best possible way to check if a string can be represented as a number in Python? </p>\u000a\u000a<p>The function I currently have right now is:</p>\u000a\u000a<pre><code>def is_number(s):\u000a    try:\u000a        float(s)\u000a        return True\u000a    except ValueError:\u000a        return False\u000a</code></pre>\u000a\u000a<p>Which, not only is ugly and slow, seems clunky. However I haven't found a better method because calling <code>float</code> in the main function is even worse. </p>\u000a
p1869
sVis_answered
p1870
I01
sVprotected_date
p1871
I1475326067
sVview_count
p1872
I741262
sVtags
p1873
(lp1874
Vpython
p1875
aVcasting
p1876
aVfloating-point
p1877
aVtype-conversion
p1878
asVlast_activity_date
p1879
I1492015381
sVaccepted_answer_id
p1880
I354130
sVcreation_date
p1881
I1228853022
sVscore
p1882
I1004
sVlink
p1883
Vhttp://stackoverflow.com/questions/354038/how-do-i-check-if-a-string-is-a-number-float-in-python
p1884
sVanswer_count
p1885
I29
sVowner
p1886
(dp1887
Vuser_id
p1888
I40115
sVprofile_image
p1889
Vhttps://www.gravatar.com/avatar/76bc00218bed97937e66f253479432f0?s=128&d=identicon&r=PG
p1890
sVuser_type
p1891
Vregistered
p1892
sVreputation
p1893
I6249
sVlink
p1894
Vhttp://stackoverflow.com/users/40115/daniel-goldberg
p1895
sVdisplay_name
p1896
VDaniel Goldberg
p1897
ssVtitle
p1898
VHow do I check if a string is a number (float) in Python?
p1899
sVlast_edit_date
p1900
I1428223783
sVquestion_id
p1901
I354038
sa(dp1902
Vbody
p1903
V<p>In Python, how do you get the last element of a list?</p>\u000a
p1904
sVis_answered
p1905
I01
sVprotected_date
p1906
I1481735177
sVview_count
p1907
I824569
sVtags
p1908
(lp1909
Vpython
p1910
aVlist
p1911
aVindexing
p1912
asVlast_activity_date
p1913
I1488849276
sVaccepted_answer_id
p1914
I930398
sVcreation_date
p1915
I1243711733
sVscore
p1916
I1004
sVlink
p1917
Vhttp://stackoverflow.com/questions/930397/getting-the-last-element-of-a-list-in-python
p1918
sVanswer_count
p1919
I9
sVowner
p1920
(dp1921
Vuser_id
p1922
I114066
sVprofile_image
p1923
Vhttps://www.gravatar.com/avatar/6699ce6898696331e2ea05bdfd759658?s=128&d=identicon&r=PG
p1924
sVuser_type
p1925
Vregistered
p1926
sVreputation
p1927
I90118
sVlink
p1928
Vhttp://stackoverflow.com/users/114066/janusz
p1929
sVaccept_rate
p1930
I90
sVdisplay_name
p1931
VJanusz
p1932
ssVtitle
p1933
VGetting the last element of a list in Python
p1934
sVlast_edit_date
p1935
I1419275536
sVquestion_id
p1936
I930397
sa(dp1937
Vbody
p1938
V<p>Short and simple. I've got a huge list of date-times like this as strings:</p>\u000a\u000a<pre><code>Jun 1 2005  1:33PM\u000aAug 28 1999 12:00AM\u000a</code></pre>\u000a\u000a<p>I'm going to be shoving these back into proper datetime fields in a database so I need to magic them into real datetime objects. </p>\u000a\u000a<p>Any help (even if it's just a kick in the right direction) would be appreciated.</p>\u000a\u000a<p>Edit: This is going through Django's ORM so I can't use SQL to do the conversion on insert.</p>\u000a
p1939
sVis_answered
p1940
I01
sVprotected_date
p1941
I1335441797
sVview_count
p1942
I1129291
sVtags
p1943
(lp1944
Vpython
p1945
aVdatetime
p1946
asVlast_activity_date
p1947
I1488303459
sVaccepted_answer_id
p1948
I466376
sVcreation_date
p1949
I1232560829
sVscore
p1950
I1003
sVlink
p1951
Vhttp://stackoverflow.com/questions/466345/converting-string-into-datetime
p1952
sVanswer_count
p1953
I14
sVowner
p1954
(dp1955
Vuser_id
p1956
I12870
sVprofile_image
p1957
Vhttps://www.gravatar.com/avatar/f0af40756420859b5b63cbceb6d30505?s=128&d=identicon&r=PG
p1958
sVuser_type
p1959
Vregistered
p1960
sVreputation
p1961
I99063
sVlink
p1962
Vhttp://stackoverflow.com/users/12870/oli
p1963
sVaccept_rate
p1964
I63
sVdisplay_name
p1965
VOli
p1966
ssVtitle
p1967
VConverting string into datetime
p1968
sVlast_edit_date
p1969
I1465659192
sVquestion_id
p1970
I466345
sa(dp1971
Vbody
p1972
V<p>How can I raise an exception in Python so that it can later be caught via an <code>except</code> block?</p>\u000a
p1973
sVis_answered
p1974
I01
sVview_count
p1975
I655350
sVtags
p1976
(lp1977
Vpython
p1978
aVexception
p1979
aVexception-handling
p1980
asVlast_activity_date
p1981
I1493971843
sVanswer_count
p1982
I5
sVcreation_date
p1983
I1263330460
sVscore
p1984
I1003
sVlink
p1985
Vhttp://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python
p1986
sVaccepted_answer_id
p1987
I24065533
sVowner
p1988
(dp1989
Vuser_id
p1990
I179736
sVprofile_image
p1991
Vhttps://www.gravatar.com/avatar/e77327f7ef0c6213525de4dcea19b200?s=128&d=identicon&r=PG
p1992
sVuser_type
p1993
Vregistered
p1994
sVreputation
p1995
I49872
sVlink
p1996
Vhttp://stackoverflow.com/users/179736/timex
p1997
sVaccept_rate
p1998
I82
sVdisplay_name
p1999
VTIMEX
p2000
ssVtitle
p2001
VManually raising (throwing) an exception in Python
p2002
sVlast_edit_date
p2003
I1422974225
sVquestion_id
p2004
I2052390
sa(dp2005
Vbody
p2006
V<p>How do I copy a file in Python? I couldn't find anything under <a href="https://docs.python.org/2/library/os.html" rel="noreferrer"><code>os</code></a>.</p>\u000a
p2007
sVis_answered
p2008
I01
sVprotected_date
p2009
I1458128422
sVview_count
p2010
I750235
sVtags
p2011
(lp2012
Vpython
p2013
aVfile
p2014
aVcopy
p2015
aVfilesystems
p2016
aVcopyfile
p2017
asVlast_activity_date
p2018
I1494079657
sVaccepted_answer_id
p2019
I123212
sVcreation_date
p2020
I1222197828
sVscore
p2021
I1000
sVlink
p2022
Vhttp://stackoverflow.com/questions/123198/how-do-i-copy-a-file-in-python
p2023
sVanswer_count
p2024
I10
sVowner
p2025
(dp2026
Vuser_id
p2027
I17693
sVprofile_image
p2028
Vhttps://i.stack.imgur.com/JgeMc.png?s=128&g=1
p2029
sVuser_type
p2030
Vregistered
p2031
sVreputation
p2032
I18320
sVlink
p2033
Vhttp://stackoverflow.com/users/17693/matt
p2034
sVaccept_rate
p2035
I95
sVdisplay_name
p2036
VMatt
p2037
ssVtitle
p2038
VHow do I copy a file in python?
p2039
sVlast_edit_date
p2040
I1494079657
sVquestion_id
p2041
I123198
sa(dp2042
Vbody
p2043
V<p>In Python, what commands can I use to find:</p>\u000a\u000a<ol>\u000a<li>the current directory (where I was in the terminal when I ran the Python script), and</li>\u000a<li>where the file I am executing is?</li>\u000a</ol>\u000a
p2044
sVis_answered
p2045
I01
sVview_count
p2046
I1044771
sVtags
p2047
(lp2048
Vpython
p2049
aVdirectory
p2050
asVlast_activity_date
p2051
I1494241058
sVanswer_count
p2052
I12
sVcreation_date
p2053
I1298857881
sVscore
p2054
I992
sVlink
p2055
Vhttp://stackoverflow.com/questions/5137497/find-current-directory-and-files-directory
p2056
sVaccepted_answer_id
p2057
I5137509
sVowner
p2058
(dp2059
Vuser_id
p2060
I374797
sVprofile_image
p2061
Vhttps://www.gravatar.com/avatar/7a7c59685abf968ca5ef37f79668ec93?s=128&d=identicon&r=PG&f=1
p2062
sVuser_type
p2063
Vregistered
p2064
sVreputation
p2065
I13411
sVlink
p2066
Vhttp://stackoverflow.com/users/374797/john-howard
p2067
sVaccept_rate
p2068
I100
sVdisplay_name
p2069
VJohn Howard
p2070
ssVtitle
p2071
VFind current directory and file&#39;s directory
p2072
sVlast_edit_date
p2073
I1469968691
sVquestion_id
p2074
I5137497
sa(dp2075
Vbody
p2076
V<p>Python 2.6 introduced the <a href="https://docs.python.org/2/library/stdtypes.html#str.format" rel="noreferrer"><code>str.format()</code></a> method with a slightly different syntax from the existing <code>%</code> operator. Which is better and for what situations?</p>\u000a\u000a<ol>\u000a<li><p>The following uses each method and has the same outcome, so what is the difference?</p>\u000a\u000a<pre><code>#!/usr/bin/python\u000asub1 = "python string!"\u000asub2 = "an arg"\u000a\u000aa = "i am a %s" % sub1\u000ab = "i am a {0}".format(sub1)\u000a\u000ac = "with %(kwarg)s!" % {'kwarg':sub2}\u000ad = "with {kwarg}!".format(kwarg=sub2)\u000a\u000aprint a    # "i am a python string!"\u000aprint b    # "i am a python string!"\u000aprint c    # "with an arg!"\u000aprint d    # "with an arg!"\u000a</code></pre></li>\u000a<li><p>Furthermore when does string formatting occur in Python? For example, if my logging level is set to HIGH will I still take a hit for performing the following <code>%</code> operation? And if so, is there a way to avoid this?</p>\u000a\u000a<pre><code>log.debug("some debug info: %s" % some_info)\u000a</code></pre></li>\u000a</ol>\u000a
p2077
sVis_answered
p2078
I01
sVprotected_date
p2079
I1485899730
sVview_count
p2080
I758649
sVtags
p2081
(lp2082
Vpython
p2083
aVperformance
p2084
aVlogging
p2085
aVstring-formatting
p2086
asVlast_activity_date
p2087
I1487001113
sVaccepted_answer_id
p2088
I5082482
sVcreation_date
p2089
I1298400402
sVscore
p2090
I978
sVlink
p2091
Vhttp://stackoverflow.com/questions/5082452/python-string-formatting-vs-format
p2092
sVanswer_count
p2093
I11
sVowner
p2094
(dp2095
Vuser_id
p2096
I231463
sVprofile_image
p2097
Vhttps://www.gravatar.com/avatar/887048987be67f10649a9dfacced6606?s=128&d=identicon&r=PG
p2098
sVuser_type
p2099
Vregistered
p2100
sVreputation
p2101
I6058
sVlink
p2102
Vhttp://stackoverflow.com/users/231463/northisup
p2103
sVaccept_rate
p2104
I90
sVdisplay_name
p2105
VNorthIsUp
p2106
ssVtitle
p2107
VPython string formatting: % vs. .format
p2108
sVlast_edit_date
p2109
I1421262705
sVquestion_id
p2110
I5082452
sa(dp2111
Vbody
p2112
V<p>I want to write a function in Python that returns different fixed values based on the value of an input index.  </p>\u000a\u000a<p>In other languages I would use a <code>switch</code> or <code>case</code> statement, but Python does not appear to have a <code>switch</code> statement.  What are the recommended Python solutions in this scenario?</p>\u000a
p2113
sVis_answered
p2114
I01
sVprotected_date
p2115
I1439722689
sVview_count
p2116
I776974
sVtags
p2117
(lp2118
Vpython
p2119
aVswitch-statement
p2120
asVlast_activity_date
p2121
I1494832575
sVaccepted_answer_id
p2122
I60211
sVcreation_date
p2123
I1221266190
sVscore
p2124
I975
sVlink
p2125
Vhttp://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python
p2126
sVanswer_count
p2127
I32
sVowner
p2128
(dp2129
Vuser_id
p2130
I4907
sVprofile_image
p2131
Vhttps://www.gravatar.com/avatar/6379f08b10ce091d27f31743e01220d7?s=128&d=identicon&r=PG
p2132
sVuser_type
p2133
Vregistered
p2134
sVreputation
p2135
I5356
sVlink
p2136
Vhttp://stackoverflow.com/users/4907/michael-schneider
p2137
sVaccept_rate
p2138
I100
sVdisplay_name
p2139
VMichael Schneider
p2140
ssVtitle
p2141
VReplacements for switch statement in Python?
p2142
sVlast_edit_date
p2143
I1457127001
sVquestion_id
p2144
I60208
sa(dp2145
Vbody
p2146
V<p>I'm trying to do some of the <a href="http://en.wikipedia.org/wiki/Code_golf" rel="noreferrer">code golf</a> challenges, but they all require the input to be taken from <code>stdin</code>. How do I get that in Python?</p>\u000a
p2147
sVis_answered
p2148
I01
sVprotected_date
p2149
I1348321582
sVview_count
p2150
I888809
sVtags
p2151
(lp2152
Vpython
p2153
aVstdin
p2154
asVlast_activity_date
p2155
I1486989595
sVanswer_count
p2156
I17
sVcreation_date
p2157
I1253425687
sVscore
p2158
I974
sVlink
p2159
Vhttp://stackoverflow.com/questions/1450393/how-do-you-read-from-stdin-in-python
p2160
sVowner
p2161
(dp2162
Vuser_id
p2163
I168500
sVprofile_image
p2164
Vhttps://www.gravatar.com/avatar/31bbd7e6390d99a362e22bd094a25540?s=128&d=identicon&r=PG
p2165
sVuser_type
p2166
Vunregistered
p2167
sVreputation
p2168
I6441
sVlink
p2169
Vhttp://stackoverflow.com/users/168500/tehryan
p2170
sVaccept_rate
p2171
I38
sVdisplay_name
p2172
Vtehryan
p2173
ssVtitle
p2174
VHow do you read from stdin in Python?
p2175
sVlast_edit_date
p2176
I1469851886
sVquestion_id
p2177
I1450393
sa(dp2178
Vbody
p2179
V<p>Assume I have the following list:</p>\u000a\u000a<pre><code>foo = ['a', 'b', 'c', 'd', 'e']\u000a</code></pre>\u000a\u000a<p>What is the simplest way to retrieve an item at random from this list?</p>\u000a
p2180
sVis_answered
p2181
I01
sVprotected_date
p2182
I1432638837
sVview_count
p2183
I589768
sVtags
p2184
(lp2185
Vpython
p2186
aVlist
p2187
aVrandom
p2188
asVlast_activity_date
p2189
I1493930451
sVaccepted_answer_id
p2190
I306417
sVcreation_date
p2191
I1227206541
sVscore
p2192
I974
sVlink
p2193
Vhttp://stackoverflow.com/questions/306400/how-to-randomly-select-an-item-from-a-list
p2194
sVanswer_count
p2195
I10
sVowner
p2196
(dp2197
Vuser_id
p2198
I4872
sVprofile_image
p2199
Vhttps://www.gravatar.com/avatar/2da21199d56ce93c5092f1c386d5a577?s=128&d=identicon&r=PG
p2200
sVuser_type
p2201
Vregistered
p2202
sVreputation
p2203
I59218
sVlink
p2204
Vhttp://stackoverflow.com/users/4872/ray-vega
p2205
sVaccept_rate
p2206
I90
sVdisplay_name
p2207
VRay Vega
p2208
ssVtitle
p2209
VHow to randomly select an item from a list?
p2210
sVlast_edit_date
p2211
I1493930451
sVquestion_id
p2212
I306400
sa(dp2213
Vcommunity_owned_date
p2214
I1221575267
sVis_answered
p2215
I01
sVprotected_date
p2216
I1402502697
sVview_count
p2217
I365195
sVtags
p2218
(lp2219
Vpython
p2220
aVlist
p2221
aVsorting
p2222
aVdictionary
p2223
asVbody
p2224
V<p>I got a list of dictionaries and want that to be sorted by a value of that dictionary.</p>\u000a\u000a<p>This</p>\u000a\u000a<pre><code>[{'name':'Homer', 'age':39}, {'name':'Bart', 'age':10}]\u000a</code></pre>\u000a\u000a<p>sorted by name, should become</p>\u000a\u000a<pre><code>[{'name':'Bart', 'age':10}, {'name':'Homer', 'age':39}]\u000a</code></pre>\u000a
p2225
sVlast_activity_date
p2226
I1489746590
sVaccepted_answer_id
p2227
I73050
sVcreation_date
p2228
I1221575267
sVscore
p2229
I972
sVlink
p2230
Vhttp://stackoverflow.com/questions/72899/how-do-i-sort-a-list-of-dictionaries-by-values-of-the-dictionary-in-python
p2231
sVanswer_count
p2232
I15
sVowner
p2233
(dp2234
Vuser_id
p2235
I12398
sVprofile_image
p2236
Vhttps://www.gravatar.com/avatar/9ca1eabe678fd93c85d70d718615aeed?s=128&d=identicon&r=PG
p2237
sVuser_type
p2238
Vregistered
p2239
sVreputation
p2240
I98
sVlink
p2241
Vhttp://stackoverflow.com/users/12398/masi
p2242
sVdisplay_name
p2243
Vmasi
p2244
ssVtitle
p2245
VHow do I sort a list of dictionaries by values of the dictionary in Python?
p2246
sVlast_edit_date
p2247
I1396544269
sVquestion_id
p2248
I72899
sa(dp2249
Vbody
p2250
V<p>The question is in the title.</p>\u000a\u000a<p>I'd like to do in  <a href="/questions/tagged/python" class="post-tag" title="show questions tagged &#39;python&#39;" rel="tag">python</a> what I do in this example in <a href="/questions/tagged/c" class="post-tag" title="show questions tagged &#39;c&#39;" rel="tag">c</a>:</p>\u000a\u000a<pre class="lang-c prettyprint-override"><code>#include &lt;stdio.h&gt;\u000a\u000aint main() {\u000a    int i;\u000a    for (i=0; i&lt;10; i++) printf(".");\u000a    return 0;\u000a}\u000a</code></pre>\u000a\u000a<p>Output:</p>\u000a\u000a<pre><code>..........\u000a</code></pre>\u000a\u000a<p>In Python:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; for i in xrange(0,10): print '.'\u000a.\u000a.\u000a.\u000a.\u000a.\u000a.\u000a.\u000a.\u000a.\u000a.\u000a&gt;&gt;&gt; for i in xrange(0,10): print '.',\u000a. . . . . . . . . .\u000a</code></pre>\u000a\u000a<p>In Python <code>print</code> will add a <code>\u005cn</code> or a space, how can I avoid that? Now, it's just an example. Don't tell me I can first build a string then print it. I'd like to know how to "append" strings to <code>stdout</code>.</p>\u000a
p2251
sVis_answered
p2252
I01
sVview_count
p2253
I927803
sVtags
p2254
(lp2255
Vpython
p2256
aVnewline
p2257
asVlast_activity_date
p2258
I1494996657
sVanswer_count
p2259
I25
sVcreation_date
p2260
I1233262705
sVscore
p2261
I951
sVlink
p2262
Vhttp://stackoverflow.com/questions/493386/how-to-print-without-newline-or-space
p2263
sVaccepted_answer_id
p2264
I493399
sVowner
p2265
(dp2266
Vuser_id
p2267
I21384
sVprofile_image
p2268
Vhttps://www.gravatar.com/avatar/638e6a9e175da1803ec2c9e59ab6e5be?s=128&d=identicon&r=PG
p2269
sVuser_type
p2270
Vregistered
p2271
sVreputation
p2272
I12643
sVlink
p2273
Vhttp://stackoverflow.com/users/21384/andrea-ambu
p2274
sVaccept_rate
p2275
I73
sVdisplay_name
p2276
VAndrea Ambu
p2277
ssVtitle
p2278
VHow to print without newline or space?
p2279
sVlast_edit_date
p2280
I1488324924
sVquestion_id
p2281
I493386
sa(dp2282
Vbody
p2283
V<p>What is <code>__init__.py</code> for in a Python source directory?</p>\u000a
p2284
sVis_answered
p2285
I01
sVview_count
p2286
I369822
sVtags
p2287
(lp2288
Vpython
p2289
aVmodule
p2290
asVlast_activity_date
p2291
I1493178936
sVanswer_count
p2292
I9
sVcreation_date
p2293
I1232050149
sVscore
p2294
I929
sVlink
p2295
Vhttp://stackoverflow.com/questions/448271/what-is-init-py-for
p2296
sVaccepted_answer_id
p2297
I448279
sVowner
p2298
(dp2299
Vuser_id
p2300
I42974
sVprofile_image
p2301
Vhttps://www.gravatar.com/avatar/9111c5a87d559757e4b10ea2a963e6a3?s=128&d=identicon&r=PG
p2302
sVuser_type
p2303
Vregistered
p2304
sVreputation
p2305
I17398
sVlink
p2306
Vhttp://stackoverflow.com/users/42974/mat
p2307
sVaccept_rate
p2308
I80
sVdisplay_name
p2309
VMat
p2310
ssVtitle
p2311
VWhat is __init__.py for?
p2312
sVlast_edit_date
p2313
I1446417458
sVquestion_id
p2314
I448271
sa(dp2315
Vbody
p2316
V<p>It is my understanding that the <code>range()</code> function, which is actually <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range">an object type in Python 3</a>, generates its contents on the fly, similar to a generator. </p>\u000a\u000a<p>This being the case, I would have expected the following line to take an inordinate amount of time, because in order to determine whether 1 quadrillion is in the range, a quadrillion values would have to be generated: </p>\u000a\u000a<pre><code>1000000000000000 in range(1000000000000001)\u000a</code></pre>\u000a\u000a<p>Furthermore: it seems that no matter how many zeroes I add on, the calculation more or less takes the same amount of time (basically instantaneous). </p>\u000a\u000a<p>I have also tried things like this, but the calculation is still almost instant: </p>\u000a\u000a<pre><code>1000000000000000000000 in range(0,1000000000000000000001,10) # count by tens\u000a</code></pre>\u000a\u000a<p>If I try to implement my own range function, the result is not so nice!! </p>\u000a\u000a<pre><code>def my_crappy_range(N):\u000a    i = 0\u000a    while i &lt; N:\u000a        yield i\u000a        i += 1\u000a    return\u000a</code></pre>\u000a\u000a<p>What is the <code>range()</code> object doing under the hood that makes it so fast? </p>\u000a\u000a<hr>\u000a\u000a<p>EDIT: This has turned out to be a much more nuanced topic than I anticipated - there seems to be a bit of history behind the optimization of <code>range()</code>. </p>\u000a\u000a<p><a href="http://stackoverflow.com/a/30081318/2437514">Martijn Pieters' answer</a> was chosen for its completeness, but also see <a href="http://stackoverflow.com/a/30081894/2437514">abarnert's first answer</a> for a good discussion of what it means for <code>range</code> to be a full-fledged <em>sequence</em> in Python 3, and some information/warning regarding potential inconsistency for <code>__contains__</code> function optimization across Python implementations. <a href="http://stackoverflow.com/a/30088140/2437514">abarnert's other answer</a> goes into some more detail and provides links for those interested in the history behind the optimization in Python 3 (and lack of optimization of <code>xrange</code> in Python 2). Answers <a href="http://stackoverflow.com/a/30081467/2437514">by poke</a> and <a href="http://stackoverflow.com/a/30081470/2437514">by wim</a> provide the relevant C source code and explanations for those who are interested. </p>\u000a
p2317
sVis_answered
p2318
I01
sVview_count
p2319
I59998
sVtags
p2320
(lp2321
Vpython
p2322
aVperformance
p2323
aVpython-3.x
p2324
aVrange
p2325
aVpython-internals
p2326
asVlast_activity_date
p2327
I1483210348
sVanswer_count
p2328
I6
sVcreation_date
p2329
I1430926363
sVscore
p2330
I921
sVlink
p2331
Vhttp://stackoverflow.com/questions/30081275/why-is-1000000000000000-in-range1000000000000001-so-fast-in-python-3
p2332
sVaccepted_answer_id
p2333
I30081318
sVowner
p2334
(dp2335
Vuser_id
p2336
I2437514
sVprofile_image
p2337
Vhttps://i.stack.imgur.com/8QN0K.jpg?s=128&g=1
p2338
sVuser_type
p2339
Vregistered
p2340
sVreputation
p2341
I8843
sVlink
p2342
Vhttp://stackoverflow.com/users/2437514/rick-teachey
p2343
sVaccept_rate
p2344
I79
sVdisplay_name
p2345
VRick Teachey
p2346
ssVtitle
p2347
VWhy is &quot;1000000000000000 in range(1000000000000001)&quot; so fast in Python 3?
p2348
sVlast_edit_date
p2349
I1471661855
sVquestion_id
p2350
I30081275
sa(dp2351
Vclosed_date
p2352
I1384583977
sVis_answered
p2353
I01
sVclosed_reason
p2354
Vduplicate
p2355
sVview_count
p2356
I574899
sVtags
p2357
(lp2358
Vpython
p2359
aVargs
p2360
aVkwargs
p2361
asVbody
p2362
V<p>So I have difficulty with the concept of *args and **kwargs.</p>\u000a\u000a<p>So far I have learned that:</p>\u000a\u000a<ul>\u000a<li><code>*args</code> = list of arguments -as positional arguments</li>\u000a<li><code>**kwargs</code> = dictionary - whose keys become separate keyword arguments and the values become values of these arguments.</li>\u000a</ul>\u000a\u000a<p>??</p>\u000a\u000a<p>To be honest I don't understand and don't get for what programming task this would helpful. (I am sure there is, but I can't get an understanding of it.)</p>\u000a\u000a<p>Maybe:</p>\u000a\u000a<p>I think to enter lists and dictionaries as arguments of a function AND at the same time as a wildcard, so I can pass ANY argument?</p>\u000a\u000a<p>Is there a simple example on which to explain how <code>*args</code> and <code>**kwargs</code> are used?</p>\u000a\u000a<p>Also the tutorial I run through used just the "*" and a variable name. </p>\u000a\u000a<p>Is <code>*args</code> and <code>**kwargs</code> just a placeholder or do you use exactly <code>*args</code> and <code>**kwargs</code> in the code?</p>\u000a
p2363
sVlast_activity_date
p2364
I1490282158
sVaccepted_answer_id
p2365
I3394898
sVcreation_date
p2366
I1280824087
sVscore
p2367
I917
sVlink
p2368
Vhttp://stackoverflow.com/questions/3394835/args-and-kwargs
p2369
sVanswer_count
p2370
I11
sVowner
p2371
(dp2372
Vuser_id
p2373
I337247
sVprofile_image
p2374
Vhttps://www.gravatar.com/avatar/a9376981e3b5d2d0b5b4509704674e99?s=128&d=identicon&r=PG
p2375
sVuser_type
p2376
Vregistered
p2377
sVreputation
p2378
I5512
sVlink
p2379
Vhttp://stackoverflow.com/users/337247/macpython
p2380
sVaccept_rate
p2381
I89
sVdisplay_name
p2382
VMacPython
p2383
ssVtitle
p2384
V*args and **kwargs?
p2385
sVlast_edit_date
p2386
I1368776338
sVquestion_id
p2387
I3394835
sa(dp2388
Vbody
p2389
V<p>How do I delete a file or folder in Python?</p>\u000a
p2390
sVis_answered
p2391
I01
sVprotected_date
p2392
I1411660625
sVview_count
p2393
I878652
sVtags
p2394
(lp2395
Vpython
p2396
aVfile-io
p2397
aVfolder
p2398
aVdelete-file
p2399
asVlast_activity_date
p2400
I1491968404
sVaccepted_answer_id
p2401
I6996628
sVcreation_date
p2402
I1312895142
sVscore
p2403
I908
sVlink
p2404
Vhttp://stackoverflow.com/questions/6996603/how-to-delete-a-file-or-folder
p2405
sVanswer_count
p2406
I5
sVowner
p2407
(dp2408
Vuser_id
p2409
I854002
sVprofile_image
p2410
Vhttps://www.gravatar.com/avatar/3c39cfc2108eb01085e1c5dd1cced80f?s=128&d=identicon&r=PG
p2411
sVuser_type
p2412
Vregistered
p2413
sVreputation
p2414
I4605
sVlink
p2415
Vhttp://stackoverflow.com/users/854002/zygimantas
p2416
sVaccept_rate
p2417
I50
sVdisplay_name
p2418
VZygimantas
p2419
ssVtitle
p2420
VHow to delete a file or folder?
p2421
sVlast_edit_date
p2422
I1491968404
sVquestion_id
p2423
I6996603
sa(dp2424
Vbody
p2425
V<p>Could someone explain to me the meaning of <code>@classmethod</code> and <code>@staticmethod</code> in python? I need to know the difference and the meaning. </p>\u000a\u000a<p>As far as I understand, <code>@classmethod</code> tells a class that it's a method which should be inherited into subclasses, or... something. However, what's the point of that? Why not just define the class method without adding <code>@classmethod</code> or <code>@staticmethod</code> or any <code>@</code> definitions?</p>\u000a\u000a<p><strong>tl;dr:</strong> <em>when</em> should I use them, <em>why</em> should I use them, and <em>how</em> should I use them?</p>\u000a\u000a<p>I'm pretty advanced with C++, so using more advanced programming concepts shouldn't be a problem. Feel free giving me a corresponding C++ example if possible.</p>\u000a
p2426
sVis_answered
p2427
I01
sVview_count
p2428
I327062
sVtags
p2429
(lp2430
Vpython
p2431
aVoop
p2432
aVstatic-methods
p2433
aVclass-method
p2434
asVlast_activity_date
p2435
I1489966198
sVanswer_count
p2436
I7
sVcreation_date
p2437
I1346247453
sVscore
p2438
I883
sVlink
p2439
Vhttp://stackoverflow.com/questions/12179271/meaning-of-classmethod-and-staticmethod-for-beginner
p2440
sVaccepted_answer_id
p2441
I12179752
sVowner
p2442
(dp2443
Vdisplay_name
p2444
Vuser1632861
p2445
sVuser_type
p2446
Vdoes_not_exist
p2447
ssVtitle
p2448
VMeaning of @classmethod and @staticmethod for beginner?
p2449
sVlast_edit_date
p2450
I1487356989
sVquestion_id
p2451
I12179271
sa(dp2452
Vbody
p2453
V<p>What is the best way to go about calling a function given a string with the function's name in a Python program.  For example, let's say that I have a module <code>foo</code>, and I have a string whose contents are <code>"bar"</code>. What is the best way to go about calling <code>foo.bar()</code>?</p>\u000a\u000a<p>I need to get the return value of the function, which is why I don't just use <code>eval</code>. I figured out how to do it by using <code>eval</code> to define a temp function that returns the result of that function call, but I'm hoping that there is a more elegant way to do this.</p>\u000a
p2454
sVis_answered
p2455
I01
sVprotected_date
p2456
I1357513578
sVview_count
p2457
I342631
sVtags
p2458
(lp2459
Vpython
p2460
asVlast_activity_date
p2461
I1487787017
sVaccepted_answer_id
p2462
I3071
sVcreation_date
p2463
I1217993768
sVscore
p2464
I880
sVlink
p2465
Vhttp://stackoverflow.com/questions/3061/calling-a-function-of-a-module-from-a-string-with-the-functions-name-in-python
p2466
sVanswer_count
p2467
I10
sVowner
p2468
(dp2469
Vuser_id
p2470
I121
sVprofile_image
p2471
Vhttps://www.gravatar.com/avatar/176d61ba20c6d0d79524f7e1d74be970?s=128&d=identicon&r=PG
p2472
sVuser_type
p2473
Vregistered
p2474
sVreputation
p2475
I8781
sVlink
p2476
Vhttp://stackoverflow.com/users/121/ricree
p2477
sVaccept_rate
p2478
I75
sVdisplay_name
p2479
Vricree
p2480
ssVtitle
p2481
VCalling a function of a module from a string with the function&#39;s name in Python
p2482
sVlast_edit_date
p2483
I1414139009
sVquestion_id
p2484
I3061
sa(dp2485
Vbody
p2486
V<p>How do you append to the file instead of overwriting it? Is there a special function that appends to the file?</p>\u000a
p2487
sVis_answered
p2488
I01
sVview_count
p2489
I858573
sVtags
p2490
(lp2491
Vpython
p2492
aVfile
p2493
aVappend
p2494
asVlast_activity_date
p2495
I1483026661
sVanswer_count
p2496
I7
sVcreation_date
p2497
I1295194833
sVscore
p2498
I872
sVlink
p2499
Vhttp://stackoverflow.com/questions/4706499/how-do-you-append-to-a-file
p2500
sVaccepted_answer_id
p2501
I4706520
sVowner
p2502
(dp2503
Vdisplay_name
p2504
Vuser502039
p2505
sVuser_type
p2506
Vdoes_not_exist
p2507
ssVtitle
p2508
VHow do you append to a file?
p2509
sVlast_edit_date
p2510
I1482441174
sVquestion_id
p2511
I4706499
sa(dp2512
Vbody
p2513
V<p>There is no built in <code>reverse</code> function in Python's <code>str</code> object. What is the best way of implementing this?</p>\u000a\u000a<p>If supplying a very concise answer, please elaborate on it's efficiency. Is the <code>str</code> converted to a different object, etc. </p>\u000a
p2514
sVis_answered
p2515
I01
sVprotected_date
p2516
I1365668977
sVview_count
p2517
I638204
sVtags
p2518
(lp2519
Vpython
p2520
aVstring
p2521
asVlast_activity_date
p2522
I1494947366
sVaccepted_answer_id
p2523
I931095
sVcreation_date
p2524
I1243735810
sVscore
p2525
I862
sVlink
p2526
Vhttp://stackoverflow.com/questions/931092/reverse-a-string-in-python
p2527
sVanswer_count
p2528
I14
sVowner
p2529
(dp2530
Vuser_id
p2531
I9435
sVprofile_image
p2532
Vhttps://www.gravatar.com/avatar/cb70e8f4f71602cc39528b6e75c64d89?s=128&d=identicon&r=PG
p2533
sVuser_type
p2534
Vregistered
p2535
sVreputation
p2536
I10495
sVlink
p2537
Vhttp://stackoverflow.com/users/9435/oneself
p2538
sVaccept_rate
p2539
I78
sVdisplay_name
p2540
Voneself
p2541
ssVtitle
p2542
VReverse a string in Python
p2543
sVlast_edit_date
p2544
I1338203955
sVquestion_id
p2545
I931092
sa(dp2546
Vbody
p2547
V<p>Is there a way in Python to determine if an object has some attribute?  For example:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; a = SomeClass()\u000a&gt;&gt;&gt; a.someProperty = value\u000a&gt;&gt;&gt; a.property\u000aTraceback (most recent call last):\u000a  File "&lt;stdin&gt;", line 1, in &lt;module&gt;\u000aAttributeError: SomeClass instance has no attribute 'property'\u000a</code></pre>\u000a\u000a<p>How can you tell if <code>a</code> has the attribute <code>property</code> before using it?</p>\u000a
p2548
sVis_answered
p2549
I01
sVprotected_date
p2550
I1431613592
sVview_count
p2551
I402002
sVtags
p2552
(lp2553
Vpython
p2554
aVattributes
p2555
asVlast_activity_date
p2556
I1483084181
sVaccepted_answer_id
p2557
I610893
sVcreation_date
p2558
I1236177959
sVscore
p2559
I857
sVlink
p2560
Vhttp://stackoverflow.com/questions/610883/how-to-know-if-an-object-has-an-attribute-in-python
p2561
sVanswer_count
p2562
I8
sVowner
p2563
(dp2564
Vuser_id
p2565
I20601
sVprofile_image
p2566
Vhttps://i.stack.imgur.com/Z9vyi.png?s=128&g=1
p2567
sVuser_type
p2568
Vregistered
p2569
sVreputation
p2570
I9548
sVlink
p2571
Vhttp://stackoverflow.com/users/20601/lucas-gabriel-s%c3%a1nchez
p2572
sVaccept_rate
p2573
I100
sVdisplay_name
p2574
VLucas Gabriel S&#225;nchez
p2575
ssVtitle
p2576
VHow to know if an object has an attribute in Python
p2577
sVlast_edit_date
p2578
I1236178612
sVquestion_id
p2579
I610883
sa(dp2580
Vbody
p2581
V<p>How can I find all the files in a directory having the extension <code>.txt</code> in python?</p>\u000a
p2582
sVis_answered
p2583
I01
sVview_count
p2584
I766537
sVtags
p2585
(lp2586
Vpython
p2587
aVfile-io
p2588
asVlast_activity_date
p2589
I1493337855
sVanswer_count
p2590
I23
sVcreation_date
p2591
I1287450553
sVscore
p2592
I837
sVlink
p2593
Vhttp://stackoverflow.com/questions/3964681/find-all-files-in-a-directory-with-extension-txt-in-python
p2594
sVaccepted_answer_id
p2595
I3964691
sVowner
p2596
(dp2597
Vuser_id
p2598
I201140
sVprofile_image
p2599
Vhttps://www.gravatar.com/avatar/5e5ee7807a6424aa8fa4e1f7c88ba0f4?s=128&d=identicon&r=PG
p2600
sVuser_type
p2601
Vregistered
p2602
sVreputation
p2603
I9227
sVlink
p2604
Vhttp://stackoverflow.com/users/201140/usertest
p2605
sVaccept_rate
p2606
I78
sVdisplay_name
p2607
Vusertest
p2608
ssVtitle
p2609
VFind all files in a directory with extension .txt in Python
p2610
sVlast_edit_date
p2611
I1492012613
sVquestion_id
p2612
I3964681
sa(dp2613
Vclosed_date
p2614
I1470236576
sVis_answered
p2615
I01
sVprotected_date
p2616
I1485166234
sVclosed_reason
p2617
Vprimarily opinion-based
p2618
sVview_count
p2619
I173047
sVtags
p2620
(lp2621
Vpython
p2622
aVpip
p2623
aVsetuptools
p2624
aVeasy-install
p2625
aVpypi
p2626
asVbody
p2627
V<p>A <a href="http://twitter.com/jperras/statuses/18160589493" rel="noreferrer">tweet</a> reads: </p>\u000a\u000a<blockquote>\u000a  <p>Don't use easy_install, unless you\u000a  like stabbing yourself in the face.\u000a  Use pip.</p>\u000a</blockquote>\u000a\u000a<p>Why use pip over easy_install? Doesn't the <a href="http://mail.python.org/pipermail/catalog-sig/2010-June/002985.html" rel="noreferrer">fault lie with PyPI and package authors mostly</a>? If an author uploads crap source tarball (eg: missing files, no setup.py) to PyPI, then both pip and easy_install will fail. Other than cosmetic differences, why do Python people (like in the above tweet) seem to <strong>strongly</strong> favor pip over easy_install?</p>\u000a\u000a<p>(Let's assume that we're talking about easy_install from the Distribute package, that is maintained by the community)</p>\u000a
p2628
sVlast_activity_date
p2629
I1485121924
sVaccepted_answer_id
p2630
I30408520
sVcreation_date
p2631
I1278786954
sVscore
p2632
I815
sVlink
p2633
Vhttp://stackoverflow.com/questions/3220404/why-use-pip-over-easy-install
p2634
sVanswer_count
p2635
I9
sVowner
p2636
(dp2637
Vuser_id
p2638
I55246
sVprofile_image
p2639
Vhttps://i.stack.imgur.com/b1zkZ.jpg?s=128&g=1
p2640
sVuser_type
p2641
Vregistered
p2642
sVreputation
p2643
I26028
sVlink
p2644
Vhttp://stackoverflow.com/users/55246/sridhar-ratnakumar
p2645
sVaccept_rate
p2646
I70
sVdisplay_name
p2647
VSridhar Ratnakumar
p2648
ssVtitle
p2649
VWhy use pip over easy_install?
p2650
sVlast_edit_date
p2651
I1409161393
sVquestion_id
p2652
I3220404
sa(dp2653
Vbody
p2654
V<p>Project Euler and other coding contests often have a maximum time to run or people boast of how fast their particular solution runs.  With python, sometimes the approaches are somewhat kludgey - i.e., adding timing code to <code>__main__</code>.</p>\u000a\u000a<p>What is a good way to profile how long a python program takes to run?</p>\u000a
p2655
sVis_answered
p2656
I01
sVview_count
p2657
I275967
sVtags
p2658
(lp2659
Vpython
p2660
aVperformance
p2661
aVprofiling
p2662
aVtime-complexity
p2663
asVlast_activity_date
p2664
I1492915809
sVanswer_count
p2665
I21
sVcreation_date
p2666
I1235491286
sVscore
p2667
I799
sVlink
p2668
Vhttp://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script
p2669
sVaccepted_answer_id
p2670
I582337
sVowner
p2671
(dp2672
Vuser_id
p2673
I21245
sVprofile_image
p2674
Vhttps://www.gravatar.com/avatar/77a3d97a2dab188e5a351bfbd4482912?s=128&d=identicon&r=PG
p2675
sVuser_type
p2676
Vregistered
p2677
sVreputation
p2678
I19129
sVlink
p2679
Vhttp://stackoverflow.com/users/21245/chris-lawlor
p2680
sVaccept_rate
p2681
I95
sVdisplay_name
p2682
VChris Lawlor
p2683
ssVtitle
p2684
VHow can you profile a python script?
p2685
sVlast_edit_date
p2686
I1492629472
sVquestion_id
p2687
I582336
sa(dp2688
Vbody
p2689
V<p>I set an environment variable that I want to access in my Python application.  How do I get this value?</p>\u000a
p2690
sVis_answered
p2691
I01
sVview_count
p2692
I673220
sVtags
p2693
(lp2694
Vpython
p2695
aVenvironment-variables
p2696
asVlast_activity_date
p2697
I1491467721
sVanswer_count
p2698
I7
sVcreation_date
p2699
I1296911015
sVscore
p2700
I797
sVlink
p2701
Vhttp://stackoverflow.com/questions/4906977/access-environment-variables-from-python
p2702
sVaccepted_answer_id
p2703
I4907053
sVowner
p2704
(dp2705
Vuser_id
p2706
I601738
sVprofile_image
p2707
Vhttps://i.stack.imgur.com/cMSeh.jpg?s=128&g=1
p2708
sVuser_type
p2709
Vregistered
p2710
sVreputation
p2711
I4893
sVlink
p2712
Vhttp://stackoverflow.com/users/601738/amit-yadav
p2713
sVaccept_rate
p2714
I70
sVdisplay_name
p2715
VAmit Yadav
p2716
ssVtitle
p2717
VAccess environment variables from Python
p2718
sVlast_edit_date
p2719
I1465505915
sVquestion_id
p2720
I4906977
sa(dp2721
Vbody
p2722
V<p>How do I find out a name of class that created an instance of an object in Python if the function I am doing this from is the base class of which the class of the instance has been derived?</p>\u000a\u000a<p>Was thinking maybe <a href="https://docs.python.org/2/library/inspect.html" rel="noreferrer" title="inspect \u2014 Inspect live objects">the inspect module</a> might have helped me out here, but it doesn't seem to give me what I want. And short of parsing the <code>__class__</code> member, I'm not sure how to get at this information.</p>\u000a
p2723
sVis_answered
p2724
I01
sVview_count
p2725
I431879
sVtags
p2726
(lp2727
Vpython
p2728
aVintrospection
p2729
aVinstanceof
p2730
aVpython-datamodel
p2731
asVlast_activity_date
p2732
I1449813566
sVanswer_count
p2733
I6
sVcreation_date
p2734
I1233747468
sVscore
p2735
I793
sVlink
p2736
Vhttp://stackoverflow.com/questions/510972/getting-the-class-name-of-an-instance-in-python
p2737
sVaccepted_answer_id
p2738
I511059
sVowner
p2739
(dp2740
Vuser_id
p2741
I18909
sVprofile_image
p2742
Vhttps://www.gravatar.com/avatar/12726d4042ced93e82274ff5974d9238?s=128&d=identicon&r=PG
p2743
sVuser_type
p2744
Vregistered
p2745
sVreputation
p2746
I8098
sVlink
p2747
Vhttp://stackoverflow.com/users/18909/dan
p2748
sVaccept_rate
p2749
I90
sVdisplay_name
p2750
VDan
p2751
ssVtitle
p2752
VGetting the class name of an instance in Python
p2753
sVlast_edit_date
p2754
I1445071811
sVquestion_id
p2755
I510972
sa(dp2756
Vbody
p2757
V<p>How to remove an element from a list by index in Python?</p>\u000a\u000a<p>I found the <code>list.remove</code> method, but say I want to remove the last element, how do I do this? It seems like the default remove searches the list, but I don't want any search to be performed.</p>\u000a
p2758
sVis_answered
p2759
I01
sVprotected_date
p2760
I1492300694
sVview_count
p2761
I1257399
sVtags
p2762
(lp2763
Vpython
p2764
aVlist
p2765
asVlast_activity_date
p2766
I1494768554
sVaccepted_answer_id
p2767
I627453
sVcreation_date
p2768
I1236622571
sVscore
p2769
I789
sVlink
p2770
Vhttp://stackoverflow.com/questions/627435/how-to-remove-an-element-from-a-list-by-index-in-python
p2771
sVanswer_count
p2772
I12
sVowner
p2773
(dp2774
Vuser_id
p2775
I51816
sVprofile_image
p2776
Vhttps://www.gravatar.com/avatar/0e54bb28182bcd9df39704751306df27?s=128&d=identicon&r=PG
p2777
sVuser_type
p2778
Vregistered
p2779
sVreputation
p2780
I72530
sVlink
p2781
Vhttp://stackoverflow.com/users/51816/joan-venge
p2782
sVaccept_rate
p2783
I82
sVdisplay_name
p2784
VJoan Venge
p2785
ssVtitle
p2786
VHow to remove an element from a list by index in Python?
p2787
sVlast_edit_date
p2788
I1418768561
sVquestion_id
p2789
I627435
sa(dp2790
Vbody
p2791
V<p>How do I connect to a MySQL database using a python program?</p>\u000a
p2792
sVis_answered
p2793
I01
sVprotected_date
p2794
I1393508407
sVview_count
p2795
I719728
sVtags
p2796
(lp2797
Vpython
p2798
aVmysql
p2799
asVlast_activity_date
p2800
I1482822061
sVanswer_count
p2801
I12
sVcreation_date
p2802
I1229464149
sVscore
p2803
I787
sVlink
p2804
Vhttp://stackoverflow.com/questions/372885/how-do-i-connect-to-a-mysql-database-in-python
p2805
sVowner
p2806
(dp2807
Vdisplay_name
p2808
VMarc Lincoln
p2809
sVuser_type
p2810
Vdoes_not_exist
p2811
ssVtitle
p2812
VHow do I connect to a MySQL Database in Python?
p2813
sVlast_edit_date
p2814
I1311875329
sVquestion_id
p2815
I372885
sa(dp2816
Vbody
p2817
V<p>I like the Python list comprehension syntax.</p>\u000a\u000a<p>Can it be used to create dictionaries too? For example, by iterating over pairs of keys and values:</p>\u000a\u000a<pre><code>mydict = {(k,v) for (k,v) in blah blah blah}  # doesn't work\u000a</code></pre>\u000a
p2818
sVis_answered
p2819
I01
sVview_count
p2820
I414803
sVtags
p2821
(lp2822
Vpython
p2823
aVdictionary
p2824
aVlist-comprehension
p2825
aVlanguage-features
p2826
aVdict-comprehension
p2827
asVlast_activity_date
p2828
I1493403399
sVanswer_count
p2829
I9
sVcreation_date
p2830
I1258452473
sVscore
p2831
I785
sVlink
p2832
Vhttp://stackoverflow.com/questions/1747817/create-a-dictionary-with-list-comprehension-in-python
p2833
sVaccepted_answer_id
p2834
I1747827
sVowner
p2835
(dp2836
Vuser_id
p2837
I63051
sVprofile_image
p2838
Vhttps://www.gravatar.com/avatar/b4b87a82355f286bb410cc1854389226?s=128&d=identicon&r=PG
p2839
sVuser_type
p2840
Vregistered
p2841
sVreputation
p2842
I72815
sVlink
p2843
Vhttp://stackoverflow.com/users/63051/flybywire
p2844
sVaccept_rate
p2845
I95
sVdisplay_name
p2846
Vflybywire
p2847
ssVtitle
p2848
VCreate a dictionary with list comprehension in Python
p2849
sVlast_edit_date
p2850
I1483480799
sVquestion_id
p2851
I1747817
sa(dp2852
Vbody
p2853
V<p>I'm using virtualenv and the virtualenvwrapper. I can switch between virtualenv's just fine using the workon command. </p>\u000a\u000a<pre><code>me@mymachine:~$ workon env1\u000a(env1)me@mymachine:~$ workon env2\u000a(env2)me@mymachine:~$ workon env1\u000a(env1)me@mymachine:~$ \u000a</code></pre>\u000a\u000a<p>However, how do I exit all virtual machines and workon my real machine again? Right now, the only way I have of getting back to</p>\u000a\u000a<pre><code>me@mymachine:~$ \u000a</code></pre>\u000a\u000a<p>is to exit the shell and start a new one. That's kind of annoying. Is there a command to workon "nothing", and if so, what is it? If such a command does not exist, how would I go about creating it?</p>\u000a
p2854
sVis_answered
p2855
I01
sVprotected_date
p2856
I1430935181
sVview_count
p2857
I249963
sVtags
p2858
(lp2859
Vpython
p2860
aVvirtualenv
p2861
aVvirtualenvwrapper
p2862
asVlast_activity_date
p2863
I1490795480
sVaccepted_answer_id
p2864
I990779
sVcreation_date
p2865
I1244902536
sVscore
p2866
I784
sVlink
p2867
Vhttp://stackoverflow.com/questions/990754/how-to-leave-exit-deactivate-a-python-virtualenv
p2868
sVanswer_count
p2869
I7
sVowner
p2870
(dp2871
Vuser_id
p2872
I65326
sVprofile_image
p2873
Vhttps://www.gravatar.com/avatar/073bb762e6c77ac6eee6cadeadf81aae?s=128&d=identicon&r=PG
p2874
sVuser_type
p2875
Vregistered
p2876
sVreputation
p2877
I6810
sVlink
p2878
Vhttp://stackoverflow.com/users/65326/apreche
p2879
sVaccept_rate
p2880
I92
sVdisplay_name
p2881
VApreche
p2882
ssVtitle
p2883
VHow to leave/exit/deactivate a python virtualenv?
p2884
sVlast_edit_date
p2885
I1472661769
sVquestion_id
p2886
I990754
sa(dp2887
Vbody
p2888
V<p>I want <code>a</code> to be rounded to <em>13.95</em>.</p>\u000a\u000a<pre><code>&gt;&gt;&gt; a\u000a13.949999999999999\u000a&gt;&gt;&gt; round(a, 2)\u000a13.949999999999999\u000a</code></pre>\u000a\u000a<p>The <a href="https://docs.python.org/2/library/functions.html#round" rel="noreferrer"><code>round</code></a> function does not work the way I expected.</p>\u000a
p2889
sVis_answered
p2890
I01
sVprotected_date
p2891
I1398404199
sVview_count
p2892
I1282973
sVtags
p2893
(lp2894
Vpython
p2895
aVfloating-point
p2896
aVprecision
p2897
asVlast_activity_date
p2898
I1483181503
sVanswer_count
p2899
I14
sVcreation_date
p2900
I1232302601
sVscore
p2901
I781
sVlink
p2902
Vhttp://stackoverflow.com/questions/455612/limiting-floats-to-two-decimal-points
p2903
sVowner
p2904
(dp2905
Vdisplay_name
p2906
Vkevin
p2907
sVuser_type
p2908
Vdoes_not_exist
p2909
ssVtitle
p2910
VLimiting floats to two decimal points
p2911
sVlast_edit_date
p2912
I1455070419
sVquestion_id
p2913
I455612
sa(dp2914
Vbody
p2915
V<p>I want to generate a string of size N.</p>\u000a\u000a<p>It should be made up of numbers and uppercase English letters such as:</p>\u000a\u000a<ul>\u000a<li>6U1S75</li>\u000a<li>4Z4UKK</li>\u000a<li>U911K4</li>\u000a</ul>\u000a\u000a<p>How can I achieve this in a <a href="https://en.wikipedia.org/wiki/Python_%28programming_language%29#Features_and_philosophy">pythonic</a> way?</p>\u000a
p2916
sVis_answered
p2917
I01
sVview_count
p2918
I429208
sVtags
p2919
(lp2920
Vpython
p2921
aVstring
p2922
aVrandom
p2923
asVlast_activity_date
p2924
I1491842221
sVanswer_count
p2925
I21
sVcreation_date
p2926
I1266063838
sVscore
p2927
I779
sVlink
p2928
Vhttp://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python
p2929
sVaccepted_answer_id
p2930
I2257449
sVowner
p2931
(dp2932
Vuser_id
p2933
I151937
sVprofile_image
p2934
Vhttps://www.gravatar.com/avatar/eb149575d3dcbd3aca84cc4d9d689474?s=128&d=identicon&r=PG
p2935
sVuser_type
p2936
Vregistered
p2937
sVreputation
p2938
I12942
sVlink
p2939
Vhttp://stackoverflow.com/users/151937/hellnar
p2940
sVaccept_rate
p2941
I80
sVdisplay_name
p2942
VHellnar
p2943
ssVtitle
p2944
VRandom string generation with upper case letters and digits in Python
p2945
sVlast_edit_date
p2946
I1401535137
sVquestion_id
p2947
I2257441
sa(dp2948
Vbody
p2949
V<p>I've come across at least three ways to print to stderr:</p>\u000a\u000a<pre><code> import sys\u000a\u000a print &gt;&gt; sys.stderr, 'spam'\u000a\u000a sys.stderr.write('spam\u005cn')\u000a\u000a from __future__ import print_function\u000a print('spam', file=sys.stderr)\u000a</code></pre>\u000a\u000a<p>It seems to contradict <em>zen of Python #13</em> <sup>\u2020</sup>, so what's the preferred way to do it? Are there any advantages or disadvantages to one way or the other?</p>\u000a\u000a<p><sup>\u2020</sup> <sub>There should be one \u2014 and preferably only one \u2014 obvious way to do it.</sub></p>\u000a
p2950
sVis_answered
p2951
I01
sVview_count
p2952
I427545
sVtags
p2953
(lp2954
Vpython
p2955
aVprinting
p2956
aVstderr
p2957
aVzen
p2958
asVlast_activity_date
p2959
I1489880452
sVanswer_count
p2960
I12
sVcreation_date
p2961
I1302137950
sVscore
p2962
I763
sVlink
p2963
Vhttp://stackoverflow.com/questions/5574702/how-to-print-to-stderr-in-python
p2964
sVaccepted_answer_id
p2965
I14981125
sVowner
p2966
(dp2967
Vuser_id
p2968
I674039
sVprofile_image
p2969
Vhttps://i.stack.imgur.com/leoFi.gif?s=128&g=1
p2970
sVuser_type
p2971
Vregistered
p2972
sVreputation
p2973
I97537
sVlink
p2974
Vhttp://stackoverflow.com/users/674039/wim
p2975
sVaccept_rate
p2976
I95
sVdisplay_name
p2977
Vwim
p2978
ssVtitle
p2979
VHow to print to stderr in Python?
p2980
sVlast_edit_date
p2981
I1434925673
sVquestion_id
p2982
I5574702
sa(dp2983
Vbody
p2984
V<p>Given an item, how can I count its occurrences in a list in Python?</p>\u000a
p2985
sVis_answered
p2986
I01
sVprotected_date
p2987
I1460561054
sVview_count
p2988
I619327
sVtags
p2989
(lp2990
Vpython
p2991
aVlist
p2992
aVcount
p2993
asVlast_activity_date
p2994
I1494451306
sVaccepted_answer_id
p2995
I2600208
sVcreation_date
p2996
I1270733400
sVscore
p2997
I762
sVlink
p2998
Vhttp://stackoverflow.com/questions/2600191/how-can-i-count-the-occurrences-of-a-list-item-in-python
p2999
sVanswer_count
p3000
I14
sVowner
p3001
(dp3002
Vuser_id
p3003
I222893
sVprofile_image
p3004
Vhttps://www.gravatar.com/avatar/255b0472c4482c3ea433ab84b4e742e8?s=128&d=identicon&r=PG
p3005
sVuser_type
p3006
Vregistered
p3007
sVreputation
p3008
I6290
sVlink
p3009
Vhttp://stackoverflow.com/users/222893/weakish
p3010
sVaccept_rate
p3011
I73
sVdisplay_name
p3012
Vweakish
p3013
ssVtitle
p3014
VHow can I count the occurrences of a list item in Python?
p3015
sVlast_edit_date
p3016
I1461794912
sVquestion_id
p3017
I2600191
sa(dp3018
Vbody
p3019
V<p>What is the most pythonic way to pad a numeric string with zeroes to the left, i.e., so the numeric string has a specific length?</p>\u000a
p3020
sVis_answered
p3021
I01
sVprotected_date
p3022
I1472565382
sVview_count
p3023
I390539
sVtags
p3024
(lp3025
Vpython
p3026
aVstring
p3027
asVlast_activity_date
p3028
I1486476961
sVaccepted_answer_id
p3029
I339013
sVcreation_date
p3030
I1228343991
sVscore
p3031
I761
sVlink
p3032
Vhttp://stackoverflow.com/questions/339007/nicest-way-to-pad-zeroes-to-string
p3033
sVanswer_count
p3034
I11
sVowner
p3035
(dp3036
Vdisplay_name
p3037
VFaisal
p3038
sVuser_type
p3039
Vdoes_not_exist
p3040
ssVtitle
p3041
VNicest way to pad zeroes to string
p3042
sVlast_edit_date
p3043
I1486476961
sVquestion_id
p3044
I339007
sa(dp3045
Vbody
p3046
V<p>I want to convert an integer to a string in Python. I am typecasting it in vain:</p>\u000a\u000a<pre><code>t=raw_input()\u000ac=[]\u000afor j in range(0,int(t)):\u000a    n=raw_input()\u000a    a=[]\u000a    a,b= (int(i) for i in n.split(' '))\u000a    d=pow(a,b)\u000a    d.str()\u000a    c.append(d[0])\u000afor j in c:\u000a    print j\u000a</code></pre>\u000a\u000a<p>When I try to convert it to string, it's showing an error like <code>int</code> doesn't have any attribute called <code>str</code>.</p>\u000a
p3047
sVis_answered
p3048
I01
sVprotected_date
p3049
I1428257702
sVview_count
p3050
I1780966
sVtags
p3051
(lp3052
Vpython
p3053
asVlast_activity_date
p3054
I1479761588
sVaccepted_answer_id
p3055
I961638
sVcreation_date
p3056
I1244370158
sVscore
p3057
I758
sVlink
p3058
Vhttp://stackoverflow.com/questions/961632/converting-integer-to-string-in-python
p3059
sVanswer_count
p3060
I7
sVowner
p3061
(dp3062
Vuser_id
p3063
I105167
sVprofile_image
p3064
Vhttps://www.gravatar.com/avatar/ddd12a4114cca3b616111d03d8566b94?s=128&d=identicon&r=PG
p3065
sVuser_type
p3066
Vregistered
p3067
sVreputation
p3068
I9217
sVlink
p3069
Vhttp://stackoverflow.com/users/105167/hick
p3070
sVaccept_rate
p3071
I65
sVdisplay_name
p3072
VHick
p3073
ssVtitle
p3074
VConverting integer to string in Python?
p3075
sVlast_edit_date
p3076
I1430819471
sVquestion_id
p3077
I961632
sa(dp3078
Vbody
p3079
V<p>How do I see the type of a variable whether it is unsigned 32 bit, signed 16 bit, etc.?</p>\u000a\u000a<p>How do I view it?</p>\u000a
p3080
sVis_answered
p3081
I01
sVprotected_date
p3082
I1395277936
sVview_count
p3083
I995720
sVtags
p3084
(lp3085
Vpython
p3086
aVtypes
p3087
aVunsigned
p3088
aVsigned
p3089
aV16-bit
p3090
asVlast_activity_date
p3091
I1495041816
sVanswer_count
p3092
I13
sVcreation_date
p3093
I1230710337
sVscore
p3094
I754
sVlink
p3095
Vhttp://stackoverflow.com/questions/402504/how-to-determine-a-variables-type
p3096
sVowner
p3097
(dp3098
Vuser_id
p3099
I46646
sVprofile_image
p3100
Vhttps://www.gravatar.com/avatar/a1e278de9bdbf3ecd96d0d786fa97392?s=128&d=identicon&r=PG
p3101
sVuser_type
p3102
Vregistered
p3103
sVreputation
p3104
I32428
sVlink
p3105
Vhttp://stackoverflow.com/users/46646/user46646
p3106
sVaccept_rate
p3107
I33
sVdisplay_name
p3108
Vuser46646
p3109
ssVtitle
p3110
VHow to determine a variable&#39;s type?
p3111
sVlast_edit_date
p3112
I1490391791
sVquestion_id
p3113
I402504
sa(dp3114
Vcommunity_owned_date
p3115
I1255522080
sVis_answered
p3116
I01
sVview_count
p3117
I195068
sVtags
p3118
(lp3119
Vpython
p3120
aVnaming-conventions
p3121
aVprivate
p3122
aVunderscores
p3123
aVdouble-underscore
p3124
asVbody
p3125
V<p>I want to clear this up once and for all. Can someone please explain the exact meaning of having leading underscores before an object's name in Python? Also explain the difference between a single and a double leading underscore. Also, does that meaning stay the same whether the object in question is a variable, a function, a method, etc?</p>\u000a
p3126
sVlast_activity_date
p3127
I1486908935
sVanswer_count
p3128
I11
sVcreation_date
p3129
I1250701917
sVscore
p3130
I750
sVlink
p3131
Vhttp://stackoverflow.com/questions/1301346/what-is-the-meaning-of-a-single-and-a-double-underscore-before-an-object-name
p3132
sVaccepted_answer_id
p3133
I1301369
sVowner
p3134
(dp3135
Vuser_id
p3136
I76701
sVprofile_image
p3137
Vhttps://www.gravatar.com/avatar/d24c45635a5171615a7cdb936f36daad?s=128&d=identicon&r=PG
p3138
sVuser_type
p3139
Vregistered
p3140
sVreputation
p3141
I19102
sVlink
p3142
Vhttp://stackoverflow.com/users/76701/ram-rachum
p3143
sVaccept_rate
p3144
I72
sVdisplay_name
p3145
VRam Rachum
p3146
ssVtitle
p3147
VWhat is the meaning of a single- and a double-underscore before an object name?
p3148
sVlast_edit_date
p3149
I1486908935
sVquestion_id
p3150
I1301346
sa(dp3151
Vbody
p3152
V<p>I tried to install the Python package <a href="https://pypi.python.org/pypi/dulwich" rel="noreferrer">dulwich</a>:</p>\u000a\u000a<pre><code>pip install dulwich\u000a</code></pre>\u000a\u000a<p>But I get a cryptic error message:</p>\u000a\u000a<pre><code>error: Unable to find vcvarsall.bat\u000a</code></pre>\u000a\u000a<p>The same happens if I try installing the package manually:</p>\u000a\u000a<pre><code>&gt; python setup.py install\u000arunning build_ext\u000abuilding 'dulwich._objects' extension\u000aerror: Unable to find vcvarsall.bat\u000a</code></pre>\u000a
p3153
sVis_answered
p3154
I01
sVprotected_date
p3155
I1376370329
sVview_count
p3156
I708969
sVtags
p3157
(lp3158
Vpython
p3159
aVwindows
p3160
aVpip
p3161
aVsetup.py
p3162
asVlast_activity_date
p3163
I1495100464
sVanswer_count
p3164
I37
sVcreation_date
p3165
I1273659875
sVscore
p3166
I742
sVlink
p3167
Vhttp://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat
p3168
sVowner
p3169
(dp3170
Vuser_id
p3171
I339192
sVprofile_image
p3172
Vhttps://www.gravatar.com/avatar/445b7bcd99d19385d700e84945fffc88?s=128&d=identicon&r=PG
p3173
sVuser_type
p3174
Vunregistered
p3175
sVreputation
p3176
I3711
sVlink
p3177
Vhttp://stackoverflow.com/users/339192/okada
p3178
sVdisplay_name
p3179
Vokada
p3180
ssVtitle
p3181
Verror: Unable to find vcvarsall.bat
p3182
sVlast_edit_date
p3183
I1399118576
sVquestion_id
p3184
I2817869
sa(dp3185
Vclosed_date
p3186
I1465452796
sVis_answered
p3187
I01
sVclosed_reason
p3188
Vtoo broad
p3189
sVview_count
p3190
I112894
sVtags
p3191
(lp3192
Vpython
p3193
aVdjango
p3194
aVweb-applications
p3195
aVscalability
p3196
asVbody
p3197
V<p>I'm building a web application with Django. The reasons I chose Django were:</p>\u000a\u000a<ul>\u000a<li>I wanted to work with free/open-source tools.</li>\u000a<li>I like Python and feel it's a "long term" language, whereas regarding Ruby I wasn't sure, and PHP seemed like a huge hassle to learn.</li>\u000a<li>I'm building a prototype for an idea and wasn't thinking too much about the future. Development speed was the main factor, and I already knew Python.</li>\u000a<li>I knew the migration to Google App Engine would be easier should I choose to do so in the future.</li>\u000a<li>I heard Django was "nice".</li>\u000a</ul>\u000a\u000a<p>Now that I'm getting closer to thinking about publishing my work, I start being concerned about scale. The only information I found about the scaling capabilities of Django is provided by the Django team (I'm not saying anything to disregard them, but this is clearly not objective information...).</p>\u000a\u000a<p>My questions:</p>\u000a\u000a<ul>\u000a<li>What's the "largest" site that's built on Django today? (I measure size mostly by user traffic)</li>\u000a<li>Can Django deal with 100,000 users daily, each visiting the site for a couple of hours?</li>\u000a<li>Could a site like Stack Overflow run on Django?</li>\u000a</ul>\u000a
p3198
sVlast_activity_date
p3199
I1476455817
sVaccepted_answer_id
p3200
I886645
sVcreation_date
p3201
I1242796075
sVscore
p3202
I728
sVlink
p3203
Vhttp://stackoverflow.com/questions/886221/does-django-scale
p3204
sVanswer_count
p3205
I31
sVowner
p3206
(dp3207
Vuser_id
p3208
I103532
sVprofile_image
p3209
Vhttps://www.gravatar.com/avatar/c68b04ee740b7ef9284da1b7c89aa98c?s=128&d=identicon&r=PG
p3210
sVuser_type
p3211
Vregistered
p3212
sVreputation
p3213
I14235
sVlink
p3214
Vhttp://stackoverflow.com/users/103532/roee-adler
p3215
sVaccept_rate
p3216
I91
sVdisplay_name
p3217
VRoee Adler
p3218
ssVtitle
p3219
VDoes Django scale?
p3220
sVlast_edit_date
p3221
I1450508930
sVquestion_id
p3222
I886221
sa(dp3223
Vclosed_date
p3224
I1368350356
sVis_answered
p3225
I01
sVclosed_reason
p3226
Vnot constructive
p3227
sVview_count
p3228
I290284
sVtags
p3229
(lp3230
Vpython
p3231
aVcoding-style
p3232
asVbody
p3233
V<p>According to the documentation, they're pretty much interchangeable.  Is there a stylistic reason to use one over the other?</p>\u000a
p3234
sVlast_activity_date
p3235
I1467303838
sVaccepted_answer_id
p3236
I56190
sVcreation_date
p3237
I1221121135
sVscore
p3238
I718
sVlink
p3239
Vhttp://stackoverflow.com/questions/56011/single-quotes-vs-double-quotes-in-python
p3240
sVanswer_count
p3241
I19
sVowner
p3242
(dp3243
Vuser_id
p3244
I4883
sVprofile_image
p3245
Vhttps://www.gravatar.com/avatar/a92525f049e20db8f4ce3d62f3f0bb2b?s=128&d=identicon&r=PG
p3246
sVuser_type
p3247
Vregistered
p3248
sVreputation
p3249
I101077
sVlink
p3250
Vhttp://stackoverflow.com/users/4883/readonly
p3251
sVaccept_rate
p3252
I82
sVdisplay_name
p3253
VReadonly
p3254
ssVtitle
p3255
VSingle quotes vs. double quotes in Python
p3256
sVlocked_date
p3257
I1402200852
sVquestion_id
p3258
I56011
sa(dp3259
Vbody
p3260
V<p>I'm using this code to get standard output from an external program:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; from subprocess import *\u000a&gt;&gt;&gt; command_stdout = Popen(['ls', '-l'], stdout=PIPE).communicate()[0]\u000a</code></pre>\u000a\u000a<p>The communicate() method returns an array of bytes:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; command_stdout\u000ab'total 0\u005cn-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1\u005cn-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2\u005cn'\u000a</code></pre>\u000a\u000a<p>However, I'd like to work with the output as a normal Python string. So that I could print it like this:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; print(command_stdout)\u000a-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1\u000a-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2\u000a</code></pre>\u000a\u000a<p>I thought that's what the <a href="http://docs.python.org/3.0/library/binascii.html?highlight=b2a#binascii.b2a_qp" rel="noreferrer">binascii.b2a_qp()</a> method is for, but when I tried it, I got the same byte array again:</p>\u000a\u000a<pre><code>&gt;&gt;&gt; binascii.b2a_qp(command_stdout)\u000ab'total 0\u005cn-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file1\u005cn-rw-rw-r-- 1 thomas thomas 0 Mar  3 07:03 file2\u005cn'\u000a</code></pre>\u000a\u000a<p>Does anybody know how to convert the bytes value back to string? I mean, using the "batteries" instead of doing it manually. And I'd like it to be ok with Python 3.</p>\u000a
p3261
sVis_answered
p3262
I01
sVprotected_date
p3263
I1485095344
sVview_count
p3264
I635642
sVtags
p3265
(lp3266
Vpython
p3267
aVstring
p3268
aVpython-3.x
p3269
asVlast_activity_date
p3270
I1490151277
sVaccepted_answer_id
p3271
I606199
sVcreation_date
p3272
I1236082981
sVscore
p3273
I714
sVlink
p3274
Vhttp://stackoverflow.com/questions/606191/convert-bytes-to-a-python-string
p3275
sVanswer_count
p3276
I12
sVowner
p3277
(dp3278
Vuser_id
p3279
I2239
sVprofile_image
p3280
Vhttps://www.gravatar.com/avatar/57ea101e48765b806d036d536abece6f?s=128&d=identicon&r=PG
p3281
sVuser_type
p3282
Vregistered
p3283
sVreputation
p3284
I7562
sVlink
p3285
Vhttp://stackoverflow.com/users/2239/tomas-sedovic
p3286
sVaccept_rate
p3287
I55
sVdisplay_name
p3288
VTomas Sedovic
p3289
ssVtitle
p3290
VConvert bytes to a Python string
p3291
sVlast_edit_date
p3292
I1409681746
sVquestion_id
p3293
I606191
sa(dp3294
Vbody
p3295
V<p>Is there a function that will trim not only spaces for whitespace, but also tabs?</p>\u000a
p3296
sVis_answered
p3297
I01
sVview_count
p3298
I693948
sVtags
p3299
(lp3300
Vpython
p3301
aVstring
p3302
aVtrim
p3303
aVstrip
p3304
asVlast_activity_date
p3305
I1482117462
sVanswer_count
p3306
I11
sVcreation_date
p3307
I1248641678
sVscore
p3308
I712
sVlink
p3309
Vhttp://stackoverflow.com/questions/1185524/how-to-trim-whitespace-including-tabs
p3310
sVaccepted_answer_id
p3311
I1185529
sVowner
p3312
(dp3313
Vuser_id
p3314
I104060
sVprofile_image
p3315
Vhttps://www.gravatar.com/avatar/c4f6bdabaa3fc338779a568bff36a1f2?s=128&d=identicon&r=PG
p3316
sVuser_type
p3317
Vregistered
p3318
sVreputation
p3319
I6674
sVlink
p3320
Vhttp://stackoverflow.com/users/104060/chris
p3321
sVaccept_rate
p3322
I82
sVdisplay_name
p3323
VChris
p3324
ssVtitle
p3325
VHow to trim whitespace (including tabs)?
p3326
sVlast_edit_date
p3327
I1453193046
sVquestion_id
p3328
I1185524
sa(dp3329
Vbody
p3330
V<p>I have this JSON in a file:</p>\u000a\u000a<pre class="lang-json prettyprint-override"><code>{\u000a    "maps": [\u000a        {\u000a            "id": "blabla",\u000a            "iscategorical": "0"\u000a        },\u000a        {\u000a            "id": "blabla",\u000a            "iscategorical": "0"\u000a        }\u000a    ],\u000a    "masks": [\u000a        "id": "valore"\u000a    ],\u000a    "om_points": "value",\u000a    "parameters": [\u000a        "id": "valore"\u000a    ]\u000a}\u000a</code></pre>\u000a\u000a<p>I wrote this script which prints all of the json text:</p>\u000a\u000a<pre><code>json_data=open(file_directory).read()\u000a\u000adata = json.loads(json_data)\u000apprint(data)\u000a</code></pre>\u000a\u000a<p>How can I parse the file and extract single values?</p>\u000a
p3331
sVis_answered
p3332
I01
sVprotected_date
p3333
I1390731884
sVview_count
p3334
I1190359
sVtags
p3335
(lp3336
Vpython
p3337
aVjson
p3338
aVparsing
p3339
asVlast_activity_date
p3340
I1493142170
sVaccepted_answer_id
p3341
I2835672
sVcreation_date
p3342
I1273852460
sVscore
p3343
I707
sVlink
p3344
Vhttp://stackoverflow.com/questions/2835559/parsing-values-from-a-json-file-using-python
p3345
sVanswer_count
p3346
I6
sVowner
p3347
(dp3348
Vuser_id
p3349
I453712
sVprofile_image
p3350
Vhttps://www.gravatar.com/avatar/5f1aff511c5c9b3e8c04d0d00fa3f9ef?s=128&d=identicon&r=PG
p3351
sVuser_type
p3352
Vregistered
p3353
sVreputation
p3354
I6530
sVlink
p3355
Vhttp://stackoverflow.com/users/453712/michele
p3356
sVaccept_rate
p3357
I77
sVdisplay_name
p3358
Vmichele
p3359
ssVtitle
p3360
VParsing values from a JSON file using Python?
p3361
sVlast_edit_date
p3362
I1485161866
sVquestion_id
p3363
I2835559
sa(dp3364
Vbody
p3365
V<p>What is the difference between old style and new style classes in Python?  Is there ever a reason to use old-style classes these days?</p>\u000a
p3366
sVis_answered
p3367
I01
sVprotected_date
p3368
I1485979710
sVview_count
p3369
I145137
sVtags
p3370
(lp3371
Vpython
p3372
aVclass
p3373
aVoop
p3374
aVtypes
p3375
aVnew-style-class
p3376
asVlast_activity_date
p3377
I1489517081
sVaccepted_answer_id
p3378
I54873
sVcreation_date
p3379
I1221069687
sVscore
p3380
I704
sVlink
p3381
Vhttp://stackoverflow.com/questions/54867/what-is-the-difference-between-old-style-and-new-style-classes-in-python
p3382
sVanswer_count
p3383
I9
sVowner
p3384
(dp3385
Vuser_id
p3386
I4883
sVprofile_image
p3387
Vhttps://www.gravatar.com/avatar/a92525f049e20db8f4ce3d62f3f0bb2b?s=128&d=identicon&r=PG
p3388
sVuser_type
p3389
Vregistered
p3390
sVreputation
p3391
I101077
sVlink
p3392
Vhttp://stackoverflow.com/users/4883/readonly
p3393
sVaccept_rate
p3394
I82
sVdisplay_name
p3395
VReadonly
p3396
ssVtitle
p3397
VWhat is the difference between old style and new style classes in Python?
p3398
sVlast_edit_date
p3399
I1438770711
sVquestion_id
p3400
I54867
sa(dp3401
Vbody
p3402
V<p>How do I remove leading and trailing whitespace from a string in Python?</p>\u000a\u000a<p>For example:</p>\u000a\u000a<pre><code>" Hello " --&gt; "Hello"\u000a" Hello"  --&gt; "Hello"\u000a"Hello "  --&gt; "Hello"\u000a"Bob has a cat" --&gt; "Bob has a cat"\u000a</code></pre>\u000a
p3403
sVis_answered
p3404
I01
sVview_count
p3405
I693870
sVtags
p3406
(lp3407
Vpython
p3408
aVstring
p3409
aVtrim
p3410
asVlast_activity_date
p3411
I1472594104
sVanswer_count
p3412
I5
sVcreation_date
p3413
I1239995766
sVscore
p3414
I696
sVlink
p3415
Vhttp://stackoverflow.com/questions/761804/trimming-a-string-in-python
p3416
sVaccepted_answer_id
p3417
I761825
sVowner
p3418
(dp3419
Vdisplay_name
p3420
Vrobert
p3421
sVuser_type
p3422
Vdoes_not_exist
p3423
ssVtitle
p3424
VTrimming a string in Python
p3425
sVlast_edit_date
p3426
I1420813709
sVquestion_id
p3427
I761804
sa(dp3428
Vbody
p3429
V<p>How do I force Python's print function to output to the screen?</p>\u000a\u000a<p><sub>This is not a duplicate of <a href="http://stackoverflow.com/questions/107705/python-output-buffering">Disable output buffering</a> - the linked question is attempting unbuffered output, while this is more general. The top answers in that question are too powerful or involved for this one (they're not good answers for this), and this question can be found on Google by a relative newbie.</sub></p>\u000a
p3430
sVis_answered
p3431
I01
sVview_count
p3432
I393559
sVtags
p3433
(lp3434
Vpython
p3435
aVprinting
p3436
aVflush
p3437
asVlast_activity_date
p3438
I1493585592
sVanswer_count
p3439
I14
sVcreation_date
p3440
I1224784779
sVscore
p3441
I691
sVlink
p3442
Vhttp://stackoverflow.com/questions/230751/how-to-flush-output-of-python-print
p3443
sVaccepted_answer_id
p3444
I230774
sVowner
p3445
(dp3446
Vuser_id
p3447
I8835
sVprofile_image
p3448
Vhttps://www.gravatar.com/avatar/2e719deca00d05162018ff4c3b94294b?s=128&d=identicon&r=PG
p3449
sVuser_type
p3450
Vregistered
p3451
sVreputation
p3452
I3812
sVlink
p3453
Vhttp://stackoverflow.com/users/8835/walter-nissen
p3454
sVaccept_rate
p3455
I64
sVdisplay_name
p3456
VWalter Nissen
p3457
ssVtitle
p3458
VHow to flush output of Python print?
p3459
sVlast_edit_date
p3460
I1481297417
sVquestion_id
p3461
I230751
sasVquota_max
p3462
I300
sVquota_remaining
p3463
I299
s.